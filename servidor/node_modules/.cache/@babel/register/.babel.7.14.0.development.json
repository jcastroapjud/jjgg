{
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"filename\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\app.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _expressFileUpload = _interopRequireDefault(require(\"express-fileUpload\"));\n\nvar _connectHistoryApiFallback = _interopRequireDefault(require(\"connect-history-api-fallback\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); //Middlewares\n\napp.use((0, _morgan[\"default\"])('tiny'));\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n}));\napp.use((0, _expressFileUpload[\"default\"])({\n  useTempFiles: true\n}));\napp.use((0, _connectHistoryApiFallback[\"default\"])());\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'public')));\napp.get('/', function (req, res) {\n  res.send('Hello world');\n}); //routes\n\napp.use('/', require('./routes/inventario.routes'));\napp.set('port', process.env.PORT || 3000);\napp.listen(app.get('port'), function () {\n  console.log('Server on port ' + app.get('port'));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInVzZVRlbXBGaWxlcyIsInBhdGgiLCJqb2luIiwiX19kaXJuYW1lIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsInJlcXVpcmUiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVosQyxDQUVBOztBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSx3QkFBTyxNQUFQLENBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFRRSxVQUFSLENBQW1CO0FBQUNDLEVBQUFBLFFBQVEsRUFBRTtBQUFYLENBQW5CLENBQVI7QUFDQUwsR0FBRyxDQUFDQyxHQUFKLENBQVEsbUNBQVc7QUFBQ0ssRUFBQUEsWUFBWSxFQUFFO0FBQWYsQ0FBWCxDQUFSO0FBQ0FOLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLDRDQUFSO0FBQ0FELEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyw4QkFBZUssaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixRQUFyQixDQUFmLENBQVI7QUFFQVQsR0FBRyxDQUFDVSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZO0FBQ3JCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxhQUFUO0FBQ0gsQ0FGRCxFLENBSUE7O0FBQ0FiLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYWEsT0FBTyxDQUFDLDRCQUFELENBQXBCO0FBRUFkLEdBQUcsQ0FBQ2UsR0FBSixDQUFRLE1BQVIsRUFBZ0JDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQXBDO0FBRUFsQixHQUFHLENBQUNtQixNQUFKLENBQVduQixHQUFHLENBQUNVLEdBQUosQ0FBUSxNQUFSLENBQVgsRUFBNEIsWUFBSTtBQUM1QlUsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQW9CckIsR0FBRyxDQUFDVSxHQUFKLENBQVEsTUFBUixDQUFoQztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiRDpcXGpjYXN0cm9hXFxEb2N1bWVudHNcXERlc2Fycm9sbG9cXG5vZGVcXGpqZ2dcXHNlcnZpZG9yXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nO1xyXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcclxuaW1wb3J0IGZpbGVVcGxvYWQgZnJvbSAnZXhwcmVzcy1maWxlVXBsb2FkJztcclxuaW1wb3J0IGhpc3RvcnkgZnJvbSAnY29ubmVjdC1oaXN0b3J5LWFwaS1mYWxsYmFjayc7XHJcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuLy9NaWRkbGV3YXJlc1xyXG5hcHAudXNlKG1vcmdhbigndGlueScpKTtcclxuYXBwLnVzZShjb3JzKCkpO1xyXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcclxuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoe2V4dGVuZGVkOiB0cnVlfSkpO1xyXG5hcHAudXNlKGZpbGVVcGxvYWQoe3VzZVRlbXBGaWxlczogdHJ1ZX0pKTtcclxuYXBwLnVzZShoaXN0b3J5KCkpO1xyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xyXG5cclxuYXBwLmdldCgnLycsIChyZXEsIHJlcyk9PntcclxuICAgIHJlcy5zZW5kKCdIZWxsbyB3b3JsZCcpXHJcbn0pXHJcblxyXG4vL3JvdXRlc1xyXG5hcHAudXNlKCcvJywgcmVxdWlyZSgnLi9yb3V0ZXMvaW52ZW50YXJpby5yb3V0ZXMnKSk7XHJcblxyXG5hcHAuc2V0KCdwb3J0JywgcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwKVxyXG5cclxuYXBwLmxpc3RlbihhcHAuZ2V0KCdwb3J0JyksICgpPT57XHJcbiAgICBjb25zb2xlLmxvZygnU2VydmVyIG9uIHBvcnQgJyArIGFwcC5nZXQoJ3BvcnQnKSk7XHJcbn0pIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "express",
        "json",
        "urlencoded",
        "extended",
        "useTempFiles",
        "path",
        "join",
        "__dirname",
        "get",
        "req",
        "res",
        "send",
        "require",
        "set",
        "process",
        "env",
        "PORT",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,wBAAO,MAAP,CAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAQE,UAAR,CAAmB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAnB,CAAR;AACAL,GAAG,CAACC,GAAJ,CAAQ,mCAAW;AAACK,EAAAA,YAAY,EAAE;AAAf,CAAX,CAAR;AACAN,GAAG,CAACC,GAAJ,CAAQ,4CAAR;AACAD,GAAG,CAACC,GAAJ,CAAQC,8BAAeK,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEAT,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAY;AACrBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACH,CAFD,E,CAIA;;AACAb,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaa,OAAO,CAAC,4BAAD,CAApB;AAEAd,GAAG,CAACe,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AAEAlB,GAAG,CAACmB,MAAJ,CAAWnB,GAAG,CAACU,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAI;AAC5BU,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBrB,GAAG,CAACU,GAAJ,CAAQ,MAAR,CAAhC;AACH,CAFD",
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport morgan from 'morgan';\r\nimport cors from 'cors';\r\nimport fileUpload from 'express-fileUpload';\r\nimport history from 'connect-history-api-fallback';\r\nimport path from 'path';\r\n\r\nconst app = express();\r\n\r\n//Middlewares\r\napp.use(morgan('tiny'));\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(express.urlencoded({extended: true}));\r\napp.use(fileUpload({useTempFiles: true}));\r\napp.use(history());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.get('/', (req, res)=>{\r\n    res.send('Hello world')\r\n})\r\n\r\n//routes\r\napp.use('/', require('./routes/inventario.routes'));\r\n\r\napp.set('port', process.env.PORT || 3000)\r\n\r\napp.listen(app.get('port'), ()=>{\r\n    console.log('Server on port ' + app.get('port'));\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1620671216861
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"filename\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\routes\\\\inventario.routes.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\routes\\inventario.routes.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\routes\\inventario.routes.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\routes\\inventario.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\routes\\",
        "sourceFileName": "inventario.routes.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _inventario = _interopRequireDefault(require(\"../controllers/inventario\"));\n\nvar _graficoinventario = _interopRequireDefault(require(\"../controllers/graficoinventario\"));\n\nvar _categorico = _interopRequireDefault(require(\"../controllers/categorico\"));\n\nvar _gestion = _interopRequireDefault(require(\"../controllers/gestion\"));\n\nvar _graficogestion = _interopRequireDefault(require(\"../controllers/graficogestion\"));\n\nvar _usuario = _interopRequireDefault(require(\"../controllers/usuario\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router();\n\nrouter.post('/signup', _inventario[\"default\"].signUp);\nrouter.post('/signin', _inventario[\"default\"].signIn);\nrouter.post('/listartotalpivoteado', _inventario[\"default\"].listarTotalPivoteado);\nrouter.post('/listarcortepivoteado', _inventario[\"default\"].listarTotalCortePivoteado);\nrouter.post('/listartribunalpivoteado', _inventario[\"default\"].listarTotalTribunalPivoteado);\nrouter.post('/listartotal', _inventario[\"default\"].listarTotal);\nrouter.post('/listartotalmes', _inventario[\"default\"].listarTotalMes);\nrouter.post('/listarcortetotal', _inventario[\"default\"].listarCorteTotal);\nrouter.post('/listarcortetotalmes', _inventario[\"default\"].listarCorteTotalMes);\nrouter.post('/listartribunaltotal', _inventario[\"default\"].listarTribunalTotal);\nrouter.post('/listarhistoriconacional', _graficoinventario[\"default\"].historicoNacional_1);\nrouter.post('/listarhistoriconacionalingreso', _graficoinventario[\"default\"].historicoNacionalIngreso);\nrouter.post('/listarhistoriconacionalinventario', _graficoinventario[\"default\"].historicoNacionalInventario);\nrouter.post('/listarhistoricocompleto', _graficoinventario[\"default\"].historicoCompleto);\nrouter.post('/listarhistoricocortecompleto', _graficoinventario[\"default\"].historicoCorteCompleto);\nrouter.post('/listarhistoricotribunalcompleto', _graficoinventario[\"default\"].historicoTribunalCompleto);\nrouter.post('/listarcorte', _categorico[\"default\"].listarCorte);\nrouter.post('/listartribunal', _categorico[\"default\"].listarTribunal);\nrouter.post('/listarmateriatotal', _graficoinventario[\"default\"].listarMateriaTotalPivoteado);\nrouter.post('/listarmateriacortetotal', _graficoinventario[\"default\"].listarMateriaCorteTotalPivoteado);\nrouter.post('/listarmateriatribunaltotal', _graficoinventario[\"default\"].listarMateriaTribunalTotalPivoteado);\nrouter.post('/listargestiontotal', _gestion[\"default\"].listarGestionTotalPivoteado);\nrouter.post('/listargestioncorte', _gestion[\"default\"].listarGestionCortePivoteado);\nrouter.post('/listargestiontribunal', _gestion[\"default\"].listarGestionTribunalPivoteado);\nrouter.post('/listarginventariototal', _graficogestion[\"default\"].listarTotalGestionSeis);\nrouter.post('/listarginventariocorte', _graficogestion[\"default\"].listarCorteGestionSeis);\n_graficogestion[\"default\"].listarTribunalGestionSeis;\nrouter.post('/listarginventariotribunal', _graficogestion[\"default\"].listarTribunalGestionSeis);\nrouter.post('/listardetalleinventariotribunal', _graficogestion[\"default\"].listarDetallaTribunalGestionSeis);\nrouter.post('/listarreducciontribunal', _graficogestion[\"default\"].listarReduccionTribunal);\nrouter.post('/listarpromediotribunal', _graficogestion[\"default\"].tasaReduccionTribunal);\nrouter.post('/registrarcompromiso', _gestion[\"default\"].registrarGestion);\nrouter.post('/ultimomes', _gestion[\"default\"].ultimoMes);\nrouter.post('/descripcionexante', _gestion[\"default\"].descripcionExante);\nrouter.post('/descripcionexpost', _gestion[\"default\"].descripcionExpost);\nrouter.post('/registrarexpost', _gestion[\"default\"].registrarExpost);\nrouter.post('/checklogin', _usuario[\"default\"].login);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "inventario.routes.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "causasinventario",
        "signUp",
        "signIn",
        "listarTotalPivoteado",
        "listarTotalCortePivoteado",
        "listarTotalTribunalPivoteado",
        "listarTotal",
        "listarTotalMes",
        "listarCorteTotal",
        "listarCorteTotalMes",
        "listarTribunalTotal",
        "datografico",
        "historicoNacional_1",
        "historicoNacionalIngreso",
        "historicoNacionalInventario",
        "historicoCompleto",
        "historicoCorteCompleto",
        "historicoTribunalCompleto",
        "datocategorico",
        "listarCorte",
        "listarTribunal",
        "listarMateriaTotalPivoteado",
        "listarMateriaCorteTotalPivoteado",
        "listarMateriaTribunalTotalPivoteado",
        "gestioninventario",
        "listarGestionTotalPivoteado",
        "listarGestionCortePivoteado",
        "listarGestionTribunalPivoteado",
        "ginventario",
        "listarTotalGestionSeis",
        "listarCorteGestionSeis",
        "listarTribunalGestionSeis",
        "listarDetallaTribunalGestionSeis",
        "listarReduccionTribunal",
        "tasaReduccionTribunal",
        "registrarGestion",
        "ultimoMes",
        "descripcionExante",
        "descripcionExpost",
        "registrarExpost",
        "usuariosis",
        "login",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\routes\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport causasinventario from '../controllers/inventario';\r\nimport datografico from '../controllers/graficoinventario';\r\nimport datocategorico from '../controllers/categorico';\r\nimport gestioninventario from '../controllers/gestion';\r\nimport ginventario from '../controllers/graficogestion';\r\nimport usuariosis from '../controllers/usuario';\r\n\r\nconst router = express.Router();\r\nrouter.post('/signup', causasinventario.signUp);\r\n\r\nrouter.post('/signin', causasinventario.signIn);\r\n\r\nrouter.post('/listartotalpivoteado', causasinventario.listarTotalPivoteado);\r\n\r\nrouter.post('/listarcortepivoteado', causasinventario.listarTotalCortePivoteado);\r\n\r\nrouter.post('/listartribunalpivoteado', causasinventario.listarTotalTribunalPivoteado);\r\n\r\nrouter.post('/listartotal', causasinventario.listarTotal);\r\n\r\nrouter.post('/listartotalmes', causasinventario.listarTotalMes);\r\n\r\nrouter.post('/listarcortetotal', causasinventario.listarCorteTotal);\r\n\r\nrouter.post('/listarcortetotalmes', causasinventario.listarCorteTotalMes);\r\n\r\nrouter.post('/listartribunaltotal', causasinventario.listarTribunalTotal);\r\n\r\nrouter.post('/listarhistoriconacional', datografico.historicoNacional_1);\r\n\r\nrouter.post('/listarhistoriconacionalingreso', datografico.historicoNacionalIngreso);\r\n\r\nrouter.post('/listarhistoriconacionalinventario', datografico.historicoNacionalInventario);\r\n\r\nrouter.post('/listarhistoricocompleto', datografico.historicoCompleto);\r\n\r\nrouter.post('/listarhistoricocortecompleto', datografico.historicoCorteCompleto);\r\n\r\nrouter.post('/listarhistoricotribunalcompleto', datografico.historicoTribunalCompleto);\r\n\r\nrouter.post('/listarcorte', datocategorico.listarCorte);\r\n\r\nrouter.post('/listartribunal', datocategorico.listarTribunal);\r\n\r\nrouter.post('/listarmateriatotal', datografico.listarMateriaTotalPivoteado);\r\n\r\nrouter.post('/listarmateriacortetotal', datografico.listarMateriaCorteTotalPivoteado);\r\n\r\nrouter.post('/listarmateriatribunaltotal', datografico.listarMateriaTribunalTotalPivoteado);\r\n\r\nrouter.post('/listargestiontotal', gestioninventario.listarGestionTotalPivoteado);\r\n\r\nrouter.post('/listargestioncorte', gestioninventario.listarGestionCortePivoteado);\r\n\r\nrouter.post('/listargestiontribunal', gestioninventario.listarGestionTribunalPivoteado);\r\n\r\nrouter.post('/listarginventariototal', ginventario.listarTotalGestionSeis);\r\n\r\nrouter.post('/listarginventariocorte', ginventario.listarCorteGestionSeis);ginventario.listarTribunalGestionSeis\r\n\r\nrouter.post('/listarginventariotribunal', ginventario.listarTribunalGestionSeis);\r\n\r\nrouter.post('/listardetalleinventariotribunal', ginventario.listarDetallaTribunalGestionSeis);\r\n\r\nrouter.post('/listarreducciontribunal', ginventario.listarReduccionTribunal);\r\n\r\nrouter.post('/listarpromediotribunal', ginventario.tasaReduccionTribunal);\r\n\r\nrouter.post('/registrarcompromiso', gestioninventario.registrarGestion);\r\n\r\nrouter.post('/ultimomes', gestioninventario.ultimoMes);\r\n\r\nrouter.post('/descripcionexante', gestioninventario.descripcionExante);\r\n\r\nrouter.post('/descripcionexpost', gestioninventario.descripcionExpost);\r\n\r\nrouter.post('/registrarexpost', gestioninventario.registrarExpost);\r\n\r\nrouter.post('/checklogin', usuariosis.login);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1621566406830
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"filename\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\inventario.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\inventario.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\inventario.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\inventario.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
        "sourceFileName": "inventario.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _keys = _interopRequireDefault(require(\"../database/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar causasinventario = {};\n\ncausasinventario.signUp = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, name, email, password;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, name = _req$body.name, email = _req$body.email, password = _req$body.password;\n\n            try {\n              _keys[\"default\"].query('insert into prueba(texto, numero) values ($1, $2)', [name, email]);\n\n              res.status(200).json({\n                message: 'Registro exitoso',\n                gato: {\n                  name: name,\n                  email: email\n                }\n              });\n            } catch (error) {\n              res.status(500).json({\n                message: 'Ocurrió un problema',\n                error: error\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\ncausasinventario.signIn = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, student;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _keys[\"default\"].query('select * from prueba where texto=$1', [email]);\n\n          case 4:\n            _context2.next = 6;\n            return _context2.sent.rows;\n\n          case 6:\n            student = _context2.sent;\n\n            if (student.length > 0) {\n              res.status(200).json({\n                id: student[0].id,\n                name: student[0].texto,\n                numero: student[0].numero\n              });\n            } else {\n              res.status(200).json({\n                message: \"No existe el registro\",\n                NotFound: true\n              });\n            }\n\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context2.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 10]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //Listar inventario pivoteado para cortes y total\n\n\ncausasinventario.listarTotalPivoteado = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var tipo, sql, causas;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select fr.cod_corte, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\n            sql += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, ';\n            sql += 'corte.gls_corte from crosstab( ';\n            sql += '$$ select cod_corte, año, sum(cantidad_inventario) as cant_inventario ';\n            sql += 'from inventario where jurisdiccion = \\'' + tipo + '\\' group by cod_corte, año ';\n            sql += 'UNION ALL ';\n            sql += 'select 100 as cod_corte, año, sum(cantidad_inventario) as cant_inventario ';\n            sql += 'from inventario where jurisdiccion = \\'' + tipo + '\\' group by año order by cod_corte, año $$';\n            sql += ') as fr(cod_corte int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint), corte where fr.cod_corte = corte.cod_corte ';\n            _context3.prev = 11;\n            _context3.next = 14;\n            return _keys[\"default\"].query(sql);\n\n          case 14:\n            _context3.next = 16;\n            return _context3.sent.rows;\n\n          case 16:\n            causas = _context3.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context3.next = 23;\n            break;\n\n          case 20:\n            _context3.prev = 20;\n            _context3.t0 = _context3[\"catch\"](11);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context3.t0\n            });\n\n          case 23:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[11, 20]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}(); //Listar inventario pivoteado por corte\n\n\ncausasinventario.listarTotalCortePivoteado = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, corte, tipo, sql, causas;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, corte = _req$body3.corte, tipo = _req$body3.tipo;\n            sql = 'select fr.cod_tribunal as cod_tribunal, fr.\"2015\" as a_2015, ';\n            sql += 'fr.\"2016\" as a_2016, fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, ';\n            sql += 'tribunal.gls_tribunal from crosstab( ';\n            sql += '$$ select cod_tribunal, año, sum(cantidad_inventario) as cant_inventario ';\n            sql += 'from inventario where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' group by cod_tribunal, año ';\n            sql += 'UNION ALL ';\n            sql += 'select 10000 as cod_tribunal, año, sum(cantidad_inventario) as cant_inventario ';\n            sql += 'from inventario where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' group by año order by cod_tribunal, año $$';\n            sql += ') as fr(cod_tribunal int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint), tribunal where fr.cod_tribunal = tribunal.cod_tribunal ';\n            _context4.prev = 11;\n            _context4.next = 14;\n            return _keys[\"default\"].query(sql);\n\n          case 14:\n            _context4.next = 16;\n            return _context4.sent.rows;\n\n          case 16:\n            causas = _context4.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context4.next = 23;\n            break;\n\n          case 20:\n            _context4.prev = 20;\n            _context4.t0 = _context4[\"catch\"](11);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t0\n            });\n\n          case 23:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[11, 20]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //Listar inventario pivoteado por tribunal\n\n\ncausasinventario.listarTotalTribunalPivoteado = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body4, tribunal, tipo, sql, causas;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _req$body4 = req.body, tribunal = _req$body4.tribunal, tipo = _req$body4.tipo;\n            sql = 'select fr.mes as mes, coalesce(fr.\"2015\",0) as a_2015, ';\n            sql += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020 ';\n            sql += 'from crosstab( ';\n            sql += '$$ select mes, año, sum(cantidad_inventario) as cant_inventario ';\n            sql += 'from inventario where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' group by mes, año ';\n            sql += 'UNION ALL ';\n            sql += 'select 13 as mes, año, sum(cantidad_inventario) as cant_inventario ';\n            sql += 'from inventario where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' group by año order by mes, año $$';\n            sql += ') as fr(mes int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint)';\n            _context5.prev = 11;\n            _context5.next = 14;\n            return _keys[\"default\"].query(sql);\n\n          case 14:\n            _context5.next = 16;\n            return _context5.sent.rows;\n\n          case 16:\n            causas = _context5.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context5.next = 23;\n            break;\n\n          case 20:\n            _context5.prev = 20;\n            _context5.t0 = _context5[\"catch\"](11);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context5.t0\n            });\n\n          case 23:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[11, 20]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}(); //Listar causas e inventario por año para cortes y total\n\n\ncausasinventario.listarTotal = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var tipo, sql, causas;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select gls_corte, cod_corte, año, sum(cantidad_ingreso) as ingreso, sum(cantidad_ingreso) ';\n            sql += 'from inventario where jurisdiccion = $1 group by gls_corte, cod_corte, año UNION ALL ';\n            sql += 'select \\'Todas\\' as gls_corte, 100 as cod_corte, año, sum(cantidad_ingreso) as ingreso, sum(cantidad_ingreso) ';\n            sql += 'from inventario where jurisdiccion = $1 group by año order by cod_corte, año';\n            _context6.prev = 5;\n            _context6.next = 8;\n            return _keys[\"default\"].query(sql, [tipo]);\n\n          case 8:\n            _context6.next = 10;\n            return _context6.sent.rows;\n\n          case 10:\n            causas = _context6.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context6.next = 17;\n            break;\n\n          case 14:\n            _context6.prev = 14;\n            _context6.t0 = _context6[\"catch\"](5);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context6.t0\n            });\n\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[5, 14]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}(); //Listar causas e inventario por mes para cortes y total\n\n\ncausasinventario.listarTotalMes = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var tipo, sql, causas;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select cod_corte, año, mes, sum(cantidad_ingreso) as ingreso, sum(cantidad_ingreso) ';\n            sql += 'from inventario group by cod_corte, año, mes UNION ALL ';\n            sql += 'select 100 as cod_corte, año, mes, sum(cantidad_ingreso) as ingreso, sum(cantidad_ingreso) ';\n            sql += 'from inventario group by año, mes order by cod_corte, mes, año';\n            _context7.prev = 5;\n            _context7.next = 8;\n            return _keys[\"default\"].query(sql);\n\n          case 8:\n            _context7.next = 10;\n            return _context7.sent.rows;\n\n          case 10:\n            causas = _context7.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context7.next = 17;\n            break;\n\n          case 14:\n            _context7.prev = 14;\n            _context7.t0 = _context7[\"catch\"](5);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context7.t0\n            });\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[5, 14]]);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}(); //Listar causas e inventario por año para corte específica\n\n\ncausasinventario.listarCorteTotal = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var _req$body5, corte, tipo, sql, causas;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _req$body5 = req.body, corte = _req$body5.corte, tipo = _req$body5.tipo;\n            sql = 'select cod_tribunal, año, sum(cantidad_ingreso) as ingreso, sum(cantidad_inventario) as inventario ';\n            sql += 'from inventario where cod_corte = $1 and jurisdiccion = $2 group by cod_tribunal, año UNION ALL ';\n            sql += 'select 10000 as cod_tribunal, año, sum(cantidad_ingreso) as ingreso, ';\n            sql += 'sum(cantidad_inventario) as inventario from inventario ';\n            sql += 'where cod_corte = $1 and jurisdiccion = $2 group by cod_tribunal, año order by año asc, inventario desc';\n            _context8.prev = 6;\n            _context8.next = 9;\n            return _keys[\"default\"].query(sql, [corte, tipo]);\n\n          case 9:\n            _context8.next = 11;\n            return _context8.sent.rows;\n\n          case 11:\n            causas = _context8.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context8.next = 18;\n            break;\n\n          case 15:\n            _context8.prev = 15;\n            _context8.t0 = _context8[\"catch\"](6);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context8.t0\n            });\n\n          case 18:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[6, 15]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}(); //Listar causas e inventario por año y mes para corte específica\n\n\ncausasinventario.listarCorteTotalMes = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var _req$body6, corte, tipo, sql, causas;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _req$body6 = req.body, corte = _req$body6.corte, tipo = _req$body6.tipo;\n            sql = 'select cod_tribunal, año, mes, cantidad_ingreso as ingreso, cantidad_inventario as inventario ';\n            sql += 'from inventario where cod_corte = $1 and jurisdiccion = $2 UNION ALL ';\n            sql += 'select 10000 as cod_tribunal, año, mes, sum(cantidad_ingreso) as ingreso, ';\n            sql += 'sum(cantidad_inventario) as inventario from inventario ';\n            sql += 'where cod_corte = $1 and jurisdiccion = $2 group by cod_tribunal, año, mes order by año, mes asc, inventario desc';\n            _context9.prev = 6;\n            _context9.next = 9;\n            return _keys[\"default\"].query(sql, [corte, tipo]);\n\n          case 9:\n            _context9.next = 11;\n            return _context9.sent.rows;\n\n          case 11:\n            causas = _context9.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context9.next = 18;\n            break;\n\n          case 15:\n            _context9.prev = 15;\n            _context9.t0 = _context9[\"catch\"](6);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context9.t0\n            });\n\n          case 18:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[6, 15]]);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}(); //Listar causas e inventario por año y mes para tribunal específico\n\n\ncausasinventario.listarTribunalTotal = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var _req$body7, tribunal, tipo, sql, causas;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _req$body7 = req.body, tribunal = _req$body7.tribunal, tipo = _req$body7.tipo;\n            sql = 'select cod_tribunal, año, sum(cantidad_ingreso) as ingreso, sum(cantidad_inventario) as inventario ';\n            sql += 'from inventario where cod_tribunal = $1 and jurisdiccion = $2 group by cod_tribunal, año order by año asc';\n            _context10.prev = 3;\n            _context10.next = 6;\n            return _keys[\"default\"].query(sql, [tribunal, tipo]);\n\n          case 6:\n            _context10.next = 8;\n            return _context10.sent.rows;\n\n          case 8:\n            causas = _context10.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context10.next = 15;\n            break;\n\n          case 12:\n            _context10.prev = 12;\n            _context10.t0 = _context10[\"catch\"](3);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context10.t0\n            });\n\n          case 15:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[3, 12]]);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}();\n\nmodule.exports = causasinventario;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "inventario.js"
      ],
      "names": [
        "causasinventario",
        "signUp",
        "req",
        "res",
        "body",
        "name",
        "email",
        "password",
        "pool",
        "query",
        "status",
        "json",
        "message",
        "gato",
        "error",
        "signIn",
        "rows",
        "student",
        "length",
        "id",
        "texto",
        "numero",
        "NotFound",
        "listarTotalPivoteado",
        "tipo",
        "sql",
        "causas",
        "registros",
        "listarTotalCortePivoteado",
        "corte",
        "listarTotalTribunalPivoteado",
        "tribunal",
        "listarTotal",
        "listarTotalMes",
        "listarCorteTotal",
        "listarCorteTotalMes",
        "listarTribunalTotal",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "sourcesContent": [
        "import pool from '../database/keys';\r\n\r\nconst causasinventario = {};\r\n\r\ncausasinventario.signUp = async (req, res) => {\r\n    const {name, email, password} = req.body;\r\n    try {\r\n        pool.query('insert into prueba(texto, numero) values ($1, $2)', [name, email]);\r\n        res.status(200).json({\r\n            message: 'Registro exitoso',\r\n            gato: {name, email}\r\n        })\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        })\r\n    }\r\n};\r\n\r\ncausasinventario.signIn = async (req, res) => {\r\n    const {email, password} = req.body;\r\n    try {\r\n        const student = await (await pool.query('select * from prueba where texto=$1', [email])).rows;\r\n        if (student.length>0) {\r\n            res.status(200).json({\r\n                id: student[0].id,\r\n                name: student[0].texto,\r\n                numero: student[0].numero\r\n            });   \r\n        } else {\r\n            res.status(200).json({\r\n                message: \"No existe el registro\",\r\n                NotFound: true\r\n            });\r\n        }\r\n        \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar inventario pivoteado para cortes y total\r\ncausasinventario.listarTotalPivoteado = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    let sql = 'select fr.cod_corte, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\r\n    sql += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, ';  \r\n    sql += 'corte.gls_corte from crosstab( ';\r\n    sql += '$$ select cod_corte, año, sum(cantidad_inventario) as cant_inventario ';\r\n    sql += 'from inventario where jurisdiccion = \\''+tipo+'\\' group by cod_corte, año ';\r\n    sql += 'UNION ALL ';\r\n    sql += 'select 100 as cod_corte, año, sum(cantidad_inventario) as cant_inventario ';\r\n    sql += 'from inventario where jurisdiccion = \\''+tipo+'\\' group by año order by cod_corte, año $$';\r\n    sql += ') as fr(cod_corte int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint), corte where fr.cod_corte = corte.cod_corte ';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar inventario pivoteado por corte\r\ncausasinventario.listarTotalCortePivoteado = async (req, res) => {\r\n    const {corte, tipo} = req.body;\r\n    let sql = 'select fr.cod_tribunal as cod_tribunal, fr.\"2015\" as a_2015, ';\r\n    sql += 'fr.\"2016\" as a_2016, fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, ';  \r\n    sql += 'tribunal.gls_tribunal from crosstab( ';\r\n    sql += '$$ select cod_tribunal, año, sum(cantidad_inventario) as cant_inventario ';\r\n    sql += 'from inventario where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' group by cod_tribunal, año ';\r\n    sql += 'UNION ALL ';\r\n    sql += 'select 10000 as cod_tribunal, año, sum(cantidad_inventario) as cant_inventario ';\r\n    sql += 'from inventario where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' group by año order by cod_tribunal, año $$';\r\n    sql += ') as fr(cod_tribunal int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint), tribunal where fr.cod_tribunal = tribunal.cod_tribunal ';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar inventario pivoteado por tribunal\r\ncausasinventario.listarTotalTribunalPivoteado = async (req, res) => {\r\n    const {tribunal, tipo} = req.body;\r\n    let sql = 'select fr.mes as mes, coalesce(fr.\"2015\",0) as a_2015, ';\r\n    sql += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020 ';  \r\n    sql += 'from crosstab( ';\r\n    sql += '$$ select mes, año, sum(cantidad_inventario) as cant_inventario ';\r\n    sql += 'from inventario where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' group by mes, año ';\r\n    sql += 'UNION ALL ';\r\n    sql += 'select 13 as mes, año, sum(cantidad_inventario) as cant_inventario ';\r\n    sql += 'from inventario where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' group by año order by mes, año $$';\r\n    sql += ') as fr(mes int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint)';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar causas e inventario por año para cortes y total\r\ncausasinventario.listarTotal = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    var sql = 'select gls_corte, cod_corte, año, sum(cantidad_ingreso) as ingreso, sum(cantidad_ingreso) ';\r\n    sql += 'from inventario where jurisdiccion = $1 group by gls_corte, cod_corte, año UNION ALL ';\r\n    sql += 'select \\'Todas\\' as gls_corte, 100 as cod_corte, año, sum(cantidad_ingreso) as ingreso, sum(cantidad_ingreso) ';\r\n    sql += 'from inventario where jurisdiccion = $1 group by año order by cod_corte, año'; \r\n    try {\r\n        const causas = await (await pool.query(sql, [tipo])).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar causas e inventario por mes para cortes y total\r\ncausasinventario.listarTotalMes = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    var sql = 'select cod_corte, año, mes, sum(cantidad_ingreso) as ingreso, sum(cantidad_ingreso) ';\r\n    sql += 'from inventario group by cod_corte, año, mes UNION ALL ';\r\n    sql += 'select 100 as cod_corte, año, mes, sum(cantidad_ingreso) as ingreso, sum(cantidad_ingreso) ';\r\n    sql += 'from inventario group by año, mes order by cod_corte, mes, año'; \r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar causas e inventario por año para corte específica\r\ncausasinventario.listarCorteTotal = async (req, res) => {\r\n    const {corte, tipo} = req.body;\r\n    var sql = 'select cod_tribunal, año, sum(cantidad_ingreso) as ingreso, sum(cantidad_inventario) as inventario ';\r\n    sql += 'from inventario where cod_corte = $1 and jurisdiccion = $2 group by cod_tribunal, año UNION ALL ';\r\n    sql += 'select 10000 as cod_tribunal, año, sum(cantidad_ingreso) as ingreso, ';\r\n    sql += 'sum(cantidad_inventario) as inventario from inventario ';\r\n    sql += 'where cod_corte = $1 and jurisdiccion = $2 group by cod_tribunal, año order by año asc, inventario desc';\r\n    try {\r\n        const causas = await (await pool.query(sql, [corte, tipo])).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar causas e inventario por año y mes para corte específica\r\ncausasinventario.listarCorteTotalMes = async (req, res) => {\r\n    const {corte, tipo} = req.body;\r\n    var sql = 'select cod_tribunal, año, mes, cantidad_ingreso as ingreso, cantidad_inventario as inventario ';\r\n    sql += 'from inventario where cod_corte = $1 and jurisdiccion = $2 UNION ALL ';\r\n    sql += 'select 10000 as cod_tribunal, año, mes, sum(cantidad_ingreso) as ingreso, ';\r\n    sql += 'sum(cantidad_inventario) as inventario from inventario ';\r\n    sql += 'where cod_corte = $1 and jurisdiccion = $2 group by cod_tribunal, año, mes order by año, mes asc, inventario desc';\r\n    try {\r\n        const causas = await (await pool.query(sql, [corte, tipo])).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar causas e inventario por año y mes para tribunal específico\r\ncausasinventario.listarTribunalTotal = async (req, res) => {\r\n    const {tribunal, tipo} = req.body;\r\n    var sql = 'select cod_tribunal, año, sum(cantidad_ingreso) as ingreso, sum(cantidad_inventario) as inventario ';\r\n    sql += 'from inventario where cod_tribunal = $1 and jurisdiccion = $2 group by cod_tribunal, año order by año asc';\r\n    try {\r\n        const causas = await (await pool.query(sql, [tribunal, tipo])).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = causasinventario;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620860392638
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"filename\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\database\\\\keys.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\database\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\database\\keys.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\database\\keys.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\database\\keys.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\database\\",
        "sourceFileName": "keys.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _pg = require(\"pg\");\n\nvar pool = new _pg.Pool({\n  host: 'localhost',\n  port: '5432',\n  user: 'postgres',\n  password: 'clorofila',\n  database: 'inventario_ddbb'\n});\nmodule.exports = pool;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtleXMuanMiXSwibmFtZXMiOlsicG9vbCIsIlBvb2wiLCJob3N0IiwicG9ydCIsInVzZXIiLCJwYXNzd29yZCIsImRhdGFiYXNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQSxJQUFNQSxJQUFJLEdBQUcsSUFBSUMsUUFBSixDQUFTO0FBQ2xCQyxFQUFBQSxJQUFJLEVBQUUsV0FEWTtBQUVsQkMsRUFBQUEsSUFBSSxFQUFFLE1BRlk7QUFHbEJDLEVBQUFBLElBQUksRUFBRSxVQUhZO0FBSWxCQyxFQUFBQSxRQUFRLEVBQUUsV0FKUTtBQUtsQkMsRUFBQUEsUUFBUSxFQUFFO0FBTFEsQ0FBVCxDQUFiO0FBUUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlIsSUFBakIiLCJzb3VyY2VSb290IjoiRDpcXGpjYXN0cm9hXFxEb2N1bWVudHNcXERlc2Fycm9sbG9cXG5vZGVcXGpqZ2dcXHNlcnZpZG9yXFxkYXRhYmFzZVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQb29sfSBmcm9tICdwZyc7XHJcblxyXG5jb25zdCBwb29sID0gbmV3IFBvb2woe1xyXG4gICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbiAgICBwb3J0OiAnNTQzMicsXHJcbiAgICB1c2VyOiAncG9zdGdyZXMnLFxyXG4gICAgcGFzc3dvcmQ6ICdjbG9yb2ZpbGEnLFxyXG4gICAgZGF0YWJhc2U6ICdpbnZlbnRhcmlvX2RkYmInXHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBwb29sOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "keys.js"
      ],
      "names": [
        "pool",
        "Pool",
        "host",
        "port",
        "user",
        "password",
        "database",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAEA,IAAMA,IAAI,GAAG,IAAIC,QAAJ,CAAS;AAClBC,EAAAA,IAAI,EAAE,WADY;AAElBC,EAAAA,IAAI,EAAE,MAFY;AAGlBC,EAAAA,IAAI,EAAE,UAHY;AAIlBC,EAAAA,QAAQ,EAAE,WAJQ;AAKlBC,EAAAA,QAAQ,EAAE;AALQ,CAAT,CAAb;AAQAC,MAAM,CAACC,OAAP,GAAiBR,IAAjB",
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\database\\",
      "sourcesContent": [
        "import {Pool} from 'pg';\r\n\r\nconst pool = new Pool({\r\n    host: 'localhost',\r\n    port: '5432',\r\n    user: 'postgres',\r\n    password: 'clorofila',\r\n    database: 'inventario_ddbb'\r\n});\r\n\r\nmodule.exports = pool;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620411680066
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"filename\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\graficoinventario.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\graficoinventario.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\graficoinventario.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\graficoinventario.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
        "sourceFileName": "graficoinventario.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _keys = _interopRequireDefault(require(\"../database/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar datografico = {};\n\ndatografico.historicoNacional_1 = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var tipo, sql, causas;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select fr.tipo as tipo, fr.\"2015\" as a_2015, ';\n            sql += 'fr.\"2016\" as a_2016, fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, ';\n            sql += 'fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 from crosstab( ';\n            sql += '$$ select \\'Ingresos\\' as tipo, año, sum(cantidad_ingreso) as valor ';\n            sql += 'from inventario where jurisdiccion = \\'' + tipo + '\\' group by año ';\n            sql += 'UNION ALL ';\n            sql += 'select \\'Inventario\\' as tipo, año, sum(cantidad_inventario) as valor ';\n            sql += 'from inventario where jurisdiccion = \\'' + tipo + '\\' group by año ';\n            sql += 'order by tipo, año $$) as fr(tipo text, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint)';\n            _context.prev = 11;\n            _context.next = 14;\n            return _keys[\"default\"].query(sql);\n\n          case 14:\n            _context.next = 16;\n            return _context.sent.rows;\n\n          case 16:\n            causas = _context.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context.next = 23;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](11);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context.t0\n            });\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[11, 20]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\ndatografico.historicoNacionalIngreso = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var tipo, sql, causas;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\n            sql += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\n            sql += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic ';\n            sql += 'from crosstab( ';\n            sql += '$$ select año, mes, sum(cantidad_ingreso) as valor ';\n            sql += 'from inventario where jurisdiccion = \\'' + tipo + '\\' group by año, mes order by año, mes $$)';\n            sql += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\n            sql += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\n            sql += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\n            _context2.prev = 10;\n            _context2.next = 13;\n            return _keys[\"default\"].query(sql);\n\n          case 13:\n            _context2.next = 15;\n            return _context2.sent.rows;\n\n          case 15:\n            causas = _context2.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context2.next = 22;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t0 = _context2[\"catch\"](10);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context2.t0\n            });\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[10, 19]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\ndatografico.historicoNacionalInventario = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var tipo, sql, causas;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\n            sql += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\n            sql += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic ';\n            sql += 'from crosstab( ';\n            sql += '$$ select año, mes, sum(cantidad_inventario) as valor ';\n            sql += 'from inventario where jurisdiccion = \\'' + tipo + '\\' group by año, mes order by año, mes $$)';\n            sql += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\n            sql += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\n            sql += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\n            _context3.prev = 10;\n            _context3.next = 13;\n            return _keys[\"default\"].query(sql);\n\n          case 13:\n            _context3.next = 15;\n            return _context3.sent.rows;\n\n          case 15:\n            causas = _context3.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context3.next = 22;\n            break;\n\n          case 19:\n            _context3.prev = 19;\n            _context3.t0 = _context3[\"catch\"](10);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context3.t0\n            });\n\n          case 22:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[10, 19]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\ndatografico.historicoCompleto = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var tipo, sql, causas, sqli, causasi, sqlii, causasii;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select fr.tipo as tipo, fr.\"2015\" as a_2015, ';\n            sql += 'fr.\"2016\" as a_2016, fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, ';\n            sql += 'fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 from crosstab( ';\n            sql += '$$ select \\'Ingresos\\' as tipo, año, sum(cantidad_ingreso) as valor ';\n            sql += 'from inventario where jurisdiccion = \\'' + tipo + '\\' group by año ';\n            sql += 'UNION ALL ';\n            sql += 'select \\'Inventario\\' as tipo, año, sum(cantidad_inventario) as valor ';\n            sql += 'from inventario where jurisdiccion = \\'' + tipo + '\\' group by año ';\n            sql += 'order by tipo, año $$) as fr(tipo text, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint)';\n            _context4.prev = 11;\n            _context4.next = 14;\n            return _keys[\"default\"].query(sql);\n\n          case 14:\n            _context4.next = 16;\n            return _context4.sent.rows;\n\n          case 16:\n            causas = _context4.sent;\n\n            if (!(causas.length > 0)) {\n              _context4.next = 65;\n              break;\n            }\n\n            sqli = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\n            sqli += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\n            sqli += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic ';\n            sqli += 'from crosstab( ';\n            sqli += '$$ select año, mes, sum(cantidad_ingreso) as valor ';\n            sqli += 'from inventario where jurisdiccion = \\'' + tipo + '\\' group by año, mes order by año, mes $$)';\n            sqli += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\n            sqli += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\n            sqli += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\n            _context4.prev = 27;\n            _context4.next = 30;\n            return _keys[\"default\"].query(sqli);\n\n          case 30:\n            _context4.next = 32;\n            return _context4.sent.rows;\n\n          case 32:\n            causasi = _context4.sent;\n\n            if (!(causasi.length > 0)) {\n              _context4.next = 57;\n              break;\n            }\n\n            sqlii = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\n            sqlii += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\n            sqlii += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic ';\n            sqlii += 'from crosstab( ';\n            sqlii += '$$ select año, mes, sum(cantidad_inventario) as valor ';\n            sqlii += 'from inventario where jurisdiccion = \\'' + tipo + '\\' group by año, mes order by año, mes $$)';\n            sqlii += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\n            sqlii += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\n            sqlii += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\n            _context4.prev = 43;\n            _context4.next = 46;\n            return _keys[\"default\"].query(sqlii);\n\n          case 46:\n            _context4.next = 48;\n            return _context4.sent.rows;\n\n          case 48:\n            causasii = _context4.sent;\n\n            if (causasii.length > 0) {\n              res.status(200).json({\n                historico: causas,\n                historico_ingreso: causasi,\n                historico_inventario: causasii\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context4.next = 55;\n            break;\n\n          case 52:\n            _context4.prev = 52;\n            _context4.t0 = _context4[\"catch\"](43);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context4.t0\n            });\n\n          case 55:\n            _context4.next = 58;\n            break;\n\n          case 57:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 58:\n            _context4.next = 63;\n            break;\n\n          case 60:\n            _context4.prev = 60;\n            _context4.t1 = _context4[\"catch\"](27);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context4.t1\n            });\n\n          case 63:\n            _context4.next = 66;\n            break;\n\n          case 65:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 66:\n            _context4.next = 71;\n            break;\n\n          case 68:\n            _context4.prev = 68;\n            _context4.t2 = _context4[\"catch\"](11);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context4.t2\n            });\n\n          case 71:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[11, 68], [27, 60], [43, 52]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //\n\n\ndatografico.historicoCorteCompleto = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body, tipo, corte, sql, causas, sqli, causasi, sqlii, causasii;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _req$body = req.body, tipo = _req$body.tipo, corte = _req$body.corte;\n            sql = 'select fr.tipo as tipo, fr.\"2015\" as a_2015, ';\n            sql += 'fr.\"2016\" as a_2016, fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, ';\n            sql += 'fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 from crosstab( ';\n            sql += '$$ select \\'Ingresos\\' as tipo, año, sum(cantidad_ingreso) as valor ';\n            sql += 'from inventario where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' group by año ';\n            sql += 'UNION ALL ';\n            sql += 'select \\'Inventario\\' as tipo, año, sum(cantidad_inventario) as valor ';\n            sql += 'from inventario where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' group by año ';\n            sql += 'order by tipo, año $$) as fr(tipo text, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint)';\n            _context5.prev = 11;\n            _context5.next = 14;\n            return _keys[\"default\"].query(sql);\n\n          case 14:\n            _context5.next = 16;\n            return _context5.sent.rows;\n\n          case 16:\n            causas = _context5.sent;\n\n            if (!(causas.length > 0)) {\n              _context5.next = 65;\n              break;\n            }\n\n            sqli = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\n            sqli += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\n            sqli += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic ';\n            sqli += 'from crosstab( ';\n            sqli += '$$ select año, mes, sum(cantidad_ingreso) as valor ';\n            sqli += 'from inventario where cod_corte=' + corte + ' and jurisdiccion = \\'' + tipo + '\\' group by año, mes order by año, mes $$)';\n            sqli += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\n            sqli += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\n            sqli += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\n            _context5.prev = 27;\n            _context5.next = 30;\n            return _keys[\"default\"].query(sqli);\n\n          case 30:\n            _context5.next = 32;\n            return _context5.sent.rows;\n\n          case 32:\n            causasi = _context5.sent;\n\n            if (!(causasi.length > 0)) {\n              _context5.next = 57;\n              break;\n            }\n\n            sqlii = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\n            sqlii += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\n            sqlii += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic ';\n            sqlii += 'from crosstab( ';\n            sqlii += '$$ select año, mes, sum(cantidad_inventario) as valor ';\n            sqlii += 'from inventario where cod_corte=' + corte + ' and jurisdiccion = \\'' + tipo + '\\' group by año, mes order by año, mes $$)';\n            sqlii += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\n            sqlii += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\n            sqlii += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\n            _context5.prev = 43;\n            _context5.next = 46;\n            return _keys[\"default\"].query(sqlii);\n\n          case 46:\n            _context5.next = 48;\n            return _context5.sent.rows;\n\n          case 48:\n            causasii = _context5.sent;\n\n            if (causasii.length > 0) {\n              res.status(200).json({\n                historico: causas,\n                historico_ingreso: causasi,\n                historico_inventario: causasii\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context5.next = 55;\n            break;\n\n          case 52:\n            _context5.prev = 52;\n            _context5.t0 = _context5[\"catch\"](43);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context5.t0\n            });\n\n          case 55:\n            _context5.next = 58;\n            break;\n\n          case 57:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 58:\n            _context5.next = 63;\n            break;\n\n          case 60:\n            _context5.prev = 60;\n            _context5.t1 = _context5[\"catch\"](27);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context5.t1\n            });\n\n          case 63:\n            _context5.next = 66;\n            break;\n\n          case 65:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 66:\n            _context5.next = 71;\n            break;\n\n          case 68:\n            _context5.prev = 68;\n            _context5.t2 = _context5[\"catch\"](11);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context5.t2\n            });\n\n          case 71:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[11, 68], [27, 60], [43, 52]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\ndatografico.historicoTribunalCompleto = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body2, tipo, tribunal, sql, causas, sqli, causasi, sqlii, causasii;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _req$body2 = req.body, tipo = _req$body2.tipo, tribunal = _req$body2.tribunal;\n            sql = 'select fr.tipo as tipo, fr.\"2015\" as a_2015, ';\n            sql += 'fr.\"2016\" as a_2016, fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, ';\n            sql += 'fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 from crosstab( ';\n            sql += '$$ select \\'Ingresos\\' as tipo, año, sum(cantidad_ingreso) as valor ';\n            sql += 'from inventario where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' group by año ';\n            sql += 'UNION ALL ';\n            sql += 'select \\'Inventario\\' as tipo, año, sum(cantidad_inventario) as valor ';\n            sql += 'from inventario where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' group by año ';\n            sql += 'order by tipo, año $$) as fr(tipo text, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint)';\n            _context6.prev = 11;\n            _context6.next = 14;\n            return _keys[\"default\"].query(sql);\n\n          case 14:\n            _context6.next = 16;\n            return _context6.sent.rows;\n\n          case 16:\n            causas = _context6.sent;\n\n            if (!(causas.length > 0)) {\n              _context6.next = 65;\n              break;\n            }\n\n            sqli = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\n            sqli += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\n            sqli += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic ';\n            sqli += 'from crosstab( ';\n            sqli += '$$ select año, mes, sum(cantidad_ingreso) as valor ';\n            sqli += 'from inventario where cod_tribunal=' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' group by año, mes order by año, mes $$)';\n            sqli += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\n            sqli += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\n            sqli += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\n            _context6.prev = 27;\n            _context6.next = 30;\n            return _keys[\"default\"].query(sqli);\n\n          case 30:\n            _context6.next = 32;\n            return _context6.sent.rows;\n\n          case 32:\n            causasi = _context6.sent;\n\n            if (!(causasi.length > 0)) {\n              _context6.next = 57;\n              break;\n            }\n\n            sqlii = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\n            sqlii += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\n            sqlii += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic ';\n            sqlii += 'from crosstab( ';\n            sqlii += '$$ select año, mes, sum(cantidad_inventario) as valor ';\n            sqlii += 'from inventario where cod_tribunal=' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' group by año, mes order by año, mes $$)';\n            sqlii += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\n            sqlii += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\n            sqlii += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\n            _context6.prev = 43;\n            _context6.next = 46;\n            return _keys[\"default\"].query(sqlii);\n\n          case 46:\n            _context6.next = 48;\n            return _context6.sent.rows;\n\n          case 48:\n            causasii = _context6.sent;\n\n            if (causasii.length > 0) {\n              res.status(200).json({\n                historico: causas,\n                historico_ingreso: causasi,\n                historico_inventario: causasii\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context6.next = 55;\n            break;\n\n          case 52:\n            _context6.prev = 52;\n            _context6.t0 = _context6[\"catch\"](43);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context6.t0\n            });\n\n          case 55:\n            _context6.next = 58;\n            break;\n\n          case 57:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 58:\n            _context6.next = 63;\n            break;\n\n          case 60:\n            _context6.prev = 60;\n            _context6.t1 = _context6[\"catch\"](27);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context6.t1\n            });\n\n          case 63:\n            _context6.next = 66;\n            break;\n\n          case 65:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 66:\n            _context6.next = 71;\n            break;\n\n          case 68:\n            _context6.prev = 68;\n            _context6.t2 = _context6[\"catch\"](11);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context6.t2\n            });\n\n          case 71:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[11, 68], [27, 60], [43, 52]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}(); //Listar inventario por materia pivoteado total\n\n\ndatografico.listarMateriaTotalPivoteado = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var tipo, sql, causas;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select gls_materia, coalesce(fr.\"2015\",0) as a_2015, ';\n            sql += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\n            sql += 'coalesce(fr.\"2018\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, ';\n            sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0)) as suma ';\n            sql += 'from crosstab( $$ ';\n            sql += 'select gls_materia, año, sum(cantidad_inventario) as cantidad_inventario ';\n            sql += 'from inventario_materia ';\n            sql += 'where jurisdiccion = \\'' + tipo + '\\' ';\n            sql += 'group by gls_materia, año order by gls_materia, año ';\n            sql += '$$ ) as fr(gls_materia varchar, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint) order by suma desc limit 10';\n            _context7.prev = 13;\n            _context7.next = 16;\n            return _keys[\"default\"].query(sql);\n\n          case 16:\n            _context7.next = 18;\n            return _context7.sent.rows;\n\n          case 18:\n            causas = _context7.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context7.next = 25;\n            break;\n\n          case 22:\n            _context7.prev = 22;\n            _context7.t0 = _context7[\"catch\"](13);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context7.t0\n            });\n\n          case 25:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[13, 22]]);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}(); ////Listar inventario por materia pivoteado total corte\n\n\ndatografico.listarMateriaCorteTotalPivoteado = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var _req$body3, tipo, corte, sql, causas;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _req$body3 = req.body, tipo = _req$body3.tipo, corte = _req$body3.corte;\n            sql = 'select gls_materia, coalesce(fr.\"2015\",0) as a_2015, ';\n            sql += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\n            sql += 'coalesce(fr.\"2018\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, ';\n            sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0)) as suma ';\n            sql += 'from crosstab( $$ ';\n            sql += 'select gls_materia, año, sum(cantidad_inventario) as cantidad_inventario ';\n            sql += 'from inventario_materia ';\n            sql += 'where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' ';\n            sql += 'group by gls_materia, año order by gls_materia, año ';\n            sql += '$$ ) as fr(gls_materia varchar, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint) order by suma desc limit 10';\n            _context8.prev = 13;\n            _context8.next = 16;\n            return _keys[\"default\"].query(sql);\n\n          case 16:\n            _context8.next = 18;\n            return _context8.sent.rows;\n\n          case 18:\n            causas = _context8.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context8.next = 25;\n            break;\n\n          case 22:\n            _context8.prev = 22;\n            _context8.t0 = _context8[\"catch\"](13);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context8.t0\n            });\n\n          case 25:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[13, 22]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}(); ////Listar inventario por materia pivoteado total tribunal\n\n\ndatografico.listarMateriaTribunalTotalPivoteado = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var _req$body4, tipo, tribunal, sql, causas;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _req$body4 = req.body, tipo = _req$body4.tipo, tribunal = _req$body4.tribunal;\n            sql = 'select gls_materia, coalesce(fr.\"2015\",0) as a_2015, ';\n            sql += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\n            sql += 'coalesce(fr.\"2018\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, ';\n            sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0)) as suma ';\n            sql += 'from crosstab( $$ ';\n            sql += 'select gls_materia, año, sum(cantidad_inventario) as cantidad_inventario ';\n            sql += 'from inventario_materia ';\n            sql += 'where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' ';\n            sql += 'group by gls_materia, año order by gls_materia, año ';\n            sql += '$$ ) as fr(gls_materia varchar, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint) order by suma desc limit 10';\n            _context9.prev = 13;\n            _context9.next = 16;\n            return _keys[\"default\"].query(sql);\n\n          case 16:\n            _context9.next = 18;\n            return _context9.sent.rows;\n\n          case 18:\n            causas = _context9.sent;\n\n            if (causas.length > 0) {\n              res.status(200).json({\n                registros: causas\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context9.next = 25;\n            break;\n\n          case 22:\n            _context9.prev = 22;\n            _context9.t0 = _context9[\"catch\"](13);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context9.t0\n            });\n\n          case 25:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[13, 22]]);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nmodule.exports = datografico;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyYWZpY29pbnZlbnRhcmlvLmpzIl0sIm5hbWVzIjpbImRhdG9ncmFmaWNvIiwiaGlzdG9yaWNvTmFjaW9uYWxfMSIsInJlcSIsInJlcyIsInRpcG8iLCJib2R5Iiwic3FsIiwicG9vbCIsInF1ZXJ5Iiwicm93cyIsImNhdXNhcyIsImxlbmd0aCIsInN0YXR1cyIsImpzb24iLCJyZWdpc3Ryb3MiLCJtZXNzYWdlIiwiTm90Rm91bmQiLCJlcnJvciIsImhpc3Rvcmljb05hY2lvbmFsSW5ncmVzbyIsImhpc3Rvcmljb05hY2lvbmFsSW52ZW50YXJpbyIsImhpc3Rvcmljb0NvbXBsZXRvIiwic3FsaSIsImNhdXNhc2kiLCJzcWxpaSIsImNhdXNhc2lpIiwiaGlzdG9yaWNvIiwiaGlzdG9yaWNvX2luZ3Jlc28iLCJoaXN0b3JpY29faW52ZW50YXJpbyIsImhpc3Rvcmljb0NvcnRlQ29tcGxldG8iLCJjb3J0ZSIsImhpc3Rvcmljb1RyaWJ1bmFsQ29tcGxldG8iLCJ0cmlidW5hbCIsImxpc3Rhck1hdGVyaWFUb3RhbFBpdm90ZWFkbyIsImxpc3Rhck1hdGVyaWFDb3J0ZVRvdGFsUGl2b3RlYWRvIiwibGlzdGFyTWF0ZXJpYVRyaWJ1bmFsVG90YWxQaXZvdGVhZG8iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7OztBQUVBLElBQU1BLFdBQVcsR0FBRyxFQUFwQjs7QUFFQUEsV0FBVyxDQUFDQyxtQkFBWjtBQUFBLHFFQUFrQyxpQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUN2QkMsWUFBQUEsSUFEdUIsR0FDZkYsR0FBRyxDQUFDRyxJQURXLENBQ3ZCRCxJQUR1QjtBQUUxQkUsWUFBQUEsR0FGMEIsR0FFcEIsK0NBRm9CO0FBR2pDQSxZQUFBQSxHQUFHLElBQUksaUVBQVA7QUFDQUEsWUFBQUEsR0FBRyxJQUFJLDBEQUFQO0FBQ0dBLFlBQUFBLEdBQUcsSUFBSSxzRUFBUDtBQUNBQSxZ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LEVBQWdCQyxJQUFoQixDQUFxQjtBQUNqQkMsZ0JBQUFBLFNBQVMsRUFBRUo7QUFETSxlQUFyQjtBQUdILGFBSkQsTUFJTztBQUNIUCxjQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNqQkUsZ0JBQUFBLE9BQU8sRUFBRSw2QkFEUTtBQUVqQkMsZ0JBQUFBLFFBQVEsRUFBRTtBQUZPLGVBQXJCO0FBSUg7O0FBekJ5QztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQTJCMUNiLFlBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCRSxjQUFBQSxPQUFPLEVBQUUscUJBRFE7QUFFakJFLGNBQUFBLEtBQUs7QUFGWSxhQUFyQjs7QUEzQjBDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWxEOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQWtDQWtCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBDLFdBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxqY2FzdHJvYVxcRG9jdW1lbnRzXFxEZXNhcnJvbGxvXFxub2RlXFxqamdnXFxzZXJ2aWRvclxcY29udHJvbGxlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwb29sIGZyb20gJy4uL2RhdGFiYXNlL2tleXMnO1xyXG5cclxuY29uc3QgZGF0b2dyYWZpY28gPSB7fTtcclxuXHJcbmRhdG9ncmFmaWNvLmhpc3Rvcmljb05hY2lvbmFsXzEgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGNvbnN0IHt0aXBvfSA9IHJlcS5ib2R5O1xyXG4gICAgdmFyIHNxbCA9ICdzZWxlY3QgZnIudGlwbyBhcyB0aXBvLCBmci5cIjIwMTVcIiBhcyBhXzIwMTUsICc7XHJcblx0c3FsICs9ICdmci5cIjIwMTZcIiBhcyBhXzIwMTYsIGZyLlwiMjAxN1wiIGFzIGFfMjAxNywgZnIuXCIyMDE4XCIgYXMgYV8yMDE4LCAnO1xyXG5cdHNxbCArPSAnZnIuXCIyMDE5XCIgYXMgYV8yMDE5LCBmci5cIjIwMjBcIiBhcyBhXzIwMjAgZnJvbSBjcm9zc3RhYiggJztcclxuICAgIHNxbCArPSAnJCQgc2VsZWN0IFxcJ0luZ3Jlc29zXFwnIGFzIHRpcG8sIGHDsW8sIHN1bShjYW50aWRhZF9pbmdyZXNvKSBhcyB2YWxvciAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGludmVudGFyaW8gd2hlcmUganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgZ3JvdXAgYnkgYcOxbyAnO1xyXG4gICAgc3FsICs9ICdVTklPTiBBTEwgJztcclxuICAgIHNxbCArPSAnc2VsZWN0IFxcJ0ludmVudGFyaW9cXCcgYXMgdGlwbywgYcOxbywgc3VtKGNhbnRpZGFkX2ludmVudGFyaW8pIGFzIHZhbG9yICc7XHJcbiAgICBzcWwgKz0gJ2Zyb20gaW52ZW50YXJpbyB3aGVyZSBqdXJpc2RpY2Npb24gPSBcXCcnK3RpcG8rJ1xcJyBncm91cCBieSBhw7FvICc7XHJcbiAgICBzcWwgKz0gJ29yZGVyIGJ5IHRpcG8sIGHDsW8gJCQpIGFzIGZyKHRpcG8gdGV4dCwgXCIyMDE1XCIgYmlnaW50LCBcIjIwMTZcIiBiaWdpbnQsIFwiMjAxN1wiIGJpZ2ludCwgJzsgXHJcbiAgICBzcWwgKz0gJ1wiMjAxOFwiIGJpZ2ludCwgXCIyMDE5XCIgYmlnaW50LCBcIjIwMjBcIiBiaWdpbnQpJztcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY2F1c2FzID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsKSkucm93cztcclxuICAgICAgICBpZiAoY2F1c2FzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgcmVnaXN0cm9zOiBjYXVzYXNcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgc3FsOiBzcWwsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmRhdG9ncmFmaWNvLmhpc3Rvcmljb05hY2lvbmFsSW5ncmVzbyA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3Qge3RpcG99ID0gcmVxLmJvZHk7XHJcbiAgICB2YXIgc3FsID0gJ3NlbGVjdCBmci5hw7FvIGFzIGHDsW8sIGZyLlwiMVwiIGFzIGVuZSwgZnIuXCIyXCIgYXMgZmViLCBmci5cIjNcIiBhcyBtYXIsICc7XHJcblx0c3FsICs9ICdmci5cIjRcIiBhcyBhYnIsIGZyLlwiNVwiIGFzIG1heSwgZnIuXCI2XCIgYXMganVuLCBmci5cIjdcIiBhcyBqdWwsIGZyLlwiOFwiIGFzIGFnbywgJztcclxuICAgIHNxbCArPSAnZnIuXCI5XCIgYXMgc2VwLCBmci5cIjEwXCIgYXMgb2N0LCBmci5cIjExXCIgYXMgbm92LCBmci5cIjEyXCIgYXMgZGljICdcclxuXHRzcWwgKz0gJ2Zyb20gY3Jvc3N0YWIoICc7XHJcbiAgICBzcWwgKz0gJyQkIHNlbGVjdCBhw7FvLCBtZXMsIHN1bShjYW50aWRhZF9pbmdyZXNvKSBhcyB2YWxvciAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGludmVudGFyaW8gd2hlcmUganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgZ3JvdXAgYnkgYcOxbywgbWVzIG9yZGVyIGJ5IGHDsW8sIG1lcyAkJCknO1xyXG4gICAgc3FsICs9ICcgYXMgZnIoYcOxbyBpbnQsIFwiMVwiIGJpZ2ludCwgXCIyXCIgYmlnaW50LCBcIjNcIiBiaWdpbnQsICc7XHJcbiAgICBzcWwgKz0gJ1wiNFwiIGJpZ2ludCwgXCI1XCIgYmlnaW50LCBcIjZcIiBiaWdpbnQsIFwiN1wiIGJpZ2ludCwgXCI4XCIgYmlnaW50LCBcIjlcIiBiaWdpbnQsICc7XHJcbiAgICBzcWwgKz0gJ1wiMTBcIiBiaWdpbnQsIFwiMTFcIiBiaWdpbnQsIFwiMTJcIiBiaWdpbnQpJztcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY2F1c2FzID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsKSkucm93cztcclxuICAgICAgICBpZiAoY2F1c2FzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgcmVnaXN0cm9zOiBjYXVzYXNcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgc3FsOiBzcWwsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmRhdG9ncmFmaWNvLmhpc3Rvcmljb05hY2lvbmFsSW52ZW50YXJpbyA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3Qge3RpcG99ID0gcmVxLmJvZHk7XHJcbiAgICB2YXIgc3FsID0gJ3NlbGVjdCBmci5hw7FvIGFzIGHDsW8sIGZyLlwiMVwiIGFzIGVuZSwgZnIuXCIyXCIgYXMgZmViLCBmci5cIjNcIiBhcyBtYXIsICc7XHJcblx0c3FsICs9ICdmci5cIjRcIiBhcyBhYnIsIGZyLlwiNVwiIGFzIG1heSwgZnIuXCI2XCIgYXMganVuLCBmci5cIjdcIiBhcyBqdWwsIGZyLlwiOFwiIGFzIGFnbywgJztcclxuICAgIHNxbCArPSAnZnIuXCI5XCIgYXMgc2VwLCBmci5cIjEwXCIgYXMgb2N0LCBmci5cIjExXCIgYXMgbm92LCBmci5cIjEyXCIgYXMgZGljICdcclxuXHRzcWwgKz0gJ2Zyb20gY3Jvc3N0YWIoICc7XHJcbiAgICBzcWwgKz0gJyQkIHNlbGVjdCBhw7FvLCBtZXMsIHN1bShjYW50aWRhZF9pbnZlbnRhcmlvKSBhcyB2YWxvciAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGludmVudGFyaW8gd2hlcmUganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgZ3JvdXAgYnkgYcOxbywgbWVzIG9yZGVyIGJ5IGHDsW8sIG1lcyAkJCknO1xyXG4gICAgc3FsICs9ICcgYXMgZnIoYcOxbyBpbnQsIFwiMVwiIGJpZ2ludCwgXCIyXCIgYmlnaW50LCBcIjNcIiBiaWdpbnQsICc7XHJcbiAgICBzcWwgKz0gJ1wiNFwiIGJpZ2ludCwgXCI1XCIgYmlnaW50LCBcIjZcIiBiaWdpbnQsIFwiN1wiIGJpZ2ludCwgXCI4XCIgYmlnaW50LCBcIjlcIiBiaWdpbnQsICc7XHJcbiAgICBzcWwgKz0gJ1wiMTBcIiBiaWdpbnQsIFwiMTFcIiBiaWdpbnQsIFwiMTJcIiBiaWdpbnQpJztcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY2F1c2FzID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsKSkucm93cztcclxuICAgICAgICBpZiAoY2F1c2FzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgcmVnaXN0cm9zOiBjYXVzYXNcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgc3FsOiBzcWwsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmRhdG9ncmFmaWNvLmhpc3Rvcmljb0NvbXBsZXRvID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB7dGlwb30gPSByZXEuYm9keTtcclxuICAgIHZhciBzcWwgPSAnc2VsZWN0IGZyLnRpcG8gYXMgdGlwbywgZnIuXCIyMDE1XCIgYXMgYV8yMDE1LCAnO1xyXG5cdHNxbCArPSAnZnIuXCIyMDE2XCIgYXMgYV8yMDE2LCBmci5cIjIwMTdcIiBhcyBhXzIwMTcsIGZyLlwiMjAxOFwiIGFzIGFfMjAxOCwgJztcclxuXHRzcWwgKz0gJ2ZyLlwiMjAxOVwiIGFzIGFfMjAxOSwgZnIuXCIyMDIwXCIgYXMgYV8yMDIwIGZyb20gY3Jvc3N0YWIoICc7XHJcbiAgICBzcWwgKz0gJyQkIHNlbGVjdCBcXCdJbmdyZXNvc1xcJyBhcyB0aXBvLCBhw7FvLCBzdW0oY2FudGlkYWRfaW5ncmVzbykgYXMgdmFsb3IgJztcclxuICAgIHNxbCArPSAnZnJvbSBpbnZlbnRhcmlvIHdoZXJlIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGdyb3VwIGJ5IGHDsW8gJztcclxuICAgIHNxbCArPSAnVU5JT04gQUxMICc7XHJcbiAgICBzcWwgKz0gJ3NlbGVjdCBcXCdJbnZlbnRhcmlvXFwnIGFzIHRpcG8sIGHDsW8sIHN1bShjYW50aWRhZF9pbnZlbnRhcmlvKSBhcyB2YWxvciAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGludmVudGFyaW8gd2hlcmUganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgZ3JvdXAgYnkgYcOxbyAnO1xyXG4gICAgc3FsICs9ICdvcmRlciBieSB0aXBvLCBhw7FvICQkKSBhcyBmcih0aXBvIHRleHQsIFwiMjAxNVwiIGJpZ2ludCwgXCIyMDE2XCIgYmlnaW50LCBcIjIwMTdcIiBiaWdpbnQsICc7IFxyXG4gICAgc3FsICs9ICdcIjIwMThcIiBiaWdpbnQsIFwiMjAxOVwiIGJpZ2ludCwgXCIyMDIwXCIgYmlnaW50KSc7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGNhdXNhcyA9IGF3YWl0IChhd2FpdCBwb29sLnF1ZXJ5KHNxbCkpLnJvd3M7XHJcbiAgICAgICAgaWYgKGNhdXNhcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHZhciBzcWxpID0gJ3NlbGVjdCBmci5hw7FvIGFzIGHDsW8sIGZyLlwiMVwiIGFzIGVuZSwgZnIuXCIyXCIgYXMgZmViLCBmci5cIjNcIiBhcyBtYXIsICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ2ZyLlwiNFwiIGFzIGFiciwgZnIuXCI1XCIgYXMgbWF5LCBmci5cIjZcIiBhcyBqdW4sIGZyLlwiN1wiIGFzIGp1bCwgZnIuXCI4XCIgYXMgYWdvLCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdmci5cIjlcIiBhcyBzZXAsIGZyLlwiMTBcIiBhcyBvY3QsIGZyLlwiMTFcIiBhcyBub3YsIGZyLlwiMTJcIiBhcyBkaWMgJ1xyXG4gICAgICAgICAgICBzcWxpICs9ICdmcm9tIGNyb3NzdGFiKCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICckJCBzZWxlY3QgYcOxbywgbWVzLCBzdW0oY2FudGlkYWRfaW5ncmVzbykgYXMgdmFsb3IgJztcclxuICAgICAgICAgICAgc3FsaSArPSAnZnJvbSBpbnZlbnRhcmlvIHdoZXJlIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGdyb3VwIGJ5IGHDsW8sIG1lcyBvcmRlciBieSBhw7FvLCBtZXMgJCQpJztcclxuICAgICAgICAgICAgc3FsaSArPSAnIGFzIGZyKGHDsW8gaW50LCBcIjFcIiBiaWdpbnQsIFwiMlwiIGJpZ2ludCwgXCIzXCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdcIjRcIiBiaWdpbnQsIFwiNVwiIGJpZ2ludCwgXCI2XCIgYmlnaW50LCBcIjdcIiBiaWdpbnQsIFwiOFwiIGJpZ2ludCwgXCI5XCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdcIjEwXCIgYmlnaW50LCBcIjExXCIgYmlnaW50LCBcIjEyXCIgYmlnaW50KSc7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjYXVzYXNpID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsaSkpLnJvd3M7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2F1c2FzaS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNxbGlpID0gJ3NlbGVjdCBmci5hw7FvIGFzIGHDsW8sIGZyLlwiMVwiIGFzIGVuZSwgZnIuXCIyXCIgYXMgZmViLCBmci5cIjNcIiBhcyBtYXIsICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2ZyLlwiNFwiIGFzIGFiciwgZnIuXCI1XCIgYXMgbWF5LCBmci5cIjZcIiBhcyBqdW4sIGZyLlwiN1wiIGFzIGp1bCwgZnIuXCI4XCIgYXMgYWdvLCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdmci5cIjlcIiBhcyBzZXAsIGZyLlwiMTBcIiBhcyBvY3QsIGZyLlwiMTFcIiBhcyBub3YsIGZyLlwiMTJcIiBhcyBkaWMgJ1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdmcm9tIGNyb3NzdGFiKCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICckJCBzZWxlY3QgYcOxbywgbWVzLCBzdW0oY2FudGlkYWRfaW52ZW50YXJpbykgYXMgdmFsb3IgJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnZnJvbSBpbnZlbnRhcmlvIHdoZXJlIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGdyb3VwIGJ5IGHDsW8sIG1lcyBvcmRlciBieSBhw7FvLCBtZXMgJCQpJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnIGFzIGZyKGHDsW8gaW50LCBcIjFcIiBiaWdpbnQsIFwiMlwiIGJpZ2ludCwgXCIzXCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdcIjRcIiBiaWdpbnQsIFwiNVwiIGJpZ2ludCwgXCI2XCIgYmlnaW50LCBcIjdcIiBiaWdpbnQsIFwiOFwiIGJpZ2ludCwgXCI5XCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdcIjEwXCIgYmlnaW50LCBcIjExXCIgYmlnaW50LCBcIjEyXCIgYmlnaW50KSc7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2F1c2FzaWkgPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWxpaSkpLnJvd3M7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYXVzYXNpaS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yaWNvOiBjYXVzYXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yaWNvX2luZ3Jlc286IGNhdXNhc2ksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yaWNvX2ludmVudGFyaW86IGNhdXNhc2lpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gc2UgZW5jb250cmFyb24gcmVnaXN0cm9zJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3FsOiBzcWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5vdEZvdW5kOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgICAgICAgICBzcWw6IHNxbCxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gc2UgZW5jb250cmFyb24gcmVnaXN0cm9zJyxcclxuICAgICAgICAgICAgICAgIE5vdEZvdW5kOiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICBzcWw6IHNxbCxcclxuICAgICAgICAgICAgZXJyb3JcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuLy9cclxuZGF0b2dyYWZpY28uaGlzdG9yaWNvQ29ydGVDb21wbGV0byA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3Qge3RpcG8sIGNvcnRlfSA9IHJlcS5ib2R5O1xyXG4gICAgdmFyIHNxbCA9ICdzZWxlY3QgZnIudGlwbyBhcyB0aXBvLCBmci5cIjIwMTVcIiBhcyBhXzIwMTUsICc7XHJcblx0c3FsICs9ICdmci5cIjIwMTZcIiBhcyBhXzIwMTYsIGZyLlwiMjAxN1wiIGFzIGFfMjAxNywgZnIuXCIyMDE4XCIgYXMgYV8yMDE4LCAnO1xyXG5cdHNxbCArPSAnZnIuXCIyMDE5XCIgYXMgYV8yMDE5LCBmci5cIjIwMjBcIiBhcyBhXzIwMjAgZnJvbSBjcm9zc3RhYiggJztcclxuICAgIHNxbCArPSAnJCQgc2VsZWN0IFxcJ0luZ3Jlc29zXFwnIGFzIHRpcG8sIGHDsW8sIHN1bShjYW50aWRhZF9pbmdyZXNvKSBhcyB2YWxvciAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGludmVudGFyaW8gd2hlcmUgY29kX2NvcnRlID0gJytjb3J0ZSsnIGFuZCBqdXJpc2RpY2Npb24gPSBcXCcnK3RpcG8rJ1xcJyBncm91cCBieSBhw7FvICc7XHJcbiAgICBzcWwgKz0gJ1VOSU9OIEFMTCAnO1xyXG4gICAgc3FsICs9ICdzZWxlY3QgXFwnSW52ZW50YXJpb1xcJyBhcyB0aXBvLCBhw7FvLCBzdW0oY2FudGlkYWRfaW52ZW50YXJpbykgYXMgdmFsb3IgJztcclxuICAgIHNxbCArPSAnZnJvbSBpbnZlbnRhcmlvIHdoZXJlIGNvZF9jb3J0ZSA9ICcrY29ydGUrJyBhbmQganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgZ3JvdXAgYnkgYcOxbyAnO1xyXG4gICAgc3FsICs9ICdvcmRlciBieSB0aXBvLCBhw7FvICQkKSBhcyBmcih0aXBvIHRleHQsIFwiMjAxNVwiIGJpZ2ludCwgXCIyMDE2XCIgYmlnaW50LCBcIjIwMTdcIiBiaWdpbnQsICc7IFxyXG4gICAgc3FsICs9ICdcIjIwMThcIiBiaWdpbnQsIFwiMjAxOVwiIGJpZ2ludCwgXCIyMDIwXCIgYmlnaW50KSc7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGNhdXNhcyA9IGF3YWl0IChhd2FpdCBwb29sLnF1ZXJ5KHNxbCkpLnJvd3M7XHJcbiAgICAgICAgaWYgKGNhdXNhcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHZhciBzcWxpID0gJ3NlbGVjdCBmci5hw7FvIGFzIGHDsW8sIGZyLlwiMVwiIGFzIGVuZSwgZnIuXCIyXCIgYXMgZmViLCBmci5cIjNcIiBhcyBtYXIsICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ2ZyLlwiNFwiIGFzIGFiciwgZnIuXCI1XCIgYXMgbWF5LCBmci5cIjZcIiBhcyBqdW4sIGZyLlwiN1wiIGFzIGp1bCwgZnIuXCI4XCIgYXMgYWdvLCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdmci5cIjlcIiBhcyBzZXAsIGZyLlwiMTBcIiBhcyBvY3QsIGZyLlwiMTFcIiBhcyBub3YsIGZyLlwiMTJcIiBhcyBkaWMgJ1xyXG4gICAgICAgICAgICBzcWxpICs9ICdmcm9tIGNyb3NzdGFiKCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICckJCBzZWxlY3QgYcOxbywgbWVzLCBzdW0oY2FudGlkYWRfaW5ncmVzbykgYXMgdmFsb3IgJztcclxuICAgICAgICAgICAgc3FsaSArPSAnZnJvbSBpbnZlbnRhcmlvIHdoZXJlIGNvZF9jb3J0ZT0nK2NvcnRlKycgYW5kIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGdyb3VwIGJ5IGHDsW8sIG1lcyBvcmRlciBieSBhw7FvLCBtZXMgJCQpJztcclxuICAgICAgICAgICAgc3FsaSArPSAnIGFzIGZyKGHDsW8gaW50LCBcIjFcIiBiaWdpbnQsIFwiMlwiIGJpZ2ludCwgXCIzXCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdcIjRcIiBiaWdpbnQsIFwiNVwiIGJpZ2ludCwgXCI2XCIgYmlnaW50LCBcIjdcIiBiaWdpbnQsIFwiOFwiIGJpZ2ludCwgXCI5XCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdcIjEwXCIgYmlnaW50LCBcIjExXCIgYmlnaW50LCBcIjEyXCIgYmlnaW50KSc7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjYXVzYXNpID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsaSkpLnJvd3M7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2F1c2FzaS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNxbGlpID0gJ3NlbGVjdCBmci5hw7FvIGFzIGHDsW8sIGZyLlwiMVwiIGFzIGVuZSwgZnIuXCIyXCIgYXMgZmViLCBmci5cIjNcIiBhcyBtYXIsICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2ZyLlwiNFwiIGFzIGFiciwgZnIuXCI1XCIgYXMgbWF5LCBmci5cIjZcIiBhcyBqdW4sIGZyLlwiN1wiIGFzIGp1bCwgZnIuXCI4XCIgYXMgYWdvLCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdmci5cIjlcIiBhcyBzZXAsIGZyLlwiMTBcIiBhcyBvY3QsIGZyLlwiMTFcIiBhcyBub3YsIGZyLlwiMTJcIiBhcyBkaWMgJ1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdmcm9tIGNyb3NzdGFiKCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICckJCBzZWxlY3QgYcOxbywgbWVzLCBzdW0oY2FudGlkYWRfaW52ZW50YXJpbykgYXMgdmFsb3IgJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnZnJvbSBpbnZlbnRhcmlvIHdoZXJlIGNvZF9jb3J0ZT0nK2NvcnRlKycgYW5kIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGdyb3VwIGJ5IGHDsW8sIG1lcyBvcmRlciBieSBhw7FvLCBtZXMgJCQpJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnIGFzIGZyKGHDsW8gaW50LCBcIjFcIiBiaWdpbnQsIFwiMlwiIGJpZ2ludCwgXCIzXCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdcIjRcIiBiaWdpbnQsIFwiNVwiIGJpZ2ludCwgXCI2XCIgYmlnaW50LCBcIjdcIiBiaWdpbnQsIFwiOFwiIGJpZ2ludCwgXCI5XCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdcIjEwXCIgYmlnaW50LCBcIjExXCIgYmlnaW50LCBcIjEyXCIgYmlnaW50KSc7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2F1c2FzaWkgPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWxpaSkpLnJvd3M7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYXVzYXNpaS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yaWNvOiBjYXVzYXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yaWNvX2luZ3Jlc286IGNhdXNhc2ksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yaWNvX2ludmVudGFyaW86IGNhdXNhc2lpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gc2UgZW5jb250cmFyb24gcmVnaXN0cm9zJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3FsOiBzcWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5vdEZvdW5kOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgICAgICAgICBzcWw6IHNxbCxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gc2UgZW5jb250cmFyb24gcmVnaXN0cm9zJyxcclxuICAgICAgICAgICAgICAgIE5vdEZvdW5kOiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICBzcWw6IHNxbCxcclxuICAgICAgICAgICAgZXJyb3JcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuZGF0b2dyYWZpY28uaGlzdG9yaWNvVHJpYnVuYWxDb21wbGV0byA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3Qge3RpcG8sIHRyaWJ1bmFsfSA9IHJlcS5ib2R5O1xyXG4gICAgdmFyIHNxbCA9ICdzZWxlY3QgZnIudGlwbyBhcyB0aXBvLCBmci5cIjIwMTVcIiBhcyBhXzIwMTUsICc7XHJcblx0c3FsICs9ICdmci5cIjIwMTZcIiBhcyBhXzIwMTYsIGZyLlwiMjAxN1wiIGFzIGFfMjAxNywgZnIuXCIyMDE4XCIgYXMgYV8yMDE4LCAnO1xyXG5cdHNxbCArPSAnZnIuXCIyMDE5XCIgYXMgYV8yMDE5LCBmci5cIjIwMjBcIiBhcyBhXzIwMjAgZnJvbSBjcm9zc3RhYiggJztcclxuICAgIHNxbCArPSAnJCQgc2VsZWN0IFxcJ0luZ3Jlc29zXFwnIGFzIHRpcG8sIGHDsW8sIHN1bShjYW50aWRhZF9pbmdyZXNvKSBhcyB2YWxvciAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGludmVudGFyaW8gd2hlcmUgY29kX3RyaWJ1bmFsID0gJyt0cmlidW5hbCsnIGFuZCBqdXJpc2RpY2Npb24gPSBcXCcnK3RpcG8rJ1xcJyBncm91cCBieSBhw7FvICc7XHJcbiAgICBzcWwgKz0gJ1VOSU9OIEFMTCAnO1xyXG4gICAgc3FsICs9ICdzZWxlY3QgXFwnSW52ZW50YXJpb1xcJyBhcyB0aXBvLCBhw7FvLCBzdW0oY2FudGlkYWRfaW52ZW50YXJpbykgYXMgdmFsb3IgJztcclxuICAgIHNxbCArPSAnZnJvbSBpbnZlbnRhcmlvIHdoZXJlIGNvZF90cmlidW5hbCA9ICcrdHJpYnVuYWwrJyBhbmQganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgZ3JvdXAgYnkgYcOxbyAnO1xyXG4gICAgc3FsICs9ICdvcmRlciBieSB0aXBvLCBhw7FvICQkKSBhcyBmcih0aXBvIHRleHQsIFwiMjAxNVwiIGJpZ2ludCwgXCIyMDE2XCIgYmlnaW50LCBcIjIwMTdcIiBiaWdpbnQsICc7IFxyXG4gICAgc3FsICs9ICdcIjIwMThcIiBiaWdpbnQsIFwiMjAxOVwiIGJpZ2ludCwgXCIyMDIwXCIgYmlnaW50KSc7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGNhdXNhcyA9IGF3YWl0IChhd2FpdCBwb29sLnF1ZXJ5KHNxbCkpLnJvd3M7XHJcbiAgICAgICAgaWYgKGNhdXNhcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHZhciBzcWxpID0gJ3NlbGVjdCBmci5hw7FvIGFzIGHDsW8sIGZyLlwiMVwiIGFzIGVuZSwgZnIuXCIyXCIgYXMgZmViLCBmci5cIjNcIiBhcyBtYXIsICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ2ZyLlwiNFwiIGFzIGFiciwgZnIuXCI1XCIgYXMgbWF5LCBmci5cIjZcIiBhcyBqdW4sIGZyLlwiN1wiIGFzIGp1bCwgZnIuXCI4XCIgYXMgYWdvLCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdmci5cIjlcIiBhcyBzZXAsIGZyLlwiMTBcIiBhcyBvY3QsIGZyLlwiMTFcIiBhcyBub3YsIGZyLlwiMTJcIiBhcyBkaWMgJ1xyXG4gICAgICAgICAgICBzcWxpICs9ICdmcm9tIGNyb3NzdGFiKCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICckJCBzZWxlY3QgYcOxbywgbWVzLCBzdW0oY2FudGlkYWRfaW5ncmVzbykgYXMgdmFsb3IgJztcclxuICAgICAgICAgICAgc3FsaSArPSAnZnJvbSBpbnZlbnRhcmlvIHdoZXJlIGNvZF90cmlidW5hbD0nK3RyaWJ1bmFsKycgYW5kIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGdyb3VwIGJ5IGHDsW8sIG1lcyBvcmRlciBieSBhw7FvLCBtZXMgJCQpJztcclxuICAgICAgICAgICAgc3FsaSArPSAnIGFzIGZyKGHDsW8gaW50LCBcIjFcIiBiaWdpbnQsIFwiMlwiIGJpZ2ludCwgXCIzXCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdcIjRcIiBiaWdpbnQsIFwiNVwiIGJpZ2ludCwgXCI2XCIgYmlnaW50LCBcIjdcIiBiaWdpbnQsIFwiOFwiIGJpZ2ludCwgXCI5XCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdcIjEwXCIgYmlnaW50LCBcIjExXCIgYmlnaW50LCBcIjEyXCIgYmlnaW50KSc7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjYXVzYXNpID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsaSkpLnJvd3M7XHJcbiAgICAgICAgICAgICAgICBpZiAoY2F1c2FzaS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNxbGlpID0gJ3NlbGVjdCBmci5hw7FvIGFzIGHDsW8sIGZyLlwiMVwiIGFzIGVuZSwgZnIuXCIyXCIgYXMgZmViLCBmci5cIjNcIiBhcyBtYXIsICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2ZyLlwiNFwiIGFzIGFiciwgZnIuXCI1XCIgYXMgbWF5LCBmci5cIjZcIiBhcyBqdW4sIGZyLlwiN1wiIGFzIGp1bCwgZnIuXCI4XCIgYXMgYWdvLCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdmci5cIjlcIiBhcyBzZXAsIGZyLlwiMTBcIiBhcyBvY3QsIGZyLlwiMTFcIiBhcyBub3YsIGZyLlwiMTJcIiBhcyBkaWMgJ1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdmcm9tIGNyb3NzdGFiKCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICckJCBzZWxlY3QgYcOxbywgbWVzLCBzdW0oY2FudGlkYWRfaW52ZW50YXJpbykgYXMgdmFsb3IgJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnZnJvbSBpbnZlbnRhcmlvIHdoZXJlIGNvZF90cmlidW5hbD0nK3RyaWJ1bmFsKycgYW5kIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGdyb3VwIGJ5IGHDsW8sIG1lcyBvcmRlciBieSBhw7FvLCBtZXMgJCQpJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnIGFzIGZyKGHDsW8gaW50LCBcIjFcIiBiaWdpbnQsIFwiMlwiIGJpZ2ludCwgXCIzXCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdcIjRcIiBiaWdpbnQsIFwiNVwiIGJpZ2ludCwgXCI2XCIgYmlnaW50LCBcIjdcIiBiaWdpbnQsIFwiOFwiIGJpZ2ludCwgXCI5XCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdcIjEwXCIgYmlnaW50LCBcIjExXCIgYmlnaW50LCBcIjEyXCIgYmlnaW50KSc7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2F1c2FzaWkgPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWxpaSkpLnJvd3M7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYXVzYXNpaS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yaWNvOiBjYXVzYXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yaWNvX2luZ3Jlc286IGNhdXNhc2ksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yaWNvX2ludmVudGFyaW86IGNhdXNhc2lpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gc2UgZW5jb250cmFyb24gcmVnaXN0cm9zJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3FsOiBzcWwsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE5vdEZvdW5kOiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgICAgICAgICBzcWw6IHNxbCxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gc2UgZW5jb250cmFyb24gcmVnaXN0cm9zJyxcclxuICAgICAgICAgICAgICAgIE5vdEZvdW5kOiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICBzcWw6IHNxbCxcclxuICAgICAgICAgICAgZXJyb3JcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuLy9MaXN0YXIgaW52ZW50YXJpbyBwb3IgbWF0ZXJpYSBwaXZvdGVhZG8gdG90YWxcclxuZGF0b2dyYWZpY28ubGlzdGFyTWF0ZXJpYVRvdGFsUGl2b3RlYWRvID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB7dGlwb30gPSByZXEuYm9keTtcclxuICAgIGxldCBzcWwgPSAnc2VsZWN0IGdsc19tYXRlcmlhLCBjb2FsZXNjZShmci5cIjIwMTVcIiwwKSBhcyBhXzIwMTUsICc7XHJcbiAgICBzcWwgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxNlwiLDApIGFzIGFfMjAxNiwgY29hbGVzY2UoZnIuXCIyMDE3XCIsMCkgYXMgYV8yMDE3LCAnO1xyXG4gICAgc3FsICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSBhcyBhXzIwMTksIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApIGFzIGFfMjAyMCwgJztcclxuICAgIHNxbCArPSAnKGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSArICc7XHJcbiAgICBzcWwgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxOFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE5XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjBcIiwwKSkgYXMgc3VtYSAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGNyb3NzdGFiKCAkJCAnO1xyXG4gICAgc3FsICs9ICdzZWxlY3QgZ2xzX21hdGVyaWEsIGHDsW8sIHN1bShjYW50aWRhZF9pbnZlbnRhcmlvKSBhcyBjYW50aWRhZF9pbnZlbnRhcmlvICc7XHJcbiAgICBzcWwgKz0gJ2Zyb20gaW52ZW50YXJpb19tYXRlcmlhICc7XHJcbiAgICBzcWwgKz0gJ3doZXJlIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnICc7XHJcbiAgICBzcWwgKz0gJ2dyb3VwIGJ5IGdsc19tYXRlcmlhLCBhw7FvIG9yZGVyIGJ5IGdsc19tYXRlcmlhLCBhw7FvICc7XHJcbiAgICBzcWwgKz0gJyQkICkgYXMgZnIoZ2xzX21hdGVyaWEgdmFyY2hhciwgXCIyMDE1XCIgYmlnaW50LCBcIjIwMTZcIiBiaWdpbnQsIFwiMjAxN1wiIGJpZ2ludCwgJztcclxuICAgIHNxbCArPSAnXCIyMDE4XCIgYmlnaW50LCBcIjIwMTlcIiBiaWdpbnQsIFwiMjAyMFwiIGJpZ2ludCkgb3JkZXIgYnkgc3VtYSBkZXNjIGxpbWl0IDEwJztcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY2F1c2FzID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsKSkucm93cztcclxuICAgICAgICBpZiAoY2F1c2FzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgcmVnaXN0cm9zOiBjYXVzYXNcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgZXJyb3JcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuLy8vL0xpc3RhciBpbnZlbnRhcmlvIHBvciBtYXRlcmlhIHBpdm90ZWFkbyB0b3RhbCBjb3J0ZVxyXG5kYXRvZ3JhZmljby5saXN0YXJNYXRlcmlhQ29ydGVUb3RhbFBpdm90ZWFkbyA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3Qge3RpcG8sIGNvcnRlfSA9IHJlcS5ib2R5O1xyXG4gICAgbGV0IHNxbCA9ICdzZWxlY3QgZ2xzX21hdGVyaWEsIGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApIGFzIGFfMjAxNSwgJztcclxuICAgIHNxbCArPSAnY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgYXMgYV8yMDE2LCBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSBhcyBhXzIwMTcsICc7XHJcbiAgICBzcWwgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxOFwiLDApIGFzIGFfMjAxOSwgY29hbGVzY2UoZnIuXCIyMDIwXCIsMCkgYXMgYV8yMDIwLCAnO1xyXG4gICAgc3FsICs9ICcoY29hbGVzY2UoZnIuXCIyMDE1XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTZcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxN1wiLDApICsgJztcclxuICAgIHNxbCArPSAnY29hbGVzY2UoZnIuXCIyMDE4XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTlcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApKSBhcyBzdW1hICc7XHJcbiAgICBzcWwgKz0gJ2Zyb20gY3Jvc3N0YWIoICQkICc7XHJcbiAgICBzcWwgKz0gJ3NlbGVjdCBnbHNfbWF0ZXJpYSwgYcOxbywgc3VtKGNhbnRpZGFkX2ludmVudGFyaW8pIGFzIGNhbnRpZGFkX2ludmVudGFyaW8gJztcclxuICAgIHNxbCArPSAnZnJvbSBpbnZlbnRhcmlvX21hdGVyaWEgJztcclxuICAgIHNxbCArPSAnd2hlcmUgY29kX2NvcnRlID0gJytjb3J0ZSsnIGFuZCBqdXJpc2RpY2Npb24gPSBcXCcnK3RpcG8rJ1xcJyAnO1xyXG4gICAgc3FsICs9ICdncm91cCBieSBnbHNfbWF0ZXJpYSwgYcOxbyBvcmRlciBieSBnbHNfbWF0ZXJpYSwgYcOxbyAnO1xyXG4gICAgc3FsICs9ICckJCApIGFzIGZyKGdsc19tYXRlcmlhIHZhcmNoYXIsIFwiMjAxNVwiIGJpZ2ludCwgXCIyMDE2XCIgYmlnaW50LCBcIjIwMTdcIiBiaWdpbnQsICc7XHJcbiAgICBzcWwgKz0gJ1wiMjAxOFwiIGJpZ2ludCwgXCIyMDE5XCIgYmlnaW50LCBcIjIwMjBcIiBiaWdpbnQpIG9yZGVyIGJ5IHN1bWEgZGVzYyBsaW1pdCAxMCc7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGNhdXNhcyA9IGF3YWl0IChhd2FpdCBwb29sLnF1ZXJ5KHNxbCkpLnJvd3M7XHJcbiAgICAgICAgaWYgKGNhdXNhcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIHJlZ2lzdHJvczogY2F1c2FzXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdObyBzZSBlbmNvbnRyYXJvbiByZWdpc3Ryb3MnLFxyXG4gICAgICAgICAgICAgICAgTm90Rm91bmQ6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmnDsyB1biBwcm9ibGVtYScsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vLy9MaXN0YXIgaW52ZW50YXJpbyBwb3IgbWF0ZXJpYSBwaXZvdGVhZG8gdG90YWwgdHJpYnVuYWxcclxuZGF0b2dyYWZpY28ubGlzdGFyTWF0ZXJpYVRyaWJ1bmFsVG90YWxQaXZvdGVhZG8gPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGNvbnN0IHt0aXBvLCB0cmlidW5hbH0gPSByZXEuYm9keTtcclxuICAgIGxldCBzcWwgPSAnc2VsZWN0IGdsc19tYXRlcmlhLCBjb2FsZXNjZShmci5cIjIwMTVcIiwwKSBhcyBhXzIwMTUsICc7XHJcbiAgICBzcWwgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxNlwiLDApIGFzIGFfMjAxNiwgY29hbGVzY2UoZnIuXCIyMDE3XCIsMCkgYXMgYV8yMDE3LCAnO1xyXG4gICAgc3FsICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSBhcyBhXzIwMTksIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApIGFzIGFfMjAyMCwgJztcclxuICAgIHNxbCArPSAnKGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSArICc7XHJcbiAgICBzcWwgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxOFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE5XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjBcIiwwKSkgYXMgc3VtYSAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGNyb3NzdGFiKCAkJCAnO1xyXG4gICAgc3FsICs9ICdzZWxlY3QgZ2xzX21hdGVyaWEsIGHDsW8sIHN1bShjYW50aWRhZF9pbnZlbnRhcmlvKSBhcyBjYW50aWRhZF9pbnZlbnRhcmlvICc7XHJcbiAgICBzcWwgKz0gJ2Zyb20gaW52ZW50YXJpb19tYXRlcmlhICc7XHJcbiAgICBzcWwgKz0gJ3doZXJlIGNvZF90cmlidW5hbCA9ICcrdHJpYnVuYWwrJyBhbmQganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgJztcclxuICAgIHNxbCArPSAnZ3JvdXAgYnkgZ2xzX21hdGVyaWEsIGHDsW8gb3JkZXIgYnkgZ2xzX21hdGVyaWEsIGHDsW8gJztcclxuICAgIHNxbCArPSAnJCQgKSBhcyBmcihnbHNfbWF0ZXJpYSB2YXJjaGFyLCBcIjIwMTVcIiBiaWdpbnQsIFwiMjAxNlwiIGJpZ2ludCwgXCIyMDE3XCIgYmlnaW50LCAnO1xyXG4gICAgc3FsICs9ICdcIjIwMThcIiBiaWdpbnQsIFwiMjAxOVwiIGJpZ2ludCwgXCIyMDIwXCIgYmlnaW50KSBvcmRlciBieSBzdW1hIGRlc2MgbGltaXQgMTAnO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBjYXVzYXMgPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWwpKS5yb3dzO1xyXG4gICAgICAgIGlmIChjYXVzYXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICByZWdpc3Ryb3M6IGNhdXNhc1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gc2UgZW5jb250cmFyb24gcmVnaXN0cm9zJyxcclxuICAgICAgICAgICAgICAgIE5vdEZvdW5kOiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICBlcnJvclxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGRhdG9ncmFmaWNvOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "graficoinventario.js"
      ],
      "names": [
        "datografico",
        "historicoNacional_1",
        "req",
        "res",
        "tipo",
        "body",
        "sql",
        "pool",
        "query",
        "rows",
        "causas",
        "length",
        "status",
        "json",
        "registros",
        "message",
        "NotFound",
        "error",
        "historicoNacionalIngreso",
        "historicoNacionalInventario",
        "historicoCompleto",
        "sqli",
        "causasi",
        "sqlii",
        "causasii",
        "historico",
        "historico_ingreso",
        "historico_inventario",
        "historicoCorteCompleto",
        "corte",
        "historicoTribunalCompleto",
        "tribunal",
        "listarMateriaTotalPivoteado",
        "listarMateriaCorteTotalPivoteado",
        "listarMateriaTribunalTotalPivoteado",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "sourcesContent": [
        "import pool from '../database/keys';\r\n\r\nconst datografico = {};\r\n\r\ndatografico.historicoNacional_1 = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    var sql = 'select fr.tipo as tipo, fr.\"2015\" as a_2015, ';\r\n\tsql += 'fr.\"2016\" as a_2016, fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, ';\r\n\tsql += 'fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 from crosstab( ';\r\n    sql += '$$ select \\'Ingresos\\' as tipo, año, sum(cantidad_ingreso) as valor ';\r\n    sql += 'from inventario where jurisdiccion = \\''+tipo+'\\' group by año ';\r\n    sql += 'UNION ALL ';\r\n    sql += 'select \\'Inventario\\' as tipo, año, sum(cantidad_inventario) as valor ';\r\n    sql += 'from inventario where jurisdiccion = \\''+tipo+'\\' group by año ';\r\n    sql += 'order by tipo, año $$) as fr(tipo text, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, '; \r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint)';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            sql: sql,\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\ndatografico.historicoNacionalIngreso = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    var sql = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\r\n\tsql += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\r\n    sql += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic '\r\n\tsql += 'from crosstab( ';\r\n    sql += '$$ select año, mes, sum(cantidad_ingreso) as valor ';\r\n    sql += 'from inventario where jurisdiccion = \\''+tipo+'\\' group by año, mes order by año, mes $$)';\r\n    sql += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\r\n    sql += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\r\n    sql += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            sql: sql,\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\ndatografico.historicoNacionalInventario = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    var sql = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\r\n\tsql += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\r\n    sql += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic '\r\n\tsql += 'from crosstab( ';\r\n    sql += '$$ select año, mes, sum(cantidad_inventario) as valor ';\r\n    sql += 'from inventario where jurisdiccion = \\''+tipo+'\\' group by año, mes order by año, mes $$)';\r\n    sql += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\r\n    sql += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\r\n    sql += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            sql: sql,\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\ndatografico.historicoCompleto = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    var sql = 'select fr.tipo as tipo, fr.\"2015\" as a_2015, ';\r\n\tsql += 'fr.\"2016\" as a_2016, fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, ';\r\n\tsql += 'fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 from crosstab( ';\r\n    sql += '$$ select \\'Ingresos\\' as tipo, año, sum(cantidad_ingreso) as valor ';\r\n    sql += 'from inventario where jurisdiccion = \\''+tipo+'\\' group by año ';\r\n    sql += 'UNION ALL ';\r\n    sql += 'select \\'Inventario\\' as tipo, año, sum(cantidad_inventario) as valor ';\r\n    sql += 'from inventario where jurisdiccion = \\''+tipo+'\\' group by año ';\r\n    sql += 'order by tipo, año $$) as fr(tipo text, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, '; \r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint)';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            var sqli = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\r\n            sqli += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\r\n            sqli += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic '\r\n            sqli += 'from crosstab( ';\r\n            sqli += '$$ select año, mes, sum(cantidad_ingreso) as valor ';\r\n            sqli += 'from inventario where jurisdiccion = \\''+tipo+'\\' group by año, mes order by año, mes $$)';\r\n            sqli += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\r\n            sqli += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\r\n            sqli += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\r\n            try {\r\n                const causasi = await (await pool.query(sqli)).rows;\r\n                if (causasi.length > 0) {\r\n                    var sqlii = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\r\n                    sqlii += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\r\n                    sqlii += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic '\r\n                    sqlii += 'from crosstab( ';\r\n                    sqlii += '$$ select año, mes, sum(cantidad_inventario) as valor ';\r\n                    sqlii += 'from inventario where jurisdiccion = \\''+tipo+'\\' group by año, mes order by año, mes $$)';\r\n                    sqlii += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\r\n                    sqlii += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\r\n                    sqlii += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\r\n                    try {\r\n                        const causasii = await (await pool.query(sqlii)).rows;\r\n                        if (causasii.length > 0) {\r\n                            res.status(200).json({\r\n                                historico: causas,\r\n                                historico_ingreso: causasi,\r\n                                historico_inventario: causasii\r\n                            });\r\n                        } else {\r\n                            res.status(200).json({\r\n                                message: 'No se encontraron registros',\r\n                                NotFound: true\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.status(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            sql: sql,\r\n                            error\r\n                        });\r\n                    }\r\n                } else {\r\n                    res.status(200).json({\r\n                        message: 'No se encontraron registros',\r\n                        NotFound: true\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    sql: sql,\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            sql: sql,\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//\r\ndatografico.historicoCorteCompleto = async (req, res) => {\r\n    const {tipo, corte} = req.body;\r\n    var sql = 'select fr.tipo as tipo, fr.\"2015\" as a_2015, ';\r\n\tsql += 'fr.\"2016\" as a_2016, fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, ';\r\n\tsql += 'fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 from crosstab( ';\r\n    sql += '$$ select \\'Ingresos\\' as tipo, año, sum(cantidad_ingreso) as valor ';\r\n    sql += 'from inventario where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' group by año ';\r\n    sql += 'UNION ALL ';\r\n    sql += 'select \\'Inventario\\' as tipo, año, sum(cantidad_inventario) as valor ';\r\n    sql += 'from inventario where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' group by año ';\r\n    sql += 'order by tipo, año $$) as fr(tipo text, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, '; \r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint)';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            var sqli = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\r\n            sqli += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\r\n            sqli += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic '\r\n            sqli += 'from crosstab( ';\r\n            sqli += '$$ select año, mes, sum(cantidad_ingreso) as valor ';\r\n            sqli += 'from inventario where cod_corte='+corte+' and jurisdiccion = \\''+tipo+'\\' group by año, mes order by año, mes $$)';\r\n            sqli += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\r\n            sqli += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\r\n            sqli += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\r\n            try {\r\n                const causasi = await (await pool.query(sqli)).rows;\r\n                if (causasi.length > 0) {\r\n                    var sqlii = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\r\n                    sqlii += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\r\n                    sqlii += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic '\r\n                    sqlii += 'from crosstab( ';\r\n                    sqlii += '$$ select año, mes, sum(cantidad_inventario) as valor ';\r\n                    sqlii += 'from inventario where cod_corte='+corte+' and jurisdiccion = \\''+tipo+'\\' group by año, mes order by año, mes $$)';\r\n                    sqlii += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\r\n                    sqlii += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\r\n                    sqlii += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\r\n                    try {\r\n                        const causasii = await (await pool.query(sqlii)).rows;\r\n                        if (causasii.length > 0) {\r\n                            res.status(200).json({\r\n                                historico: causas,\r\n                                historico_ingreso: causasi,\r\n                                historico_inventario: causasii\r\n                            });\r\n                        } else {\r\n                            res.status(200).json({\r\n                                message: 'No se encontraron registros',\r\n                                NotFound: true\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.status(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            sql: sql,\r\n                            error\r\n                        });\r\n                    }\r\n                } else {\r\n                    res.status(200).json({\r\n                        message: 'No se encontraron registros',\r\n                        NotFound: true\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    sql: sql,\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            sql: sql,\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\ndatografico.historicoTribunalCompleto = async (req, res) => {\r\n    const {tipo, tribunal} = req.body;\r\n    var sql = 'select fr.tipo as tipo, fr.\"2015\" as a_2015, ';\r\n\tsql += 'fr.\"2016\" as a_2016, fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, ';\r\n\tsql += 'fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 from crosstab( ';\r\n    sql += '$$ select \\'Ingresos\\' as tipo, año, sum(cantidad_ingreso) as valor ';\r\n    sql += 'from inventario where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' group by año ';\r\n    sql += 'UNION ALL ';\r\n    sql += 'select \\'Inventario\\' as tipo, año, sum(cantidad_inventario) as valor ';\r\n    sql += 'from inventario where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' group by año ';\r\n    sql += 'order by tipo, año $$) as fr(tipo text, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, '; \r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint)';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            var sqli = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\r\n            sqli += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\r\n            sqli += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic '\r\n            sqli += 'from crosstab( ';\r\n            sqli += '$$ select año, mes, sum(cantidad_ingreso) as valor ';\r\n            sqli += 'from inventario where cod_tribunal='+tribunal+' and jurisdiccion = \\''+tipo+'\\' group by año, mes order by año, mes $$)';\r\n            sqli += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\r\n            sqli += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\r\n            sqli += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\r\n            try {\r\n                const causasi = await (await pool.query(sqli)).rows;\r\n                if (causasi.length > 0) {\r\n                    var sqlii = 'select fr.año as año, fr.\"1\" as ene, fr.\"2\" as feb, fr.\"3\" as mar, ';\r\n                    sqlii += 'fr.\"4\" as abr, fr.\"5\" as may, fr.\"6\" as jun, fr.\"7\" as jul, fr.\"8\" as ago, ';\r\n                    sqlii += 'fr.\"9\" as sep, fr.\"10\" as oct, fr.\"11\" as nov, fr.\"12\" as dic '\r\n                    sqlii += 'from crosstab( ';\r\n                    sqlii += '$$ select año, mes, sum(cantidad_inventario) as valor ';\r\n                    sqlii += 'from inventario where cod_tribunal='+tribunal+' and jurisdiccion = \\''+tipo+'\\' group by año, mes order by año, mes $$)';\r\n                    sqlii += ' as fr(año int, \"1\" bigint, \"2\" bigint, \"3\" bigint, ';\r\n                    sqlii += '\"4\" bigint, \"5\" bigint, \"6\" bigint, \"7\" bigint, \"8\" bigint, \"9\" bigint, ';\r\n                    sqlii += '\"10\" bigint, \"11\" bigint, \"12\" bigint)';\r\n                    try {\r\n                        const causasii = await (await pool.query(sqlii)).rows;\r\n                        if (causasii.length > 0) {\r\n                            res.status(200).json({\r\n                                historico: causas,\r\n                                historico_ingreso: causasi,\r\n                                historico_inventario: causasii\r\n                            });\r\n                        } else {\r\n                            res.status(200).json({\r\n                                message: 'No se encontraron registros',\r\n                                NotFound: true\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.status(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            sql: sql,\r\n                            error\r\n                        });\r\n                    }\r\n                } else {\r\n                    res.status(200).json({\r\n                        message: 'No se encontraron registros',\r\n                        NotFound: true\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    sql: sql,\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            sql: sql,\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar inventario por materia pivoteado total\r\ndatografico.listarMateriaTotalPivoteado = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    let sql = 'select gls_materia, coalesce(fr.\"2015\",0) as a_2015, ';\r\n    sql += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\r\n    sql += 'coalesce(fr.\"2018\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, ';\r\n    sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n    sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0)) as suma ';\r\n    sql += 'from crosstab( $$ ';\r\n    sql += 'select gls_materia, año, sum(cantidad_inventario) as cantidad_inventario ';\r\n    sql += 'from inventario_materia ';\r\n    sql += 'where jurisdiccion = \\''+tipo+'\\' ';\r\n    sql += 'group by gls_materia, año order by gls_materia, año ';\r\n    sql += '$$ ) as fr(gls_materia varchar, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint) order by suma desc limit 10';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n////Listar inventario por materia pivoteado total corte\r\ndatografico.listarMateriaCorteTotalPivoteado = async (req, res) => {\r\n    const {tipo, corte} = req.body;\r\n    let sql = 'select gls_materia, coalesce(fr.\"2015\",0) as a_2015, ';\r\n    sql += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\r\n    sql += 'coalesce(fr.\"2018\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, ';\r\n    sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n    sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0)) as suma ';\r\n    sql += 'from crosstab( $$ ';\r\n    sql += 'select gls_materia, año, sum(cantidad_inventario) as cantidad_inventario ';\r\n    sql += 'from inventario_materia ';\r\n    sql += 'where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' ';\r\n    sql += 'group by gls_materia, año order by gls_materia, año ';\r\n    sql += '$$ ) as fr(gls_materia varchar, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint) order by suma desc limit 10';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n////Listar inventario por materia pivoteado total tribunal\r\ndatografico.listarMateriaTribunalTotalPivoteado = async (req, res) => {\r\n    const {tipo, tribunal} = req.body;\r\n    let sql = 'select gls_materia, coalesce(fr.\"2015\",0) as a_2015, ';\r\n    sql += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\r\n    sql += 'coalesce(fr.\"2018\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, ';\r\n    sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n    sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0)) as suma ';\r\n    sql += 'from crosstab( $$ ';\r\n    sql += 'select gls_materia, año, sum(cantidad_inventario) as cantidad_inventario ';\r\n    sql += 'from inventario_materia ';\r\n    sql += 'where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' ';\r\n    sql += 'group by gls_materia, año order by gls_materia, año ';\r\n    sql += '$$ ) as fr(gls_materia varchar, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint) order by suma desc limit 10';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            res.status(200).json({\r\n                registros: causas\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = datografico;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620847523298
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"filename\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\categorico.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\categorico.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\categorico.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\categorico.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
        "sourceFileName": "categorico.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _keys = _interopRequireDefault(require(\"../database/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar datocategorico = {}; //listar cortes\n\ndatocategorico.listarCorte = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var tipo, sql, cortes;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select cod_corte, gls_corte from corte where cod_corte < 100 order by cod_corte asc';\n            _context.prev = 2;\n            _context.next = 5;\n            return _keys[\"default\"].query(sql);\n\n          case 5:\n            _context.next = 7;\n            return _context.sent.rows;\n\n          case 7:\n            cortes = _context.sent;\n\n            if (cortes.length > 0) {\n              res.status(200).json({\n                registros: cortes\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](2);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 11]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //listar tribunales\n\n\ndatocategorico.listarTribunal = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var tipo, sql, tribunales;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select cod_tribunal, gls_tribunal from tribunal where jurisdiccion = $1 and cod_tribunal < 10000 order by cod_tribunal asc';\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _keys[\"default\"].query(sql, [tipo]);\n\n          case 5:\n            _context2.next = 7;\n            return _context2.sent.rows;\n\n          case 7:\n            tribunales = _context2.sent;\n\n            if (tribunales.length > 0) {\n              res.status(200).json({\n                registros: tribunales\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](2);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context2.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 11]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports = datocategorico;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3JpY28uanMiXSwibmFtZXMiOlsiZGF0b2NhdGVnb3JpY28iLCJsaXN0YXJDb3J0ZSIsInJlcSIsInJlcyIsInRpcG8iLCJib2R5Iiwic3FsIiwicG9vbCIsInF1ZXJ5Iiwicm93cyIsImNvcnRlcyIsImxlbmd0aCIsInN0YXR1cyIsImpzb24iLCJyZWdpc3Ryb3MiLCJtZXNzYWdlIiwiTm90Rm91bmQiLCJlcnJvciIsImxpc3RhclRyaWJ1bmFsIiwidHJpYnVuYWxlcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsY0FBYyxHQUFHLEVBQXZCLEMsQ0FFQTs7QUFDQUEsY0FBYyxDQUFDQyxXQUFmO0FBQUEscUVBQTZCLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2xCQyxZQUFBQSxJQURrQixHQUNWRixHQUFHLENBQUNHLElBRE0sQ0FDbEJELElBRGtCO0FBRXJCRSxZQUFBQSxHQUZxQixHQUVmLHFGQUZlO0FBQUE7QUFBQTtBQUFBLG1CQUlPQyxpQkFBS0MsS0FBTCxDQUFXRixHQUFYLENBSlA7O0FBQUE7QUFBQTtBQUFBLGlDQUl3QkcsSUFKeEI7O0FBQUE7QUFJZkMsWUFBQUEsTUFKZTs7QUFLckIsZ0JBQUlBLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixDQUFwQixFQUF1QjtBQUNuQlIsY0FBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJDLGdCQUFBQSxTQUFTLEVBQUVKO0FBRE0sZUFBckI7QUFHSCxhQUpELE1BSU87QUFDSFAsY0FBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJFLGdCQUFBQSxPQUFPLEVBQUUsNkJBRFE7QUFFakJDLGdCQUFBQSxRQUFRLEVBQUU7QUFGTyxlQUFyQjtBQUlIOztBQWRvQjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQWdCckJiLFlBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCRSxjQUFBQSxPQUFPLEVBQUUscUJBRFE7QUFFakJULGNBQUFBLEdBQUcsRUFBRUEsR0FGWTtBQUdqQlcsY0FBQUEsS0FBSztBQUhZLGFBQXJCOztBQWhCcUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBN0I7O0FBQUE7QUFBQTtBQUFBO0FBQUEsSSxDQXdCQTs7O0FBQ0FqQixjQUFjLENBQUNrQixjQUFmO0FBQUEsc0VBQWdDLGtCQUFPaEIsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNyQkMsWUFBQUEsSUFEcUIsR0FDYkYsR0FBRyxDQUFDRyxJQURTLENBQ3JCRCxJQURxQjtBQUV4QkUsWUFBQUEsR0FGd0IsR0FFbEIsNEhBRmtCO0FBQUE7QUFBQTtBQUFBLG1CQUlRQyxpQkFBS0MsS0FBTCxDQUFXRixHQUFYLEVBQWdCLENBQUNGLElBQUQsQ0FBaEIsQ0FKUjs7QUFBQTtBQUFBO0FBQUEsa0NBSWlDSyxJQUpqQzs7QUFBQTtBQUlsQlUsWUFBQUEsVUFKa0I7O0FBS3hCLGdCQUFJQSxVQUFVLENBQUNSLE1BQVgsR0FBb0IsQ0FBeEIsRUFBMkI7QUFDdkJSLGNBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCQyxnQkFBQUEsU0FBUyxFQUFFSztBQURNLGVBQXJCO0FBR0gsYUFKRCxNQUlPO0FBQ0hoQixjQUFBQSxHQUFHLENBQUNTLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUNqQkUsZ0JBQUFBLE9BQU8sRUFBRSw2QkFEUTtBQUVqQkMsZ0JBQUFBLFFBQVEsRUFBRTtBQUZPLGVBQXJCO0FBSUg7O0FBZHVCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBZ0J4QmIsWUFBQUEsR0FBRyxDQUFDUyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJFLGNBQUFBLE9BQU8sRUFBRSxxQkFEUTtBQUVqQlQsY0FBQUEsR0FBRyxFQUFFQSxHQUZZO0FBR2pCVyxjQUFBQSxLQUFLO0FBSFksYUFBckI7O0FBaEJ3QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFoQzs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUF3QkFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnJCLGNBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxqY2FzdHJvYVxcRG9jdW1lbnRzXFxEZXNhcnJvbGxvXFxub2RlXFxqamdnXFxzZXJ2aWRvclxcY29udHJvbGxlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwb29sIGZyb20gJy4uL2RhdGFiYXNlL2tleXMnO1xyXG5cclxuY29uc3QgZGF0b2NhdGVnb3JpY28gPSB7fTtcclxuXHJcbi8vbGlzdGFyIGNvcnRlc1xyXG5kYXRvY2F0ZWdvcmljby5saXN0YXJDb3J0ZSA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3Qge3RpcG99ID0gcmVxLmJvZHk7XHJcbiAgICB2YXIgc3FsID0gJ3NlbGVjdCBjb2RfY29ydGUsIGdsc19jb3J0ZSBmcm9tIGNvcnRlIHdoZXJlIGNvZF9jb3J0ZSA8IDEwMCBvcmRlciBieSBjb2RfY29ydGUgYXNjJztcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY29ydGVzID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsKSkucm93cztcclxuICAgICAgICBpZiAoY29ydGVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgcmVnaXN0cm9zOiBjb3J0ZXNcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgc3FsOiBzcWwsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vbGlzdGFyIHRyaWJ1bmFsZXNcclxuZGF0b2NhdGVnb3JpY28ubGlzdGFyVHJpYnVuYWwgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGNvbnN0IHt0aXBvfSA9IHJlcS5ib2R5O1xyXG4gICAgdmFyIHNxbCA9ICdzZWxlY3QgY29kX3RyaWJ1bmFsLCBnbHNfdHJpYnVuYWwgZnJvbSB0cmlidW5hbCB3aGVyZSBqdXJpc2RpY2Npb24gPSAkMSBhbmQgY29kX3RyaWJ1bmFsIDwgMTAwMDAgb3JkZXIgYnkgY29kX3RyaWJ1bmFsIGFzYyc7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHRyaWJ1bmFsZXMgPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWwsIFt0aXBvXSkpLnJvd3M7XHJcbiAgICAgICAgaWYgKHRyaWJ1bmFsZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICByZWdpc3Ryb3M6IHRyaWJ1bmFsZXNcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgc3FsOiBzcWwsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZGF0b2NhdGVnb3JpY287Il19",
    "map": {
      "version": 3,
      "sources": [
        "categorico.js"
      ],
      "names": [
        "datocategorico",
        "listarCorte",
        "req",
        "res",
        "tipo",
        "body",
        "sql",
        "pool",
        "query",
        "rows",
        "cortes",
        "length",
        "status",
        "json",
        "registros",
        "message",
        "NotFound",
        "error",
        "listarTribunal",
        "tribunales",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;;;AAEA,IAAMA,cAAc,GAAG,EAAvB,C,CAEA;;AACAA,cAAc,CAACC,WAAf;AAAA,qEAA6B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,IADkB,GACVF,GAAG,CAACG,IADM,CAClBD,IADkB;AAErBE,YAAAA,GAFqB,GAEf,qFAFe;AAAA;AAAA;AAAA,mBAIOC,iBAAKC,KAAL,CAAWF,GAAX,CAJP;;AAAA;AAAA;AAAA,iCAIwBG,IAJxB;;AAAA;AAIfC,YAAAA,MAJe;;AAKrB,gBAAIA,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACnBR,cAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,gBAAAA,SAAS,EAAEJ;AADM,eAArB;AAGH,aAJD,MAIO;AACHP,cAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBE,gBAAAA,OAAO,EAAE,6BADQ;AAEjBC,gBAAAA,QAAQ,EAAE;AAFO,eAArB;AAIH;;AAdoB;AAAA;;AAAA;AAAA;AAAA;AAgBrBb,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBE,cAAAA,OAAO,EAAE,qBADQ;AAEjBT,cAAAA,GAAG,EAAEA,GAFY;AAGjBW,cAAAA,KAAK;AAHY,aAArB;;AAhBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA,I,CAwBA;;;AACAjB,cAAc,CAACkB,cAAf;AAAA,sEAAgC,kBAAOhB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,IADqB,GACbF,GAAG,CAACG,IADS,CACrBD,IADqB;AAExBE,YAAAA,GAFwB,GAElB,4HAFkB;AAAA;AAAA;AAAA,mBAIQC,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACF,IAAD,CAAhB,CAJR;;AAAA;AAAA;AAAA,kCAIiCK,IAJjC;;AAAA;AAIlBU,YAAAA,UAJkB;;AAKxB,gBAAIA,UAAU,CAACR,MAAX,GAAoB,CAAxB,EAA2B;AACvBR,cAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,gBAAAA,SAAS,EAAEK;AADM,eAArB;AAGH,aAJD,MAIO;AACHhB,cAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBE,gBAAAA,OAAO,EAAE,6BADQ;AAEjBC,gBAAAA,QAAQ,EAAE;AAFO,eAArB;AAIH;;AAduB;AAAA;;AAAA;AAAA;AAAA;AAgBxBb,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBE,cAAAA,OAAO,EAAE,qBADQ;AAEjBT,cAAAA,GAAG,EAAEA,GAFY;AAGjBW,cAAAA,KAAK;AAHY,aAArB;;AAhBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;AAwBAG,MAAM,CAACC,OAAP,GAAiBrB,cAAjB",
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "sourcesContent": [
        "import pool from '../database/keys';\r\n\r\nconst datocategorico = {};\r\n\r\n//listar cortes\r\ndatocategorico.listarCorte = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    var sql = 'select cod_corte, gls_corte from corte where cod_corte < 100 order by cod_corte asc';\r\n    try {\r\n        const cortes = await (await pool.query(sql)).rows;\r\n        if (cortes.length > 0) {\r\n            res.status(200).json({\r\n                registros: cortes\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            sql: sql,\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//listar tribunales\r\ndatocategorico.listarTribunal = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    var sql = 'select cod_tribunal, gls_tribunal from tribunal where jurisdiccion = $1 and cod_tribunal < 10000 order by cod_tribunal asc';\r\n    try {\r\n        const tribunales = await (await pool.query(sql, [tipo])).rows;\r\n        if (tribunales.length > 0) {\r\n            res.status(200).json({\r\n                registros: tribunales\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            sql: sql,\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = datocategorico;"
      ]
    },
    "sourceType": "script",
    "mtime": 1620776819872
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"filename\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\gestion.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\gestion.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\gestion.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\gestion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
        "sourceFileName": "gestion.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _keys = _interopRequireDefault(require(\"../database/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar gestioninventario = {}; //Listar inventario pivoteado para cortes y total\n\ngestioninventario.listarGestionTotalPivoteado = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var tipo, sql, causas, sqli, compromiso, sqlii, cumplimiento, aux, cont, index;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select fr.cod_corte, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\n            sql += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, ';\n            sql += 'corte.gls_corte from crosstab( ';\n            sql += '$$ select cod_corte, año, sum(causas) as cant_inventario ';\n            sql += 'from gestion where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sql += 'group by cod_corte, año ';\n            sql += 'UNION ALL ';\n            sql += 'select 100 as cod_corte, año, sum(causas) as cant_inventario ';\n            sql += 'from gestion where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sql += 'group by año order by cod_corte, año $$';\n            sql += ') as fr(cod_corte int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint), corte where fr.cod_corte = corte.cod_corte ';\n            _context.prev = 13;\n            _context.next = 16;\n            return _keys[\"default\"].query(sql);\n\n          case 16:\n            _context.next = 18;\n            return _context.sent.rows;\n\n          case 18:\n            causas = _context.sent;\n\n            if (!(causas.length > 0)) {\n              _context.next = 80;\n              break;\n            }\n\n            sqli = 'select corte.gls_corte, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\n            sqli += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 ';\n            sqli += 'from crosstab( ';\n            sqli += ' $$ ';\n            sqli += ' select cod_corte, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion ';\n            sqli += 'where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqli += 'group by cod_corte, año ';\n            sqli += 'UNION ALL ';\n            sqli += 'select 100 as cod_corte, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion ';\n            sqli += 'where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqli += 'group by año ';\n            sqli += 'order by cod_corte, año ';\n            sqli += ' $$ ';\n            sqli += ') as fr(cod_corte int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqli += '\"2019\" bigint, \"2020\" bigint), corte where fr.cod_corte = corte.cod_corte ';\n            _context.prev = 37;\n            _context.next = 40;\n            return _keys[\"default\"].query(sqli);\n\n          case 40:\n            _context.next = 42;\n            return _context.sent.rows;\n\n          case 42:\n            compromiso = _context.sent;\n\n            if (!(compromiso.length > 0)) {\n              _context.next = 73;\n              break;\n            }\n\n            sqlii = 'select corte.gls_corte, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\n            sqlii += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 ';\n            sqlii += 'from crosstab( ';\n            sqlii += ' $$ ';\n            sqlii += ' select cod_corte, año, sum(cumplimiento) as cumplimiento ';\n            sqlii += 'from gestion ';\n            sqlii += 'where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqlii += 'group by cod_corte, año ';\n            sqlii += 'UNION ALL ';\n            sqlii += 'select 100 as cod_corte, año, sum(cumplimiento) as cumplimiento ';\n            sqlii += 'from gestion ';\n            sqlii += 'where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqlii += 'group by año ';\n            sqlii += 'order by cod_corte, año ';\n            sqlii += ' $$ ';\n            sqlii += ') as fr(cod_corte int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqlii += '\"2019\" bigint, \"2020\" bigint), corte where fr.cod_corte = corte.cod_corte ';\n            _context.prev = 61;\n            _context.next = 64;\n            return _keys[\"default\"].query(sqlii);\n\n          case 64:\n            _context.next = 66;\n            return _context.sent.rows;\n\n          case 66:\n            cumplimiento = _context.sent;\n\n            if (cumplimiento.length > 0) {\n              aux = [];\n              cont = 0;\n\n              for (index = 0; index < causas.length * 3; index++) {\n                if (index % 3 == 0) {\n                  aux.push(causas[cont]);\n                } else if (index % 3 == 1) {\n                  aux.push(compromiso[cont]);\n                } else {\n                  aux.push(cumplimiento[cont]);\n                  cont++;\n                }\n              }\n\n              res.status(200).json({\n                registros: aux\n              });\n            }\n\n            _context.next = 73;\n            break;\n\n          case 70:\n            _context.prev = 70;\n            _context.t0 = _context[\"catch\"](61);\n            res.statis(500).json({\n              message: 'Ocurrió un problema',\n              error: _context.t0\n            });\n\n          case 73:\n            _context.next = 78;\n            break;\n\n          case 75:\n            _context.prev = 75;\n            _context.t1 = _context[\"catch\"](37);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context.t1\n            });\n\n          case 78:\n            _context.next = 81;\n            break;\n\n          case 80:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 81:\n            _context.next = 86;\n            break;\n\n          case 83:\n            _context.prev = 83;\n            _context.t2 = _context[\"catch\"](13);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context.t2\n            });\n\n          case 86:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[13, 83], [37, 75], [61, 70]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //Listar inventario pivoteado total por una corte\n\n\ngestioninventario.listarGestionCortePivoteado = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, tipo, corte, sql, causas, sqli, compromiso, sqlii, cumplimiento, aux, cont, index;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body = req.body, tipo = _req$body.tipo, corte = _req$body.corte;\n            sql = 'select fr.cod_tribunal, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\n            sql += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, coalesce(fr.\"2021\", 0) as a_2021,';\n            sql += 'tribunal.gls_tribunal from crosstab( ';\n            sql += '$$ select cod_tribunal, año, sum(causas) as cant_inventario ';\n            sql += 'from gestion where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sql += 'group by cod_tribunal, año ';\n            sql += 'UNION ALL ';\n            sql += 'select 10000 as cod_tribunal, año, sum(causas) as cant_inventario ';\n            sql += 'from gestion where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sql += 'group by año order by cod_tribunal, año $$';\n            sql += ') as fr(cod_tribunal int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint, \"2021\" bigint), tribunal where fr.cod_tribunal = tribunal.cod_tribunal ';\n            _context2.prev = 13;\n            _context2.next = 16;\n            return _keys[\"default\"].query(sql);\n\n          case 16:\n            _context2.next = 18;\n            return _context2.sent.rows;\n\n          case 18:\n            causas = _context2.sent;\n\n            if (!(causas.length > 0)) {\n              _context2.next = 80;\n              break;\n            }\n\n            sqli = 'select tribunal.gls_tribunal, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\n            sqli += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, coalesce(fr.\"2021\", 0) as a_2021 ';\n            sqli += 'from crosstab( ';\n            sqli += ' $$ ';\n            sqli += ' select cod_tribunal, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion ';\n            sqli += 'where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqli += 'group by cod_tribunal, año ';\n            sqli += 'UNION ALL ';\n            sqli += 'select 10000 as cod_tribunal, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion ';\n            sqli += 'where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqli += 'group by cod_tribunal, año ';\n            sqli += 'order by cod_tribunal, año ';\n            sqli += ' $$ ';\n            sqli += ') as fr(cod_tribunal int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint), tribunal where fr.cod_tribunal = tribunal.cod_tribunal ';\n            _context2.prev = 37;\n            _context2.next = 40;\n            return _keys[\"default\"].query(sqli);\n\n          case 40:\n            _context2.next = 42;\n            return _context2.sent.rows;\n\n          case 42:\n            compromiso = _context2.sent;\n\n            if (!(compromiso.length > 0)) {\n              _context2.next = 73;\n              break;\n            }\n\n            sqlii = 'select tribunal.gls_tribunal, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\n            sqlii += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, coalesce(fr.\"2021\", 0) as a_2021 ';\n            sqlii += 'from crosstab( ';\n            sqlii += ' $$ ';\n            sqlii += ' select cod_tribunal, año, sum(cumplimiento) as cumplimiento ';\n            sqlii += 'from gestion ';\n            sqlii += 'where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqlii += 'group by cod_tribunal, año ';\n            sqlii += 'UNION ALL ';\n            sqlii += 'select 10000 as cod_tribunal, año, sum(cumplimiento) as cumplimiento ';\n            sqlii += 'from gestion ';\n            sqlii += 'where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqlii += 'group by cod_tribunal, año ';\n            sqlii += 'order by cod_tribunal, año ';\n            sqlii += ' $$ ';\n            sqlii += ') as fr(cod_tribunal int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint), tribunal where fr.cod_tribunal = tribunal.cod_tribunal ';\n            _context2.prev = 61;\n            _context2.next = 64;\n            return _keys[\"default\"].query(sqlii);\n\n          case 64:\n            _context2.next = 66;\n            return _context2.sent.rows;\n\n          case 66:\n            cumplimiento = _context2.sent;\n\n            if (cumplimiento.length > 0) {\n              aux = [];\n              cont = 0;\n\n              for (index = 0; index < causas.length * 3; index++) {\n                if (index % 3 == 0) {\n                  aux.push(causas[cont]);\n                } else if (index % 3 == 1) {\n                  aux.push(compromiso[cont]);\n                } else {\n                  aux.push(cumplimiento[cont]);\n                  cont++;\n                }\n              }\n\n              res.status(200).json({\n                registros: aux\n              });\n            }\n\n            _context2.next = 73;\n            break;\n\n          case 70:\n            _context2.prev = 70;\n            _context2.t0 = _context2[\"catch\"](61);\n            res.statis(500).json({\n              message: 'Ocurrió un problema',\n              error: _context2.t0\n            });\n\n          case 73:\n            _context2.next = 78;\n            break;\n\n          case 75:\n            _context2.prev = 75;\n            _context2.t1 = _context2[\"catch\"](37);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context2.t1\n            });\n\n          case 78:\n            _context2.next = 81;\n            break;\n\n          case 80:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 81:\n            _context2.next = 86;\n            break;\n\n          case 83:\n            _context2.prev = 83;\n            _context2.t2 = _context2[\"catch\"](13);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context2.t2\n            });\n\n          case 86:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[13, 83], [37, 75], [61, 70]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //Listar inventario pivoteado total por un tribunal\n\n\ngestioninventario.listarGestionTribunalPivoteado = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, tipo, tribunal, sql, causas, sqli, compromiso, sqlii, cumplimiento, aux, cont, index;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body2 = req.body, tipo = _req$body2.tipo, tribunal = _req$body2.tribunal;\n            sql = 'select fr.mes as mes, coalesce(fr.\"2015\",0) as a_2015, ';\n            sql += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021 ';\n            sql += 'from crosstab( ';\n            sql += '$$ select mes, año, sum(causas) as cant_inventario ';\n            sql += 'from gestion where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sql += 'group by mes, año ';\n            sql += 'UNION ALL ';\n            sql += 'select 13 as mes, año, sum(causas) as cant_inventario ';\n            sql += 'from gestion where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sql += 'group by año order by mes, año $$';\n            sql += ') as fr(mes int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint, \"2021\" bigint)';\n            _context3.prev = 13;\n            _context3.next = 16;\n            return _keys[\"default\"].query(sql);\n\n          case 16:\n            _context3.next = 18;\n            return _context3.sent.rows;\n\n          case 18:\n            causas = _context3.sent;\n\n            if (!(causas.length > 0)) {\n              _context3.next = 70;\n              break;\n            }\n\n            sqli = 'select fr.mes as mes, coalesce(fr.\"2015\",0) as a_2015, ';\n            sqli += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021 ';\n            sqli += 'from crosstab( ';\n            sqli += '$$ select mes, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\'  and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqli += 'group by mes, año ';\n            sqli += 'UNION ALL ';\n            sqli += 'select 13 as mes, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\'  and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqli += 'group by año order by mes, año $$';\n            sqli += ') as fr(mes int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sqli += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint, \"2021\" bigint)';\n            _context3.prev = 32;\n            _context3.next = 35;\n            return _keys[\"default\"].query(sqli);\n\n          case 35:\n            _context3.next = 37;\n            return _context3.sent.rows;\n\n          case 37:\n            compromiso = _context3.sent;\n\n            if (!(compromiso.length > 0)) {\n              _context3.next = 63;\n              break;\n            }\n\n            sqlii = 'select fr.mes as mes, coalesce(fr.\"2015\",0) as a_2015, ';\n            sqlii += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021 ';\n            sqlii += 'from crosstab( ';\n            sqlii += '$$ select mes, año, sum(cumplimiento) as cant_inventario ';\n            sqlii += 'from gestion where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\'  and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqlii += 'group by mes, año ';\n            sqlii += 'UNION ALL ';\n            sqlii += 'select 13 as mes, año, sum(cumplimiento) as cant_inventario ';\n            sqlii += 'from gestion where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\'  and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\n            sqlii += 'group by año order by mes, año $$';\n            sqlii += ') as fr(mes int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\n            sqlii += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint, \"2021\" bigint)';\n            _context3.prev = 51;\n            _context3.next = 54;\n            return _keys[\"default\"].query(sqlii);\n\n          case 54:\n            _context3.next = 56;\n            return _context3.sent.rows;\n\n          case 56:\n            cumplimiento = _context3.sent;\n\n            if (cumplimiento.length > 0) {\n              aux = [];\n              cont = 0;\n\n              for (index = 0; index < causas.length * 3; index++) {\n                if (index % 3 == 0) {\n                  aux.push(causas[cont]);\n                } else if (index % 3 == 1) {\n                  aux.push(compromiso[cont]);\n                } else {\n                  aux.push(cumplimiento[cont]);\n                  cont++;\n                }\n              }\n\n              res.status(200).json({\n                registros: aux\n              });\n            }\n\n            _context3.next = 63;\n            break;\n\n          case 60:\n            _context3.prev = 60;\n            _context3.t0 = _context3[\"catch\"](51);\n            res.statis(500).json({\n              message: 'Ocurrió un problema',\n              error: _context3.t0\n            });\n\n          case 63:\n            _context3.next = 68;\n            break;\n\n          case 65:\n            _context3.prev = 65;\n            _context3.t1 = _context3[\"catch\"](32);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context3.t1\n            });\n\n          case 68:\n            _context3.next = 71;\n            break;\n\n          case 70:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 71:\n            _context3.next = 76;\n            break;\n\n          case 73:\n            _context3.prev = 73;\n            _context3.t2 = _context3[\"catch\"](13);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              sql: sql,\n              error: _context3.t2\n            });\n\n          case 76:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[13, 73], [32, 65], [51, 60]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}(); //Registrar gestión\n\n\ngestioninventario.registrarGestion = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, tipo, tribunal, a_2015, a_2016, a_2017, a_2018, a_2019, a_2020, a_2021, fecha, a_descripcion, anos, sql, respuestas, in_a2015, in_a2016, in_a2017, in_a2018, in_a2019, in_a2020, in_a2021;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, tipo = _req$body3.tipo, tribunal = _req$body3.tribunal, a_2015 = _req$body3.a_2015, a_2016 = _req$body3.a_2016, a_2017 = _req$body3.a_2017, a_2018 = _req$body3.a_2018, a_2019 = _req$body3.a_2019, a_2020 = _req$body3.a_2020, a_2021 = _req$body3.a_2021, fecha = _req$body3.fecha, a_descripcion = _req$body3.a_descripcion;\n            anos = [{\n              ano: 2015,\n              valor: a_2015\n            }, {\n              ano: 2016,\n              valor: a_2016\n            }, {\n              ano: 2017,\n              valor: a_2017\n            }, {\n              ano: 2018,\n              valor: a_2018\n            }, {\n              ano: 2019,\n              valor: a_2019\n            }, {\n              ano: 2020,\n              valor: a_2020\n            }, {\n              ano: 2021,\n              valor: a_2021\n            }];\n            sql = 'insert into gestion(cod_corte, cod_tribunal, año, causas, compromiso, cumplimiento, fecha_compromiso, gls_corte, gls_tribunal, mes, jurisdiccion, desc_exante) ';\n            sql += 'values((select cod_corte from tribunal where cod_tribunal = $1), $1, $2, 0, $3, 0, $4, (select corte.gls_corte from corte, tribunal where tribunal.cod_tribunal = $1 and ';\n            sql += 'corte.cod_corte = tribunal.cod_corte), (select gls_tribunal from tribunal where cod_tribunal = $1), 1, $5, $6) returning id_gestion';\n            respuestas = [];\n            _context4.prev = 6;\n            _context4.next = 9;\n            return _keys[\"default\"].query(sql, [tribunal, 2015, parseInt(a_2015), fecha, tipo, a_descripcion]);\n\n          case 9:\n            _context4.next = 11;\n            return _context4.sent.rows;\n\n          case 11:\n            in_a2015 = _context4.sent;\n            respuestas.push(in_a2015);\n            _context4.prev = 13;\n            _context4.next = 16;\n            return _keys[\"default\"].query(sql, [tribunal, 2016, parseInt(a_2016), fecha, tipo, a_descripcion]);\n\n          case 16:\n            _context4.next = 18;\n            return _context4.sent.rows;\n\n          case 18:\n            in_a2016 = _context4.sent;\n            respuestas.push(in_a2016);\n            _context4.prev = 20;\n            _context4.next = 23;\n            return _keys[\"default\"].query(sql, [tribunal, 2017, parseInt(a_2017), fecha, tipo, a_descripcion]);\n\n          case 23:\n            _context4.next = 25;\n            return _context4.sent.rows;\n\n          case 25:\n            in_a2017 = _context4.sent;\n            respuestas.push(in_a2017);\n            _context4.prev = 27;\n            _context4.next = 30;\n            return _keys[\"default\"].query(sql, [tribunal, 2018, parseInt(a_2018), fecha, tipo, a_descripcion]);\n\n          case 30:\n            _context4.next = 32;\n            return _context4.sent.rows;\n\n          case 32:\n            in_a2018 = _context4.sent;\n            respuestas.push(in_a2018);\n            _context4.prev = 34;\n            _context4.next = 37;\n            return _keys[\"default\"].query(sql, [tribunal, 2019, parseInt(a_2019), fecha, tipo, a_descripcion]);\n\n          case 37:\n            _context4.next = 39;\n            return _context4.sent.rows;\n\n          case 39:\n            in_a2019 = _context4.sent;\n            respuestas.push(in_a2019);\n            _context4.prev = 41;\n            _context4.next = 44;\n            return _keys[\"default\"].query(sql, [tribunal, 2020, parseInt(a_2020), fecha, tipo, a_descripcion]);\n\n          case 44:\n            _context4.next = 46;\n            return _context4.sent.rows;\n\n          case 46:\n            in_a2020 = _context4.sent;\n            respuestas.push(in_a2020);\n            _context4.prev = 48;\n            _context4.next = 51;\n            return _keys[\"default\"].query(sql, [tribunal, 2021, parseInt(a_2021), fecha, tipo, a_descripcion]);\n\n          case 51:\n            _context4.next = 53;\n            return _context4.sent.rows;\n\n          case 53:\n            in_a2021 = _context4.sent;\n            respuestas.push(in_a2021);\n\n            if (respuestas.length == anos.length) {\n              res.status(200).json({\n                mensaje: 'Registro exitoso'\n              });\n            } else {\n              res.status(500).json({\n                message: 'Ocurrió un problema',\n                error: error\n              });\n            }\n\n            _context4.next = 61;\n            break;\n\n          case 58:\n            _context4.prev = 58;\n            _context4.t0 = _context4[\"catch\"](48);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t0\n            });\n\n          case 61:\n            _context4.next = 66;\n            break;\n\n          case 63:\n            _context4.prev = 63;\n            _context4.t1 = _context4[\"catch\"](41);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t1\n            });\n\n          case 66:\n            _context4.next = 71;\n            break;\n\n          case 68:\n            _context4.prev = 68;\n            _context4.t2 = _context4[\"catch\"](34);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t2\n            });\n\n          case 71:\n            _context4.next = 76;\n            break;\n\n          case 73:\n            _context4.prev = 73;\n            _context4.t3 = _context4[\"catch\"](27);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t3\n            });\n\n          case 76:\n            _context4.next = 81;\n            break;\n\n          case 78:\n            _context4.prev = 78;\n            _context4.t4 = _context4[\"catch\"](20);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t4\n            });\n\n          case 81:\n            _context4.next = 86;\n            break;\n\n          case 83:\n            _context4.prev = 83;\n            _context4.t5 = _context4[\"catch\"](13);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t5\n            });\n\n          case 86:\n            _context4.next = 91;\n            break;\n\n          case 88:\n            _context4.prev = 88;\n            _context4.t6 = _context4[\"catch\"](6);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t6\n            });\n\n          case 91:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[6, 88], [13, 83], [20, 78], [27, 73], [34, 68], [41, 63], [48, 58]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //Registrar descripcion expost\n\n\ngestioninventario.registrarExpost = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body4, tribunal, descripcion, fecha, sql, registro;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _req$body4 = req.body, tribunal = _req$body4.tribunal, descripcion = _req$body4.descripcion, fecha = _req$body4.fecha;\n            sql = 'update gestion set desc_expost = $1 where cod_tribunal = $2 and fecha_compromiso = $3 and mes = 1 returning id_gestion';\n            _context5.prev = 2;\n            _context5.next = 5;\n            return _keys[\"default\"].query(sql, [descripcion, tribunal, fecha]);\n\n          case 5:\n            _context5.next = 7;\n            return _context5.sent.rows;\n\n          case 7:\n            registro = _context5.sent;\n\n            if (registro.length > 0) {\n              res.status(200).json({\n                registro: registro\n              });\n            } else {\n              res.status(200).json({\n                registro: 0\n              });\n            }\n\n            _context5.next = 14;\n            break;\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](2);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context5.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 11]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}(); //Ultimo mes comprometido\n\n\ngestioninventario.ultimoMes = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var tribunal, sql, mes;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            tribunal = req.body.tribunal;\n            sql = 'select extract(month from (select max(fecha_compromiso) from gestion where cod_tribunal = $1)) as mes';\n            _context6.prev = 2;\n            _context6.next = 5;\n            return _keys[\"default\"].query(sql, [tribunal]);\n\n          case 5:\n            _context6.next = 7;\n            return _context6.sent.rows;\n\n          case 7:\n            mes = _context6.sent;\n\n            if (mes.length > 0) {\n              if (mes[0].mes == null) {\n                res.status(200).json({\n                  mes: [{\n                    'mes': 0\n                  }]\n                });\n              } else {\n                res.status(200).json({\n                  mes: mes\n                });\n              }\n            } else {\n              res.status(200).json({\n                mes: [{\n                  'mes': 0\n                }]\n              });\n            }\n\n            _context6.next = 14;\n            break;\n\n          case 11:\n            _context6.prev = 11;\n            _context6.t0 = _context6[\"catch\"](2);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context6.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[2, 11]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}(); //selecciona descripcion exante\n\n\ngestioninventario.descripcionExante = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var _req$body5, tribunal, fecha, sql, obs;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _req$body5 = req.body, tribunal = _req$body5.tribunal, fecha = _req$body5.fecha;\n            sql = 'select distinct desc_exante from gestion where cod_tribunal = $1 and fecha_compromiso = $2';\n            _context7.prev = 2;\n            _context7.next = 5;\n            return _keys[\"default\"].query(sql, [tribunal, fecha]);\n\n          case 5:\n            _context7.next = 7;\n            return _context7.sent.rows;\n\n          case 7:\n            obs = _context7.sent;\n\n            if (obs.length > 0) {\n              res.status(200).json({\n                desc: obs\n              });\n            } else {\n              res.status(500).json({\n                message: 'Ocurrió un problema',\n                error: error\n              });\n            }\n\n            _context7.next = 14;\n            break;\n\n          case 11:\n            _context7.prev = 11;\n            _context7.t0 = _context7[\"catch\"](2);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context7.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[2, 11]]);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}(); //selecciona descripcion expost\n\n\ngestioninventario.descripcionExpost = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var _req$body6, tribunal, fecha, sql, obs;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _req$body6 = req.body, tribunal = _req$body6.tribunal, fecha = _req$body6.fecha;\n            sql = 'select distinct desc_expost from gestion where cod_tribunal = $1 and fecha_compromiso = $2 and desc_expost is not NULL';\n            _context8.prev = 2;\n            _context8.next = 5;\n            return _keys[\"default\"].query(sql, [tribunal, fecha]);\n\n          case 5:\n            _context8.next = 7;\n            return _context8.sent.rows;\n\n          case 7:\n            obs = _context8.sent;\n\n            if (obs.length > 0) {\n              if (obs[0].desc_expost === null) {\n                res.status(200).json({\n                  desc: 0,\n                  nulo: true\n                });\n              } else {\n                res.status(200).json({\n                  desc: obs,\n                  nulo: false\n                });\n              }\n            } else {\n              res.status(200).json({\n                desc: 0,\n                nulo: true\n              });\n            }\n\n            _context8.next = 14;\n            break;\n\n          case 11:\n            _context8.prev = 11;\n            _context8.t0 = _context8[\"catch\"](2);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context8.t0\n            });\n\n          case 14:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[2, 11]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nmodule.exports = gestioninventario;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gestion.js"
      ],
      "names": [
        "gestioninventario",
        "listarGestionTotalPivoteado",
        "req",
        "res",
        "tipo",
        "body",
        "sql",
        "pool",
        "query",
        "rows",
        "causas",
        "length",
        "sqli",
        "compromiso",
        "sqlii",
        "cumplimiento",
        "aux",
        "cont",
        "index",
        "push",
        "status",
        "json",
        "registros",
        "statis",
        "message",
        "error",
        "NotFound",
        "listarGestionCortePivoteado",
        "corte",
        "listarGestionTribunalPivoteado",
        "tribunal",
        "registrarGestion",
        "a_2015",
        "a_2016",
        "a_2017",
        "a_2018",
        "a_2019",
        "a_2020",
        "a_2021",
        "fecha",
        "a_descripcion",
        "anos",
        "ano",
        "valor",
        "respuestas",
        "parseInt",
        "in_a2015",
        "in_a2016",
        "in_a2017",
        "in_a2018",
        "in_a2019",
        "in_a2020",
        "in_a2021",
        "mensaje",
        "registrarExpost",
        "descripcion",
        "registro",
        "ultimoMes",
        "mes",
        "descripcionExante",
        "obs",
        "desc",
        "descripcionExpost",
        "desc_expost",
        "nulo",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;;;AAEA,IAAMA,iBAAiB,GAAG,EAA1B,C,CAEA;;AACAA,iBAAiB,CAACC,2BAAlB;AAAA,qEAAgD,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACrCC,YAAAA,IADqC,GAC7BF,GAAG,CAACG,IADyB,CACrCD,IADqC;AAGxCE,YAAAA,GAHwC,GAGlC,iEAHkC;AAI5CA,YAAAA,GAAG,IAAI,sFAAP;AACAA,YAAAA,GAAG,IAAI,iCAAP;AACAA,YAAAA,GAAG,IAAI,2DAAP;AACAA,YAAAA,GAAG,IAAI,yCAAuCF,IAAvC,GAA4C,qHAAnD;AACAE,YAAAA,GAAG,IAAI,0BAAP;AACAA,YAAAA,GAAG,IAAI,YAAP;AACAA,YAAAA,GAAG,IAAI,+DAAP;AACAA,YAAAA,GAAG,IAAI,yCAAuCF,IAAvC,GAA4C,qHAAnD;AACAE,YAAAA,GAAG,IAAI,yCAAP;AACAA,YAAAA,GAAG,IAAI,sEAAP;AACAA,YAAAA,GAAG,IAAI,2FAAP;AAd4C;AAAA;AAAA,mBAgBZC,iBAAKC,KAAL,CAAWF,GAAX,CAhBY;;AAAA;AAAA;AAAA,iCAgBKG,IAhBL;;AAAA;AAgBlCC,YAAAA,MAhBkC;;AAAA,kBAiBpCA,MAAM,CAACC,MAAP,GAAgB,CAjBoB;AAAA;AAAA;AAAA;;AAkBhCC,YAAAA,IAlBgC,GAkBzB,oEAlByB;AAmBpCA,YAAAA,IAAI,IAAI,qFAAR;AACAA,YAAAA,IAAI,IAAI,iBAAR;AACAA,YAAAA,IAAI,IAAI,MAAR;AACAA,YAAAA,IAAI,IAAI,wDAAR;AACAA,YAAAA,IAAI,IAAI,eAAR;AACAA,YAAAA,IAAI,IAAI,4BAA0BR,IAA1B,GAA+B,qHAAvC;AACAQ,YAAAA,IAAI,IAAI,0BAAR;AACAA,YAAAA,IAAI,IAAI,YAAR;AACAA,YAAAA,IAAI,IAAI,8DAAR;AACAA,YAAAA,IAAI,IAAI,eAAR;AACAA,YAAAA,IAAI,IAAI,4BAA0BR,IAA1B,GAA+B,qHAAvC;AACAQ,YAAAA,IAAI,IAAI,eAAR;AACAA,YAAAA,IAAI,IAAI,0BAAR;AACAA,YAAAA,IAAI,IAAI,MAAR;AACAA,YAAAA,IAAI,IAAI,qFAAR;AACAA,YAAAA,IAAI,IAAI,4EAAR;AAlCoC;AAAA;AAAA,mBAoCAL,iBAAKC,KAAL,CAAWI,IAAX,CApCA;;AAAA;AAAA;AAAA,iCAoCkBH,IApClB;;AAAA;AAoC1BI,YAAAA,UApC0B;;AAAA,kBAqC7BA,UAAU,CAACF,MAAX,GAAoB,CArCS;AAAA;AAAA;AAAA;;AAsCxBG,YAAAA,KAtCwB,GAsChB,oEAtCgB;AAuC5BA,YAAAA,KAAK,IAAI,qFAAT;AACAA,YAAAA,KAAK,IAAI,iBAAT;AACAA,YAAAA,KAAK,IAAI,MAAT;AACAA,YAAAA,KAAK,IAAI,4DAAT;AACAA,YAAAA,KAAK,IAAI,eAAT;AACAA,YAAAA,KAAK,IAAI,4BAA0BV,IAA1B,GAA+B,qHAAxC;AACAU,YAAAA,KAAK,IAAI,0BAAT;AACAA,YAAAA,KAAK,IAAI,YAAT;AACAA,YAAAA,KAAK,IAAI,kEAAT;AACAA,YAAAA,KAAK,IAAI,eAAT;AACAA,YAAAA,KAAK,IAAI,4BAA0BV,IAA1B,GAA+B,qHAAxC;AACAU,YAAAA,KAAK,IAAI,eAAT;AACAA,YAAAA,KAAK,IAAI,0BAAT;AACAA,YAAAA,KAAK,IAAI,MAAT;AACAA,YAAAA,KAAK,IAAI,qFAAT;AACAA,YAAAA,KAAK,IAAI,4EAAT;AAtD4B;AAAA;AAAA,mBAwDUP,iBAAKC,KAAL,CAAWM,KAAX,CAxDV;;AAAA;AAAA;AAAA,iCAwD6BL,IAxD7B;;AAAA;AAwDlBM,YAAAA,YAxDkB;;AAyDxB,gBAAGA,YAAY,CAACJ,MAAb,GAAsB,CAAzB,EAA2B;AACnBK,cAAAA,GADmB,GACb,EADa;AAEnBC,cAAAA,IAFmB,GAEZ,CAFY;;AAGvB,mBAASC,KAAT,GAAiB,CAAjB,EAAoBA,KAAK,GAAGR,MAAM,CAACC,MAAP,GAAc,CAA1C,EAA6CO,KAAK,EAAlD,EAAsD;AAClD,oBAAGA,KAAK,GAAC,CAAN,IAAS,CAAZ,EAAc;AACVF,kBAAAA,GAAG,CAACG,IAAJ,CAAST,MAAM,CAACO,IAAD,CAAf;AACH,iBAFD,MAEO,IAAGC,KAAK,GAAC,CAAN,IAAS,CAAZ,EAAe;AAClBF,kBAAAA,GAAG,CAACG,IAAJ,CAASN,UAAU,CAACI,IAAD,CAAnB;AACH,iBAFM,MAEA;AACHD,kBAAAA,GAAG,CAACG,IAAJ,CAASJ,YAAY,CAACE,IAAD,CAArB;AACAA,kBAAAA,IAAI;AACP;AACJ;;AACDd,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,gBAAAA,SAAS,EAAEN;AADM,eAArB;AAGH;;AAzEuB;AAAA;;AAAA;AAAA;AAAA;AA2ExBb,YAAAA,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AA3EwB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkFhCtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AAlFgC;AAAA;AAAA;;AAAA;AAwFpCtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,6BADQ;AAEjBE,cAAAA,QAAQ,EAAE;AAFO,aAArB;;AAxFoC;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8FxCvB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AA9FwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhD;;AAAA;AAAA;AAAA;AAAA,I,CAqGA;;;AACAzB,iBAAiB,CAAC2B,2BAAlB;AAAA,sEAAgD,kBAAOzB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACtBD,GAAG,CAACG,IADkB,EACrCD,IADqC,aACrCA,IADqC,EAC/BwB,KAD+B,aAC/BA,KAD+B;AAGxCtB,YAAAA,GAHwC,GAGlC,oEAHkC;AAI5CA,YAAAA,GAAG,IAAI,uHAAP;AACAA,YAAAA,GAAG,IAAI,uCAAP;AACAA,YAAAA,GAAG,IAAI,8DAAP;AACAA,YAAAA,GAAG,IAAI,oCAAkCsB,KAAlC,GAAwC,wBAAxC,GAAiExB,IAAjE,GAAsE,qHAA7E;AACAE,YAAAA,GAAG,IAAI,6BAAP;AACAA,YAAAA,GAAG,IAAI,YAAP;AACAA,YAAAA,GAAG,IAAI,oEAAP;AACAA,YAAAA,GAAG,IAAI,oCAAkCsB,KAAlC,GAAwC,wBAAxC,GAAiExB,IAAjE,GAAsE,qHAA7E;AACAE,YAAAA,GAAG,IAAI,4CAAP;AACAA,YAAAA,GAAG,IAAI,yEAAP;AACAA,YAAAA,GAAG,IAAI,sHAAP;AAd4C;AAAA;AAAA,mBAgBZC,iBAAKC,KAAL,CAAWF,GAAX,CAhBY;;AAAA;AAAA;AAAA,kCAgBKG,IAhBL;;AAAA;AAgBlCC,YAAAA,MAhBkC;;AAAA,kBAiBpCA,MAAM,CAACC,MAAP,GAAgB,CAjBoB;AAAA;AAAA;AAAA;;AAkBhCC,YAAAA,IAlBgC,GAkBzB,0EAlByB;AAmBpCA,YAAAA,IAAI,IAAI,uHAAR;AACAA,YAAAA,IAAI,IAAI,iBAAR;AACAA,YAAAA,IAAI,IAAI,MAAR;AACAA,YAAAA,IAAI,IAAI,2DAAR;AACAA,YAAAA,IAAI,IAAI,eAAR;AACAA,YAAAA,IAAI,IAAI,uBAAqBgB,KAArB,GAA2B,wBAA3B,GAAoDxB,IAApD,GAAyD,qHAAjE;AACAQ,YAAAA,IAAI,IAAI,6BAAR;AACAA,YAAAA,IAAI,IAAI,YAAR;AACAA,YAAAA,IAAI,IAAI,mEAAR;AACAA,YAAAA,IAAI,IAAI,eAAR;AACAA,YAAAA,IAAI,IAAI,uBAAqBgB,KAArB,GAA2B,wBAA3B,GAAoDxB,IAApD,GAAyD,qHAAjE;AACAQ,YAAAA,IAAI,IAAI,6BAAR;AACAA,YAAAA,IAAI,IAAI,6BAAR;AACAA,YAAAA,IAAI,IAAI,MAAR;AACAA,YAAAA,IAAI,IAAI,wFAAR;AACAA,YAAAA,IAAI,IAAI,uGAAR;AAlCoC;AAAA;AAAA,mBAoCAL,iBAAKC,KAAL,CAAWI,IAAX,CApCA;;AAAA;AAAA;AAAA,kCAoCkBH,IApClB;;AAAA;AAoC1BI,YAAAA,UApC0B;;AAAA,kBAqC7BA,UAAU,CAACF,MAAX,GAAoB,CArCS;AAAA;AAAA;AAAA;;AAsCxBG,YAAAA,KAtCwB,GAsChB,0EAtCgB;AAuC5BA,YAAAA,KAAK,IAAI,uHAAT;AACAA,YAAAA,KAAK,IAAI,iBAAT;AACAA,YAAAA,KAAK,IAAI,MAAT;AACAA,YAAAA,KAAK,IAAI,+DAAT;AACAA,YAAAA,KAAK,IAAI,eAAT;AACAA,YAAAA,KAAK,IAAI,uBAAqBc,KAArB,GAA2B,wBAA3B,GAAoDxB,IAApD,GAAyD,qHAAlE;AACAU,YAAAA,KAAK,IAAI,6BAAT;AACAA,YAAAA,KAAK,IAAI,YAAT;AACAA,YAAAA,KAAK,IAAI,uEAAT;AACAA,YAAAA,KAAK,IAAI,eAAT;AACAA,YAAAA,KAAK,IAAI,uBAAqBc,KAArB,GAA2B,wBAA3B,GAAoDxB,IAApD,GAAyD,qHAAlE;AACAU,YAAAA,KAAK,IAAI,6BAAT;AACAA,YAAAA,KAAK,IAAI,6BAAT;AACAA,YAAAA,KAAK,IAAI,MAAT;AACAA,YAAAA,KAAK,IAAI,wFAAT;AACAA,YAAAA,KAAK,IAAI,uGAAT;AAtD4B;AAAA;AAAA,mBAwDUP,iBAAKC,KAAL,CAAWM,KAAX,CAxDV;;AAAA;AAAA;AAAA,kCAwD6BL,IAxD7B;;AAAA;AAwDlBM,YAAAA,YAxDkB;;AAyDxB,gBAAGA,YAAY,CAACJ,MAAb,GAAsB,CAAzB,EAA2B;AACnBK,cAAAA,GADmB,GACb,EADa;AAEnBC,cAAAA,IAFmB,GAEZ,CAFY;;AAGvB,mBAASC,KAAT,GAAiB,CAAjB,EAAoBA,KAAK,GAAGR,MAAM,CAACC,MAAP,GAAc,CAA1C,EAA6CO,KAAK,EAAlD,EAAsD;AAClD,oBAAGA,KAAK,GAAC,CAAN,IAAS,CAAZ,EAAc;AACVF,kBAAAA,GAAG,CAACG,IAAJ,CAAST,MAAM,CAACO,IAAD,CAAf;AACH,iBAFD,MAEO,IAAGC,KAAK,GAAC,CAAN,IAAS,CAAZ,EAAe;AAClBF,kBAAAA,GAAG,CAACG,IAAJ,CAASN,UAAU,CAACI,IAAD,CAAnB;AACH,iBAFM,MAEA;AACHD,kBAAAA,GAAG,CAACG,IAAJ,CAASJ,YAAY,CAACE,IAAD,CAArB;AACAA,kBAAAA,IAAI;AACP;AACJ;;AACDd,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,gBAAAA,SAAS,EAAEN;AADM,eAArB;AAGH;;AAzEuB;AAAA;;AAAA;AAAA;AAAA;AA2ExBb,YAAAA,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AA3EwB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkFhCtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AAlFgC;AAAA;AAAA;;AAAA;AAwFpCtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,6BADQ;AAEjBE,cAAAA,QAAQ,EAAE;AAFO,aAArB;;AAxFoC;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8FxCvB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AA9FwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhD;;AAAA;AAAA;AAAA;AAAA,I,CAwGA;;;AACAzB,iBAAiB,CAAC6B,8BAAlB;AAAA,sEAAmD,kBAAO3B,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACtBD,GAAG,CAACG,IADkB,EACxCD,IADwC,cACxCA,IADwC,EAClC0B,QADkC,cAClCA,QADkC;AAG3CxB,YAAAA,GAH2C,GAGrC,yDAHqC;AAI/CA,YAAAA,GAAG,IAAI,uMAAP;AACAA,YAAAA,GAAG,IAAI,iBAAP;AACAA,YAAAA,GAAG,IAAI,qDAAP;AACAA,YAAAA,GAAG,IAAI,uCAAqCwB,QAArC,GAA8C,wBAA9C,GAAuE1B,IAAvE,GAA4E,qHAAnF;AACAE,YAAAA,GAAG,IAAI,oBAAP;AACAA,YAAAA,GAAG,IAAI,YAAP;AACAA,YAAAA,GAAG,IAAI,wDAAP;AACAA,YAAAA,GAAG,IAAI,uCAAqCwB,QAArC,GAA8C,wBAA9C,GAAuE1B,IAAvE,GAA4E,qHAAnF;AACAE,YAAAA,GAAG,IAAI,mCAAP;AACAA,YAAAA,GAAG,IAAI,gEAAP;AACAA,YAAAA,GAAG,IAAI,6DAAP;AAd+C;AAAA;AAAA,mBAgBfC,iBAAKC,KAAL,CAAWF,GAAX,CAhBe;;AAAA;AAAA;AAAA,kCAgBEG,IAhBF;;AAAA;AAgBrCC,YAAAA,MAhBqC;;AAAA,kBAiBvCA,MAAM,CAACC,MAAP,GAAgB,CAjBuB;AAAA;AAAA;AAAA;;AAkBnCC,YAAAA,IAlBmC,GAkB5B,yDAlB4B;AAmBvCA,YAAAA,IAAI,IAAI,uMAAR;AACAA,YAAAA,IAAI,IAAI,iBAAR;AACAA,YAAAA,IAAI,IAAI,oDAAR;AACAA,YAAAA,IAAI,IAAI,uCAAqCkB,QAArC,GAA8C,wBAA9C,GAAuE1B,IAAvE,GAA4E,sHAApF;AACAQ,YAAAA,IAAI,IAAI,oBAAR;AACAA,YAAAA,IAAI,IAAI,YAAR;AACAA,YAAAA,IAAI,IAAI,uDAAR;AACAA,YAAAA,IAAI,IAAI,uCAAqCkB,QAArC,GAA8C,wBAA9C,GAAuE1B,IAAvE,GAA4E,sHAApF;AACAQ,YAAAA,IAAI,IAAI,mCAAR;AACAA,YAAAA,IAAI,IAAI,gEAAR;AACAA,YAAAA,IAAI,IAAI,6DAAR;AA7BuC;AAAA;AAAA,mBA+BHL,iBAAKC,KAAL,CAAWI,IAAX,CA/BG;;AAAA;AAAA;AAAA,kCA+BeH,IA/Bf;;AAAA;AA+B7BI,YAAAA,UA/B6B;;AAAA,kBAgChCA,UAAU,CAACF,MAAX,GAAoB,CAhCY;AAAA;AAAA;AAAA;;AAiC3BG,YAAAA,KAjC2B,GAiCnB,yDAjCmB;AAkC/BA,YAAAA,KAAK,IAAI,uMAAT;AACAA,YAAAA,KAAK,IAAI,iBAAT;AACAA,YAAAA,KAAK,IAAI,2DAAT;AACAA,YAAAA,KAAK,IAAI,uCAAqCgB,QAArC,GAA8C,wBAA9C,GAAuE1B,IAAvE,GAA4E,sHAArF;AACAU,YAAAA,KAAK,IAAI,oBAAT;AACAA,YAAAA,KAAK,IAAI,YAAT;AACAA,YAAAA,KAAK,IAAI,8DAAT;AACAA,YAAAA,KAAK,IAAI,uCAAqCgB,QAArC,GAA8C,wBAA9C,GAAuE1B,IAAvE,GAA4E,sHAArF;AACAU,YAAAA,KAAK,IAAI,mCAAT;AACAA,YAAAA,KAAK,IAAI,gEAAT;AACAA,YAAAA,KAAK,IAAI,6DAAT;AA5C+B;AAAA;AAAA,mBA8COP,iBAAKC,KAAL,CAAWM,KAAX,CA9CP;;AAAA;AAAA;AAAA,kCA8C0BL,IA9C1B;;AAAA;AA8CrBM,YAAAA,YA9CqB;;AA+C3B,gBAAGA,YAAY,CAACJ,MAAb,GAAsB,CAAzB,EAA2B;AACnBK,cAAAA,GADmB,GACb,EADa;AAEnBC,cAAAA,IAFmB,GAEZ,CAFY;;AAGvB,mBAASC,KAAT,GAAiB,CAAjB,EAAoBA,KAAK,GAAGR,MAAM,CAACC,MAAP,GAAc,CAA1C,EAA6CO,KAAK,EAAlD,EAAsD;AAClD,oBAAGA,KAAK,GAAC,CAAN,IAAS,CAAZ,EAAc;AACVF,kBAAAA,GAAG,CAACG,IAAJ,CAAST,MAAM,CAACO,IAAD,CAAf;AACH,iBAFD,MAEO,IAAGC,KAAK,GAAC,CAAN,IAAS,CAAZ,EAAe;AAClBF,kBAAAA,GAAG,CAACG,IAAJ,CAASN,UAAU,CAACI,IAAD,CAAnB;AACH,iBAFM,MAEA;AACHD,kBAAAA,GAAG,CAACG,IAAJ,CAASJ,YAAY,CAACE,IAAD,CAArB;AACAA,kBAAAA,IAAI;AACP;AACJ;;AACDd,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,gBAAAA,SAAS,EAAEN;AADM,eAArB;AAGH;;AA/D0B;AAAA;;AAAA;AAAA;AAAA;AAiE3Bb,YAAAA,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AAjE2B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwEnCtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AAxEmC;AAAA;AAAA;;AAAA;AA8EvCtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,6BADQ;AAEjBE,cAAAA,QAAQ,EAAE;AAFO,aAArB;;AA9EuC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoF3CvB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBlB,cAAAA,GAAG,EAAEA,GAFY;AAGjBmB,cAAAA,KAAK;AAHY,aAArB;;AApF2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD;;AAAA;AAAA;AAAA;AAAA,I,CA4FA;;;AACAzB,iBAAiB,CAAC+B,gBAAlB;AAAA,sEAAqC,kBAAO7B,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACsED,GAAG,CAACG,IAD1E,EAC1BD,IAD0B,cAC1BA,IAD0B,EACpB0B,QADoB,cACpBA,QADoB,EACVE,MADU,cACVA,MADU,EACFC,MADE,cACFA,MADE,EACMC,MADN,cACMA,MADN,EACcC,MADd,cACcA,MADd,EACsBC,MADtB,cACsBA,MADtB,EAC8BC,MAD9B,cAC8BA,MAD9B,EACsCC,MADtC,cACsCA,MADtC,EAC8CC,KAD9C,cAC8CA,KAD9C,EACqDC,aADrD,cACqDA,aADrD;AAE7BC,YAAAA,IAF6B,GAEtB,CAAC;AAACC,cAAAA,GAAG,EAAE,IAAN;AAAYC,cAAAA,KAAK,EAAEX;AAAnB,aAAD,EAA6B;AAACU,cAAAA,GAAG,EAAE,IAAN;AAAYC,cAAAA,KAAK,EAAEV;AAAnB,aAA7B,EAAyD;AAACS,cAAAA,GAAG,EAAE,IAAN;AAAYC,cAAAA,KAAK,EAAET;AAAnB,aAAzD,EAAqF;AAACQ,cAAAA,GAAG,EAAE,IAAN;AAAYC,cAAAA,KAAK,EAAER;AAAnB,aAArF,EAAiH;AAACO,cAAAA,GAAG,EAAE,IAAN;AAAYC,cAAAA,KAAK,EAAEP;AAAnB,aAAjH,EAA6I;AAACM,cAAAA,GAAG,EAAE,IAAN;AAAYC,cAAAA,KAAK,EAAEN;AAAnB,aAA7I,EAAyK;AAACK,cAAAA,GAAG,EAAE,IAAN;AAAYC,cAAAA,KAAK,EAAEL;AAAnB,aAAzK,CAFsB;AAG7BhC,YAAAA,GAH6B,GAGvB,iKAHuB;AAIjCA,YAAAA,GAAG,IAAI,2KAAP;AACAA,YAAAA,GAAG,IAAI,qIAAP;AACIsC,YAAAA,UAN6B,GAMhB,EANgB;AAAA;AAAA;AAAA,mBASCrC,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACwB,QAAD,EAAU,IAAV,EAAgBe,QAAQ,CAACb,MAAD,CAAxB,EAAkCO,KAAlC,EAAyCnC,IAAzC,EAA+CoC,aAA/C,CAAhB,CATD;;AAAA;AAAA;AAAA,kCASiF/B,IATjF;;AAAA;AASvBqC,YAAAA,QATuB;AAU7BF,YAAAA,UAAU,CAACzB,IAAX,CAAgB2B,QAAhB;AAV6B;AAAA;AAAA,mBAYKvC,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACwB,QAAD,EAAU,IAAV,EAAgBe,QAAQ,CAACZ,MAAD,CAAxB,EAAkCM,KAAlC,EAAyCnC,IAAzC,EAA+CoC,aAA/C,CAAhB,CAZL;;AAAA;AAAA;AAAA,kCAYqF/B,IAZrF;;AAAA;AAYnBsC,YAAAA,QAZmB;AAazBH,YAAAA,UAAU,CAACzB,IAAX,CAAgB4B,QAAhB;AAbyB;AAAA;AAAA,mBAeSxC,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACwB,QAAD,EAAU,IAAV,EAAgBe,QAAQ,CAACX,MAAD,CAAxB,EAAkCK,KAAlC,EAAyCnC,IAAzC,EAA+CoC,aAA/C,CAAhB,CAfT;;AAAA;AAAA;AAAA,kCAeyF/B,IAfzF;;AAAA;AAefuC,YAAAA,QAfe;AAgBrBJ,YAAAA,UAAU,CAACzB,IAAX,CAAgB6B,QAAhB;AAhBqB;AAAA;AAAA,mBAkBazC,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACwB,QAAD,EAAU,IAAV,EAAgBe,QAAQ,CAACV,MAAD,CAAxB,EAAkCI,KAAlC,EAAyCnC,IAAzC,EAA+CoC,aAA/C,CAAhB,CAlBb;;AAAA;AAAA;AAAA,kCAkB6F/B,IAlB7F;;AAAA;AAkBXwC,YAAAA,QAlBW;AAmBjBL,YAAAA,UAAU,CAACzB,IAAX,CAAgB8B,QAAhB;AAnBiB;AAAA;AAAA,mBAqBiB1C,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACwB,QAAD,EAAU,IAAV,EAAgBe,QAAQ,CAACT,MAAD,CAAxB,EAAkCG,KAAlC,EAAyCnC,IAAzC,EAA+CoC,aAA/C,CAAhB,CArBjB;;AAAA;AAAA;AAAA,kCAqBiG/B,IArBjG;;AAAA;AAqBPyC,YAAAA,QArBO;AAsBbN,YAAAA,UAAU,CAACzB,IAAX,CAAgB+B,QAAhB;AAtBa;AAAA;AAAA,mBAwBqB3C,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACwB,QAAD,EAAU,IAAV,EAAgBe,QAAQ,CAACR,MAAD,CAAxB,EAAkCE,KAAlC,EAAyCnC,IAAzC,EAA+CoC,aAA/C,CAAhB,CAxBrB;;AAAA;AAAA;AAAA,kCAwBqG/B,IAxBrG;;AAAA;AAwBH0C,YAAAA,QAxBG;AAyBTP,YAAAA,UAAU,CAACzB,IAAX,CAAgBgC,QAAhB;AAzBS;AAAA;AAAA,mBA2ByB5C,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACwB,QAAD,EAAU,IAAV,EAAgBe,QAAQ,CAACP,MAAD,CAAxB,EAAkCC,KAAlC,EAAyCnC,IAAzC,EAA+CoC,aAA/C,CAAhB,CA3BzB;;AAAA;AAAA;AAAA,kCA2ByG/B,IA3BzG;;AAAA;AA2BC2C,YAAAA,QA3BD;AA4BLR,YAAAA,UAAU,CAACzB,IAAX,CAAgBiC,QAAhB;;AACA,gBAAGR,UAAU,CAACjC,MAAX,IAAqB8B,IAAI,CAAC9B,MAA7B,EAAoC;AAChCR,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBgC,gBAAAA,OAAO,EAAE;AADQ,eAArB;AAGH,aAJD,MAIO;AACHlD,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,gBAAAA,OAAO,EAAE,qBADQ;AAEjBC,gBAAAA,KAAK,EAALA;AAFiB,eAArB;AAIH;;AAtCI;AAAA;;AAAA;AAAA;AAAA;AAwCLtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AAxCK;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8CTtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AA9CS;AAAA;AAAA;;AAAA;AAAA;AAAA;AAoDbtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AApDa;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0DjBtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AA1DiB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgErBtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AAhEqB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsEzBtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AAtEyB;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4E7BtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AA5E6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA,I,CAmFA;;;AACAzB,iBAAiB,CAACsD,eAAlB;AAAA,sEAAoC,kBAAOpD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACOD,GAAG,CAACG,IADX,EACzByB,QADyB,cACzBA,QADyB,EACfyB,WADe,cACfA,WADe,EACFhB,KADE,cACFA,KADE;AAE5BjC,YAAAA,GAF4B,GAEtB,wHAFsB;AAAA;AAAA;AAAA,mBAIEC,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACiD,WAAD,EAAczB,QAAd,EAAwBS,KAAxB,CAAhB,CAJF;;AAAA;AAAA;AAAA,kCAImD9B,IAJnD;;AAAA;AAItB+C,YAAAA,QAJsB;;AAK5B,gBAAGA,QAAQ,CAAC7C,MAAT,GAAkB,CAArB,EAAuB;AACnBR,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBmC,gBAAAA,QAAQ,EAAEA;AADO,eAArB;AAGH,aAJD,MAIO;AACHrD,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBmC,gBAAAA,QAAQ,EAAE;AADO,eAArB;AAGH;;AAb2B;AAAA;;AAAA;AAAA;AAAA;AAe5BrD,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AAf4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA,I,CAuBA;;;AACAzB,iBAAiB,CAACyD,SAAlB;AAAA,sEAA8B,kBAAOvD,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB2B,YAAAA,QADmB,GACP5B,GAAG,CAACG,IADG,CACnByB,QADmB;AAEtBxB,YAAAA,GAFsB,GAEhB,uGAFgB;AAAA;AAAA;AAAA,mBAIGC,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACwB,QAAD,CAAhB,CAJH;;AAAA;AAAA;AAAA,kCAIgCrB,IAJhC;;AAAA;AAIhBiD,YAAAA,GAJgB;;AAKtB,gBAAGA,GAAG,CAAC/C,MAAJ,GAAa,CAAhB,EAAkB;AACd,kBAAG+C,GAAG,CAAC,CAAD,CAAH,CAAOA,GAAP,IAAc,IAAjB,EAAsB;AAClBvD,gBAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBqC,kBAAAA,GAAG,EAAE,CAAC;AAAC,2BAAO;AAAR,mBAAD;AADY,iBAArB;AAGH,eAJD,MAIO;AACHvD,gBAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBqC,kBAAAA,GAAG,EAAEA;AADY,iBAArB;AAGH;AACJ,aAVD,MAUO;AACHvD,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBqC,gBAAAA,GAAG,EAAE,CAAC;AAAC,yBAAO;AAAR,iBAAD;AADY,eAArB;AAGH;;AAnBqB;AAAA;;AAAA;AAAA;AAAA;AAqBtBvD,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AArBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA,I,CA4BA;;;AACAzB,iBAAiB,CAAC2D,iBAAlB;AAAA,sEAAsC,kBAAOzD,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACRD,GAAG,CAACG,IADI,EAC3ByB,QAD2B,cAC3BA,QAD2B,EACjBS,KADiB,cACjBA,KADiB;AAE9BjC,YAAAA,GAF8B,GAExB,4FAFwB;AAAA;AAAA;AAAA,mBAILC,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACwB,QAAD,EAAWS,KAAX,CAAhB,CAJK;;AAAA;AAAA;AAAA,kCAI+B9B,IAJ/B;;AAAA;AAIxBmD,YAAAA,GAJwB;;AAK9B,gBAAGA,GAAG,CAACjD,MAAJ,GAAa,CAAhB,EAAkB;AACdR,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBwC,gBAAAA,IAAI,EAAED;AADW,eAArB;AAGH,aAJD,MAIO;AACHzD,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,gBAAAA,OAAO,EAAE,qBADQ;AAEjBC,gBAAAA,KAAK,EAALA;AAFiB,eAArB;AAIH;;AAd6B;AAAA;;AAAA;AAAA;AAAA;AAgB9BtB,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AAhB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA,I,CAuBA;;;AACAzB,iBAAiB,CAAC8D,iBAAlB;AAAA,sEAAsC,kBAAO5D,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACRD,GAAG,CAACG,IADI,EAC3ByB,QAD2B,cAC3BA,QAD2B,EACjBS,KADiB,cACjBA,KADiB;AAE9BjC,YAAAA,GAF8B,GAExB,wHAFwB;AAAA;AAAA;AAAA,mBAILC,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACwB,QAAD,EAAWS,KAAX,CAAhB,CAJK;;AAAA;AAAA;AAAA,kCAI+B9B,IAJ/B;;AAAA;AAIxBmD,YAAAA,GAJwB;;AAK9B,gBAAGA,GAAG,CAACjD,MAAJ,GAAa,CAAhB,EAAkB;AACd,kBAAIiD,GAAG,CAAC,CAAD,CAAH,CAAOG,WAAP,KAAuB,IAA3B,EAAiC;AAC7B5D,gBAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBwC,kBAAAA,IAAI,EAAE,CADW;AAEjBG,kBAAAA,IAAI,EAAE;AAFW,iBAArB;AAIH,eALD,MAKO;AACH7D,gBAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBwC,kBAAAA,IAAI,EAAED,GADW;AAEjBI,kBAAAA,IAAI,EAAE;AAFW,iBAArB;AAIH;AACJ,aAZD,MAYO;AACH7D,cAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBwC,gBAAAA,IAAI,EAAE,CADW;AAEjBG,gBAAAA,IAAI,EAAE;AAFW,eAArB;AAIH;;AAtB6B;AAAA;;AAAA;AAAA;AAAA;AAwB9B7D,YAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBG,cAAAA,OAAO,EAAE,qBADQ;AAEjBC,cAAAA,KAAK;AAFY,aAArB;;AAxB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAkCAwC,MAAM,CAACC,OAAP,GAAiBlE,iBAAjB",
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "sourcesContent": [
        "import pool from '../database/keys';\r\n\r\nconst gestioninventario = {};\r\n\r\n//Listar inventario pivoteado para cortes y total\r\ngestioninventario.listarGestionTotalPivoteado = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    \r\n    let sql = 'select fr.cod_corte, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\r\n    sql += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, ';  \r\n    sql += 'corte.gls_corte from crosstab( ';\r\n    sql += '$$ select cod_corte, año, sum(causas) as cant_inventario ';\r\n    sql += 'from gestion where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n    sql += 'group by cod_corte, año ';\r\n    sql += 'UNION ALL ';\r\n    sql += 'select 100 as cod_corte, año, sum(causas) as cant_inventario ';\r\n    sql += 'from gestion where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n    sql += 'group by año order by cod_corte, año $$';\r\n    sql += ') as fr(cod_corte int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint), corte where fr.cod_corte = corte.cod_corte ';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            let sqli = 'select corte.gls_corte, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\r\n            sqli += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 '; \r\n            sqli += 'from crosstab( ';\r\n            sqli += ' $$ ';\r\n            sqli += ' select cod_corte, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion ';\r\n            sqli += 'where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n            sqli += 'group by cod_corte, año ';\r\n            sqli += 'UNION ALL ';\r\n            sqli += 'select 100 as cod_corte, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion ';\r\n            sqli += 'where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n            sqli += 'group by año ';\r\n            sqli += 'order by cod_corte, año ';\r\n            sqli += ' $$ ';\r\n            sqli += ') as fr(cod_corte int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n            sqli += '\"2019\" bigint, \"2020\" bigint), corte where fr.cod_corte = corte.cod_corte ';\r\n            try {\r\n                const compromiso = await (await pool.query(sqli)).rows;\r\n                if(compromiso.length > 0) {\r\n                    let sqlii = 'select corte.gls_corte, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\r\n                    sqlii += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020 '; \r\n                    sqlii += 'from crosstab( ';\r\n                    sqlii += ' $$ ';\r\n                    sqlii += ' select cod_corte, año, sum(cumplimiento) as cumplimiento ';\r\n                    sqlii += 'from gestion ';\r\n                    sqlii += 'where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n                    sqlii += 'group by cod_corte, año ';\r\n                    sqlii += 'UNION ALL ';\r\n                    sqlii += 'select 100 as cod_corte, año, sum(cumplimiento) as cumplimiento ';\r\n                    sqlii += 'from gestion ';\r\n                    sqlii += 'where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n                    sqlii += 'group by año ';\r\n                    sqlii += 'order by cod_corte, año ';\r\n                    sqlii += ' $$ ';\r\n                    sqlii += ') as fr(cod_corte int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n                    sqlii += '\"2019\" bigint, \"2020\" bigint), corte where fr.cod_corte = corte.cod_corte ';\r\n                    try {\r\n                        const cumplimiento = await (await pool.query(sqlii)).rows;\r\n                        if(cumplimiento.length > 0){\r\n                            let aux = [];\r\n                            let cont = 0;\r\n                            for (let index = 0; index < causas.length*3; index++) {\r\n                                if(index%3==0){\r\n                                    aux.push(causas[cont]);\r\n                                } else if(index%3==1) {\r\n                                    aux.push(compromiso[cont]);\r\n                                } else {\r\n                                    aux.push(cumplimiento[cont]);\r\n                                    cont++;\r\n                                }\r\n                            }\r\n                            res.status(200).json({\r\n                                registros: aux\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.statis(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            error\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar inventario pivoteado total por una corte\r\ngestioninventario.listarGestionCortePivoteado = async (req, res) => {\r\n    const {tipo, corte} = req.body;\r\n    \r\n    let sql = 'select fr.cod_tribunal, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\r\n    sql += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, coalesce(fr.\"2021\", 0) as a_2021,';  \r\n    sql += 'tribunal.gls_tribunal from crosstab( ';\r\n    sql += '$$ select cod_tribunal, año, sum(causas) as cant_inventario ';\r\n    sql += 'from gestion where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n    sql += 'group by cod_tribunal, año ';\r\n    sql += 'UNION ALL ';\r\n    sql += 'select 10000 as cod_tribunal, año, sum(causas) as cant_inventario ';\r\n    sql += 'from gestion where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() '; \r\n    sql += 'group by año order by cod_tribunal, año $$';\r\n    sql += ') as fr(cod_tribunal int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint, \"2021\" bigint), tribunal where fr.cod_tribunal = tribunal.cod_tribunal ';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            let sqli = 'select tribunal.gls_tribunal, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\r\n            sqli += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, coalesce(fr.\"2021\", 0) as a_2021 '; \r\n            sqli += 'from crosstab( ';\r\n            sqli += ' $$ ';\r\n            sqli += ' select cod_tribunal, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion ';\r\n            sqli += 'where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n            sqli += 'group by cod_tribunal, año ';\r\n            sqli += 'UNION ALL ';\r\n            sqli += 'select 10000 as cod_tribunal, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion ';\r\n            sqli += 'where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n            sqli += 'group by cod_tribunal, año ';\r\n            sqli += 'order by cod_tribunal, año ';\r\n            sqli += ' $$ ';\r\n            sqli += ') as fr(cod_tribunal int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint), tribunal where fr.cod_tribunal = tribunal.cod_tribunal ';\r\n            try {\r\n                const compromiso = await (await pool.query(sqli)).rows;\r\n                if(compromiso.length > 0) {\r\n                    let sqlii = 'select tribunal.gls_tribunal, fr.\"2015\" as a_2015, fr.\"2016\" as a_2016, ';\r\n                    sqlii += 'fr.\"2017\" as a_2017, fr.\"2018\" as a_2018, fr.\"2019\" as a_2019, fr.\"2020\" as a_2020, coalesce(fr.\"2021\", 0) as a_2021 '; \r\n                    sqlii += 'from crosstab( ';\r\n                    sqlii += ' $$ ';\r\n                    sqlii += ' select cod_tribunal, año, sum(cumplimiento) as cumplimiento ';\r\n                    sqlii += 'from gestion ';\r\n                    sqlii += 'where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n                    sqlii += 'group by cod_tribunal, año ';\r\n                    sqlii += 'UNION ALL ';\r\n                    sqlii += 'select 10000 as cod_tribunal, año, sum(cumplimiento) as cumplimiento ';\r\n                    sqlii += 'from gestion ';\r\n                    sqlii += 'where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n                    sqlii += 'group by cod_tribunal, año ';\r\n                    sqlii += 'order by cod_tribunal, año ';\r\n                    sqlii += ' $$ ';\r\n                    sqlii += ') as fr(cod_tribunal int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n                    sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint), tribunal where fr.cod_tribunal = tribunal.cod_tribunal ';\r\n                    try {\r\n                        const cumplimiento = await (await pool.query(sqlii)).rows;\r\n                        if(cumplimiento.length > 0){\r\n                            let aux = [];\r\n                            let cont = 0;\r\n                            for (let index = 0; index < causas.length*3; index++) {\r\n                                if(index%3==0){\r\n                                    aux.push(causas[cont]);\r\n                                } else if(index%3==1) {\r\n                                    aux.push(compromiso[cont]);\r\n                                } else {\r\n                                    aux.push(cumplimiento[cont]);\r\n                                    cont++;\r\n                                }\r\n                            }\r\n                            res.status(200).json({\r\n                                registros: aux\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.statis(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            error\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n    \r\n            \r\n    \r\n}\r\n\r\n//Listar inventario pivoteado total por un tribunal\r\ngestioninventario.listarGestionTribunalPivoteado = async (req, res) => {\r\n    const {tipo, tribunal} = req.body;\r\n    \r\n    let sql = 'select fr.mes as mes, coalesce(fr.\"2015\",0) as a_2015, ';\r\n    sql += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021 ';  \r\n    sql += 'from crosstab( ';\r\n    sql += '$$ select mes, año, sum(causas) as cant_inventario ';\r\n    sql += 'from gestion where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() '; \r\n    sql += 'group by mes, año ';\r\n    sql += 'UNION ALL ';\r\n    sql += 'select 13 as mes, año, sum(causas) as cant_inventario ';\r\n    sql += 'from gestion where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n    sql += 'group by año order by mes, año $$';\r\n    sql += ') as fr(mes int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n    sql += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint, \"2021\" bigint)';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            let sqli = 'select fr.mes as mes, coalesce(fr.\"2015\",0) as a_2015, ';\r\n            sqli += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021 ';  \r\n            sqli += 'from crosstab( ';\r\n            sqli += '$$ select mes, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\'  and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n            sqli += 'group by mes, año ';\r\n            sqli += 'UNION ALL ';\r\n            sqli += 'select 13 as mes, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\'  and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n            sqli += 'group by año order by mes, año $$';\r\n            sqli += ') as fr(mes int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n            sqli += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint, \"2021\" bigint)';\r\n            try {\r\n                const compromiso = await (await pool.query(sqli)).rows;\r\n                if(compromiso.length > 0) {\r\n                    let sqlii = 'select fr.mes as mes, coalesce(fr.\"2015\",0) as a_2015, ';\r\n                    sqlii += 'coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021 ';  \r\n                    sqlii += 'from crosstab( ';\r\n                    sqlii += '$$ select mes, año, sum(cumplimiento) as cant_inventario ';\r\n                    sqlii += 'from gestion where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\'  and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n                    sqlii += 'group by mes, año ';\r\n                    sqlii += 'UNION ALL ';\r\n                    sqlii += 'select 13 as mes, año, sum(cumplimiento) as cant_inventario ';\r\n                    sqlii += 'from gestion where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\'  and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'1\\' month) and fecha_compromiso < now() ';\r\n                    sqlii += 'group by año order by mes, año $$';\r\n                    sqlii += ') as fr(mes int, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, ';\r\n                    sqlii += '\"2018\" bigint, \"2019\" bigint, \"2020\" bigint, \"2021\" bigint)';\r\n                    try {\r\n                        const cumplimiento = await (await pool.query(sqlii)).rows;\r\n                        if(cumplimiento.length > 0){\r\n                            let aux = [];\r\n                            let cont = 0;\r\n                            for (let index = 0; index < causas.length*3; index++) {\r\n                                if(index%3==0){\r\n                                    aux.push(causas[cont]);\r\n                                } else if(index%3==1) {\r\n                                    aux.push(compromiso[cont]);\r\n                                } else {\r\n                                    aux.push(cumplimiento[cont]);\r\n                                    cont++;\r\n                                }\r\n                            }\r\n                            res.status(200).json({\r\n                                registros: aux\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.statis(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            error\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            sql: sql,\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Registrar gestión\r\ngestioninventario.registrarGestion = async (req, res) => {\r\n    const {tipo, tribunal, a_2015, a_2016, a_2017, a_2018, a_2019, a_2020, a_2021, fecha, a_descripcion} = req.body;\r\n    let anos = [{ano: 2015, valor: a_2015}, {ano: 2016, valor: a_2016}, {ano: 2017, valor: a_2017}, {ano: 2018, valor: a_2018}, {ano: 2019, valor: a_2019}, {ano: 2020, valor: a_2020}, {ano: 2021, valor: a_2021}];\r\n    let sql = 'insert into gestion(cod_corte, cod_tribunal, año, causas, compromiso, cumplimiento, fecha_compromiso, gls_corte, gls_tribunal, mes, jurisdiccion, desc_exante) ';\r\n    sql += 'values((select cod_corte from tribunal where cod_tribunal = $1), $1, $2, 0, $3, 0, $4, (select corte.gls_corte from corte, tribunal where tribunal.cod_tribunal = $1 and ';\r\n    sql += 'corte.cod_corte = tribunal.cod_corte), (select gls_tribunal from tribunal where cod_tribunal = $1), 1, $5, $6) returning id_gestion';\r\n    let respuestas = [];\r\n\r\n    try {\r\n        const in_a2015 = await (await pool.query(sql, [tribunal,2015, parseInt(a_2015), fecha, tipo, a_descripcion])).rows;\r\n        respuestas.push(in_a2015);\r\n        try {\r\n            const in_a2016 = await (await pool.query(sql, [tribunal,2016, parseInt(a_2016), fecha, tipo, a_descripcion])).rows;\r\n            respuestas.push(in_a2016);\r\n            try {\r\n                const in_a2017 = await (await pool.query(sql, [tribunal,2017, parseInt(a_2017), fecha, tipo, a_descripcion])).rows;\r\n                respuestas.push(in_a2017);\r\n                try {\r\n                    const in_a2018 = await (await pool.query(sql, [tribunal,2018, parseInt(a_2018), fecha, tipo, a_descripcion])).rows;\r\n                    respuestas.push(in_a2018);\r\n                    try {\r\n                        const in_a2019 = await (await pool.query(sql, [tribunal,2019, parseInt(a_2019), fecha, tipo, a_descripcion])).rows;\r\n                        respuestas.push(in_a2019);\r\n                        try {\r\n                            const in_a2020 = await (await pool.query(sql, [tribunal,2020, parseInt(a_2020), fecha, tipo, a_descripcion])).rows;\r\n                            respuestas.push(in_a2020);\r\n                            try {\r\n                                const in_a2021 = await (await pool.query(sql, [tribunal,2021, parseInt(a_2021), fecha, tipo, a_descripcion])).rows;\r\n                                respuestas.push(in_a2021);\r\n                                if(respuestas.length == anos.length){\r\n                                    res.status(200).json({\r\n                                        mensaje: 'Registro exitoso'\r\n                                    });\r\n                                } else {\r\n                                    res.status(500).json({\r\n                                        message: 'Ocurrió un problema',\r\n                                        error\r\n                                    });\r\n                                }\r\n                            } catch (error) {\r\n                                res.status(500).json({\r\n                                    message: 'Ocurrió un problema',\r\n                                    error\r\n                                });\r\n                            }\r\n                        } catch (error) {\r\n                            res.status(500).json({\r\n                                message: 'Ocurrió un problema',\r\n                                error\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.status(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            error\r\n                        });\r\n                    }\r\n                } catch (error) {\r\n                    res.status(500).json({\r\n                        message: 'Ocurrió un problema',\r\n                        error\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    error\r\n                });\r\n            }\r\n        } catch (error) {\r\n            res.status(500).json({\r\n                message: 'Ocurrió un problema',\r\n                error\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Registrar descripcion expost\r\ngestioninventario.registrarExpost = async (req, res) => {\r\n    const {tribunal, descripcion, fecha} = req.body;\r\n    let sql = 'update gestion set desc_expost = $1 where cod_tribunal = $2 and fecha_compromiso = $3 and mes = 1 returning id_gestion';\r\n    try {\r\n        const registro = await (await pool.query(sql, [descripcion, tribunal, fecha])).rows;\r\n        if(registro.length > 0){\r\n            res.status(200).json({\r\n                registro: registro\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                registro: 0\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//Ultimo mes comprometido\r\ngestioninventario.ultimoMes = async (req, res) => {\r\n    const {tribunal} = req.body;\r\n    let sql = 'select extract(month from (select max(fecha_compromiso) from gestion where cod_tribunal = $1)) as mes';\r\n    try {\r\n        const mes = await (await pool.query(sql, [tribunal])).rows;\r\n        if(mes.length > 0){\r\n            if(mes[0].mes == null){\r\n                res.status(200).json({\r\n                    mes: [{'mes': 0}]\r\n                });\r\n            } else {\r\n                res.status(200).json({\r\n                    mes: mes\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                mes: [{'mes': 0}]\r\n            })\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//selecciona descripcion exante\r\ngestioninventario.descripcionExante = async (req, res) => {\r\n    const {tribunal, fecha} = req.body;\r\n    let sql = 'select distinct desc_exante from gestion where cod_tribunal = $1 and fecha_compromiso = $2';\r\n    try {\r\n        const obs = await (await pool.query(sql, [tribunal, fecha])).rows;\r\n        if(obs.length > 0){\r\n            res.status(200).json({\r\n                desc: obs\r\n            });\r\n        } else {\r\n            res.status(500).json({\r\n                message: 'Ocurrió un problema',\r\n                error\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//selecciona descripcion expost\r\ngestioninventario.descripcionExpost = async (req, res) => {\r\n    const {tribunal, fecha} = req.body;\r\n    let sql = 'select distinct desc_expost from gestion where cod_tribunal = $1 and fecha_compromiso = $2 and desc_expost is not NULL';\r\n    try {\r\n        const obs = await (await pool.query(sql, [tribunal, fecha])).rows;\r\n        if(obs.length > 0){\r\n            if (obs[0].desc_expost === null) {\r\n                res.status(200).json({\r\n                    desc: 0,\r\n                    nulo: true\r\n                });\r\n            } else {\r\n                res.status(200).json({\r\n                    desc: obs,\r\n                    nulo: false\r\n                })\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                desc: 0,\r\n                nulo: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nmodule.exports = gestioninventario;"
      ]
    },
    "sourceType": "script",
    "mtime": 1621632230729
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"filename\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\graficogestion.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\graficogestion.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\graficogestion.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\graficogestion.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
        "sourceFileName": "graficogestion.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _keys = _interopRequireDefault(require(\"../database/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar ginventario = {}; //Listar total últimos seis meses\n\nginventario.listarTotalGestionSeis = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var tipo, sql, causas, sqli, compromiso, sqlii, cumplimiento, aux, cont, index;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sql += 'from crosstab( $$ ';\n            sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\n            sql += 'from gestion ';\n            sql += 'where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sql += 'group by fecha_compromiso, año ';\n            sql += 'order by fecha_compromiso, año ';\n            sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context.prev = 11;\n            _context.next = 14;\n            return _keys[\"default\"].query(sql);\n\n          case 14:\n            _context.next = 16;\n            return _context.sent.rows;\n\n          case 16:\n            causas = _context.sent;\n\n            if (!(causas.length > 0)) {\n              _context.next = 64;\n              break;\n            }\n\n            sqli = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sqli += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sqli += 'from crosstab( $$ ';\n            sqli += 'select fecha_compromiso, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion ';\n            sqli += 'where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sqli += 'group by fecha_compromiso, año ';\n            sqli += 'order by fecha_compromiso, año ';\n            sqli += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context.prev = 28;\n            _context.next = 31;\n            return _keys[\"default\"].query(sqli);\n\n          case 31:\n            _context.next = 33;\n            return _context.sent.rows;\n\n          case 33:\n            compromiso = _context.sent;\n\n            if (!(compromiso.length > 0)) {\n              _context.next = 57;\n              break;\n            }\n\n            sqlii = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sqlii += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sqlii += 'from crosstab( $$ ';\n            sqlii += 'select fecha_compromiso, año, sum(cumplimiento) as cumplimiento ';\n            sqlii += 'from gestion ';\n            sqlii += 'where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sqlii += 'group by fecha_compromiso, año ';\n            sqlii += 'order by fecha_compromiso, año ';\n            sqlii += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context.prev = 45;\n            _context.next = 48;\n            return _keys[\"default\"].query(sqlii);\n\n          case 48:\n            _context.next = 50;\n            return _context.sent.rows;\n\n          case 50:\n            cumplimiento = _context.sent;\n\n            if (cumplimiento.length > 0) {\n              aux = [];\n              cont = 0;\n\n              for (index = 0; index < causas.length * 3; index++) {\n                if (index % 3 == 0) {\n                  aux.push(causas[cont]);\n                } else if (index % 3 == 1) {\n                  aux.push(compromiso[cont]);\n                } else {\n                  aux.push(cumplimiento[cont]);\n                  cont++;\n                }\n              }\n\n              res.status(200).json({\n                registros: aux\n              });\n            }\n\n            _context.next = 57;\n            break;\n\n          case 54:\n            _context.prev = 54;\n            _context.t0 = _context[\"catch\"](45);\n            res.statis(500).json({\n              message: 'Ocurrió un problema',\n              error: _context.t0\n            });\n\n          case 57:\n            _context.next = 62;\n            break;\n\n          case 59:\n            _context.prev = 59;\n            _context.t1 = _context[\"catch\"](28);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context.t1\n            });\n\n          case 62:\n            _context.next = 65;\n            break;\n\n          case 64:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 65:\n            _context.next = 70;\n            break;\n\n          case 67:\n            _context.prev = 67;\n            _context.t2 = _context[\"catch\"](11);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context.t2\n            });\n\n          case 70:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[11, 67], [28, 59], [45, 54]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); //Listar corte últimos seis meses\n\n\nginventario.listarCorteGestionSeis = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, tipo, corte, sql, causas, sqli, compromiso, sqlii, cumplimiento, aux, cont, index;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body = req.body, tipo = _req$body.tipo, corte = _req$body.corte;\n            sql = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sql += 'from crosstab( $$ ';\n            sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\n            sql += 'from gestion ';\n            sql += 'where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sql += 'group by fecha_compromiso, año ';\n            sql += 'order by fecha_compromiso, año ';\n            sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context2.prev = 11;\n            _context2.next = 14;\n            return _keys[\"default\"].query(sql);\n\n          case 14:\n            _context2.next = 16;\n            return _context2.sent.rows;\n\n          case 16:\n            causas = _context2.sent;\n\n            if (!(causas.length > 0)) {\n              _context2.next = 64;\n              break;\n            }\n\n            sqli = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sqli += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sqli += 'from crosstab( $$ ';\n            sqli += 'select fecha_compromiso, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion ';\n            sqli += 'where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sqli += 'group by fecha_compromiso, año ';\n            sqli += 'order by fecha_compromiso, año ';\n            sqli += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context2.prev = 28;\n            _context2.next = 31;\n            return _keys[\"default\"].query(sqli);\n\n          case 31:\n            _context2.next = 33;\n            return _context2.sent.rows;\n\n          case 33:\n            compromiso = _context2.sent;\n\n            if (!(compromiso.length > 0)) {\n              _context2.next = 57;\n              break;\n            }\n\n            sqlii = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sqlii += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sqlii += 'from crosstab( $$ ';\n            sqlii += 'select fecha_compromiso, año, sum(cumplimiento) as cumplimiento ';\n            sqlii += 'from gestion ';\n            sqlii += 'where cod_corte = ' + corte + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sqlii += 'group by fecha_compromiso, año ';\n            sqlii += 'order by fecha_compromiso, año ';\n            sqlii += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context2.prev = 45;\n            _context2.next = 48;\n            return _keys[\"default\"].query(sqlii);\n\n          case 48:\n            _context2.next = 50;\n            return _context2.sent.rows;\n\n          case 50:\n            cumplimiento = _context2.sent;\n\n            if (cumplimiento.length > 0) {\n              aux = [];\n              cont = 0;\n\n              for (index = 0; index < causas.length * 3; index++) {\n                if (index % 3 == 0) {\n                  aux.push(causas[cont]);\n                } else if (index % 3 == 1) {\n                  aux.push(compromiso[cont]);\n                } else {\n                  aux.push(cumplimiento[cont]);\n                  cont++;\n                }\n              }\n\n              res.status(200).json({\n                registros: aux\n              });\n            }\n\n            _context2.next = 57;\n            break;\n\n          case 54:\n            _context2.prev = 54;\n            _context2.t0 = _context2[\"catch\"](45);\n            res.statis(500).json({\n              message: 'Ocurrió un problema',\n              error: _context2.t0\n            });\n\n          case 57:\n            _context2.next = 62;\n            break;\n\n          case 59:\n            _context2.prev = 59;\n            _context2.t1 = _context2[\"catch\"](28);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context2.t1\n            });\n\n          case 62:\n            _context2.next = 65;\n            break;\n\n          case 64:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 65:\n            _context2.next = 70;\n            break;\n\n          case 67:\n            _context2.prev = 67;\n            _context2.t2 = _context2[\"catch\"](11);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context2.t2\n            });\n\n          case 70:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[11, 67], [28, 59], [45, 54]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //Listar tribunal últimos seis meses\n\n\nginventario.listarTribunalGestionSeis = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, tipo, tribunal, sql, causas, sqli, compromiso, sqlii, cumplimiento, aux, cont, index;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body2 = req.body, tipo = _req$body2.tipo, tribunal = _req$body2.tribunal;\n            sql = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sql += 'from crosstab( $$ ';\n            sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\n            sql += 'from gestion ';\n            sql += 'where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sql += 'group by fecha_compromiso, año ';\n            sql += 'order by fecha_compromiso, año ';\n            sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context3.prev = 11;\n            _context3.next = 14;\n            return _keys[\"default\"].query(sql);\n\n          case 14:\n            _context3.next = 16;\n            return _context3.sent.rows;\n\n          case 16:\n            causas = _context3.sent;\n\n            if (!(causas.length > 0)) {\n              _context3.next = 64;\n              break;\n            }\n\n            sqli = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sqli += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sqli += 'from crosstab( $$ ';\n            sqli += 'select fecha_compromiso, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion ';\n            sqli += 'where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sqli += 'group by fecha_compromiso, año ';\n            sqli += 'order by fecha_compromiso, año ';\n            sqli += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context3.prev = 28;\n            _context3.next = 31;\n            return _keys[\"default\"].query(sqli);\n\n          case 31:\n            _context3.next = 33;\n            return _context3.sent.rows;\n\n          case 33:\n            compromiso = _context3.sent;\n\n            if (!(compromiso.length > 0)) {\n              _context3.next = 57;\n              break;\n            }\n\n            sqlii = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sqlii += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sqlii += 'from crosstab( $$ ';\n            sqlii += 'select fecha_compromiso, año, sum(cumplimiento) as cumplimiento ';\n            sqlii += 'from gestion ';\n            sqlii += 'where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sqlii += 'group by fecha_compromiso, año ';\n            sqlii += 'order by fecha_compromiso, año ';\n            sqlii += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context3.prev = 45;\n            _context3.next = 48;\n            return _keys[\"default\"].query(sqlii);\n\n          case 48:\n            _context3.next = 50;\n            return _context3.sent.rows;\n\n          case 50:\n            cumplimiento = _context3.sent;\n\n            if (cumplimiento.length > 0) {\n              aux = [];\n              cont = 0;\n\n              for (index = 0; index < causas.length * 3; index++) {\n                if (index % 3 == 0) {\n                  aux.push(causas[cont]);\n                } else if (index % 3 == 1) {\n                  aux.push(compromiso[cont]);\n                } else {\n                  aux.push(cumplimiento[cont]);\n                  cont++;\n                }\n              }\n\n              res.status(200).json({\n                registros: aux\n              });\n            }\n\n            _context3.next = 57;\n            break;\n\n          case 54:\n            _context3.prev = 54;\n            _context3.t0 = _context3[\"catch\"](45);\n            res.statis(500).json({\n              message: 'Ocurrió un problema',\n              error: _context3.t0\n            });\n\n          case 57:\n            _context3.next = 62;\n            break;\n\n          case 59:\n            _context3.prev = 59;\n            _context3.t1 = _context3[\"catch\"](28);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context3.t1\n            });\n\n          case 62:\n            _context3.next = 65;\n            break;\n\n          case 64:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 65:\n            _context3.next = 70;\n            break;\n\n          case 67:\n            _context3.prev = 67;\n            _context3.t2 = _context3[\"catch\"](11);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context3.t2\n            });\n\n          case 70:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[11, 67], [28, 59], [45, 54]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}(); //Listar detalle últimos seis meses\n\n\nginventario.listarDetalleGestionSeis = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var tipo, sql, causas, sqli, compromiso, sqlii, cumplimiento, aux, cont, index;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            tipo = req.body.tipo;\n            sql = 'select extract(month from fr.fecha_compromiso) as mes, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\n            sql += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\n            sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sql += 'from crosstab( $$ ';\n            sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\n            sql += 'from gestion ';\n            sql += 'where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sql += 'group by fecha_compromiso, año ';\n            sql += 'order by fecha_compromiso, año ';\n            sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context4.prev = 13;\n            _context4.next = 16;\n            return _keys[\"default\"].query(sql);\n\n          case 16:\n            _context4.next = 18;\n            return _context4.sent.rows;\n\n          case 18:\n            causas = _context4.sent;\n\n            if (!(causas.length > 0)) {\n              _context4.next = 70;\n              break;\n            }\n\n            sqli = 'select extract(month from fr.fecha_compromiso) as mes, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\n            sqli += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\n            sqli += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sqli += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sqli += 'from crosstab( $$ ';\n            sqli += 'select fecha_compromiso, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion ';\n            sqli += 'where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sqli += 'group by fecha_compromiso, año ';\n            sqli += 'order by fecha_compromiso, año ';\n            sqli += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context4.prev = 32;\n            _context4.next = 35;\n            return _keys[\"default\"].query(sqli);\n\n          case 35:\n            _context4.next = 37;\n            return _context4.sent.rows;\n\n          case 37:\n            compromiso = _context4.sent;\n\n            if (!(compromiso.length > 0)) {\n              _context4.next = 63;\n              break;\n            }\n\n            sqlii = 'select extract(month from fr.fecha_compromiso) as mes, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\n            sql += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\n            sqlii += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sqlii += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sqlii += 'from crosstab( $$ ';\n            sqlii += 'select fecha_compromiso, año, sum(cumplimiento) as cumplimiento ';\n            sqlii += 'from gestion ';\n            sqlii += 'where jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\n            sqlii += 'group by fecha_compromiso, año ';\n            sqlii += 'order by fecha_compromiso, año ';\n            sqlii += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context4.prev = 51;\n            _context4.next = 54;\n            return _keys[\"default\"].query(sqlii);\n\n          case 54:\n            _context4.next = 56;\n            return _context4.sent.rows;\n\n          case 56:\n            cumplimiento = _context4.sent;\n\n            if (cumplimiento.length > 0) {\n              aux = [];\n              cont = 0;\n\n              for (index = 0; index < causas.length * 3; index++) {\n                if (index % 3 == 0) {\n                  aux.push(causas[cont]);\n                } else if (index % 3 == 1) {\n                  aux.push(compromiso[cont]);\n                } else {\n                  aux.push(cumplimiento[cont]);\n                  cont++;\n                }\n              }\n\n              res.status(200).json({\n                registros: aux\n              });\n            }\n\n            _context4.next = 63;\n            break;\n\n          case 60:\n            _context4.prev = 60;\n            _context4.t0 = _context4[\"catch\"](51);\n            res.statis(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t0\n            });\n\n          case 63:\n            _context4.next = 68;\n            break;\n\n          case 65:\n            _context4.prev = 65;\n            _context4.t1 = _context4[\"catch\"](32);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t1\n            });\n\n          case 68:\n            _context4.next = 71;\n            break;\n\n          case 70:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 71:\n            _context4.next = 76;\n            break;\n\n          case 73:\n            _context4.prev = 73;\n            _context4.t2 = _context4[\"catch\"](13);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context4.t2\n            });\n\n          case 76:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[13, 73], [32, 65], [51, 60]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}(); //Listar detalle tribunal últimos cuatro meses y próximos dos meses\n\n\nginventario.listarDetallaTribunalGestionSeis = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body3, tipo, tribunal, sql, causas, sqli, compromiso, sqlii, cumplimiento, aux, cont, index;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _req$body3 = req.body, tipo = _req$body3.tipo, tribunal = _req$body3.tribunal;\n            sql = 'select extract(month from fr.fecha_compromiso) as mes, extract(year from fr.fecha_compromiso) as año, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\n            sql += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\n            sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sql += 'from crosstab( $$ ';\n            sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\n            sql += 'from gestion ';\n            sql += 'where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'4\\' month) and fecha_compromiso < date_trunc(\\'month\\', current_date + interval \\'2\\' month) ';\n            sql += 'group by fecha_compromiso, año ';\n            sql += 'order by fecha_compromiso, año ';\n            sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context5.prev = 13;\n            _context5.next = 16;\n            return _keys[\"default\"].query(sql);\n\n          case 16:\n            _context5.next = 18;\n            return _context5.sent.rows;\n\n          case 18:\n            causas = _context5.sent;\n\n            if (!(causas.length > 0)) {\n              _context5.next = 70;\n              break;\n            }\n\n            sqli = 'select extract(month from fr.fecha_compromiso) as mes, extract(year from fr.fecha_compromiso) as año, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\n            sqli += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\n            sqli += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sqli += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sqli += 'from crosstab( $$ ';\n            sqli += 'select fecha_compromiso, año, sum(compromiso) as compromiso ';\n            sqli += 'from gestion ';\n            sqli += 'where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'3\\' month) and fecha_compromiso < date_trunc(\\'month\\', current_date + interval \\'2\\' month) ';\n            sqli += 'group by fecha_compromiso, año ';\n            sqli += 'order by fecha_compromiso, año ';\n            sqli += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context5.prev = 32;\n            _context5.next = 35;\n            return _keys[\"default\"].query(sqli);\n\n          case 35:\n            _context5.next = 37;\n            return _context5.sent.rows;\n\n          case 37:\n            compromiso = _context5.sent;\n\n            if (!(compromiso.length > 0)) {\n              _context5.next = 63;\n              break;\n            }\n\n            sqlii = 'select extract(month from fr.fecha_compromiso) as mes, extract(year from fr.fecha_compromiso) as año, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\n            sqlii += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\n            sqlii += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sqlii += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sqlii += 'from crosstab( $$ ';\n            sqlii += 'select fecha_compromiso, año, sum(cumplimiento) as cumplimiento ';\n            sqlii += 'from gestion ';\n            sqlii += 'where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'3\\' month) and fecha_compromiso < date_trunc(\\'month\\', current_date + interval \\'2\\' month) ';\n            sqlii += 'group by fecha_compromiso, año ';\n            sqlii += 'order by fecha_compromiso, año ';\n            sqlii += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context5.prev = 51;\n            _context5.next = 54;\n            return _keys[\"default\"].query(sqlii);\n\n          case 54:\n            _context5.next = 56;\n            return _context5.sent.rows;\n\n          case 56:\n            cumplimiento = _context5.sent;\n\n            if (cumplimiento.length > 0) {\n              aux = [];\n              cont = 0;\n\n              for (index = 0; index < causas.length * 3; index++) {\n                if (index % 3 == 0) {\n                  aux.push(causas[cont]);\n                } else if (index % 3 == 1) {\n                  aux.push(compromiso[cont]);\n                } else {\n                  aux.push(cumplimiento[cont]);\n                  cont++;\n                }\n              }\n\n              res.status(200).json({\n                registros: aux\n              });\n            }\n\n            _context5.next = 63;\n            break;\n\n          case 60:\n            _context5.prev = 60;\n            _context5.t0 = _context5[\"catch\"](51);\n            res.statis(500).json({\n              message: 'Ocurrió un problema',\n              error: _context5.t0\n            });\n\n          case 63:\n            _context5.next = 68;\n            break;\n\n          case 65:\n            _context5.prev = 65;\n            _context5.t1 = _context5[\"catch\"](32);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context5.t1\n            });\n\n          case 68:\n            _context5.next = 71;\n            break;\n\n          case 70:\n            res.status(200).json({\n              message: 'No se encontraron registros',\n              NotFound: true\n            });\n\n          case 71:\n            _context5.next = 76;\n            break;\n\n          case 73:\n            _context5.prev = 73;\n            _context5.t2 = _context5[\"catch\"](13);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context5.t2\n            });\n\n          case 76:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[13, 73], [32, 65], [51, 60]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}(); //Listar reduccion inventario tribunal ultimos 3 meses\n\n\nginventario.listarReduccionTribunal = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body4, tipo, tribunal, sql, inventario;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _req$body4 = req.body, tipo = _req$body4.tipo, tribunal = _req$body4.tribunal;\n            sql = 'select extract(month from fr.fecha_compromiso) as mes, extract(year from fr.fecha_compromiso) as año, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\n            sql += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\n            sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\n            sql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\n            sql += 'from crosstab( $$ ';\n            sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\n            sql += 'from gestion ';\n            sql += 'where cod_tribunal = ' + tribunal + ' and jurisdiccion = \\'' + tipo + '\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'3\\' month) and fecha_compromiso < now() ';\n            sql += 'group by fecha_compromiso, año ';\n            sql += 'order by fecha_compromiso, año ';\n            sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\n            sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\n            _context6.prev = 13;\n            _context6.next = 16;\n            return _keys[\"default\"].query(sql);\n\n          case 16:\n            _context6.next = 18;\n            return _context6.sent.rows;\n\n          case 18:\n            inventario = _context6.sent;\n\n            if (inventario.length > 0) {\n              res.status(200).json({\n                registros: inventario\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context6.next = 25;\n            break;\n\n          case 22:\n            _context6.prev = 22;\n            _context6.t0 = _context6[\"catch\"](13);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context6.t0\n            });\n\n          case 25:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[13, 22]]);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}(); //Tasa de reduccion\n\n\nginventario.tasaReduccionTribunal = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var _req$body5, tipo, tribunal, sql, promedio;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _req$body5 = req.body, tipo = _req$body5.tipo, tribunal = _req$body5.tribunal;\n            sql = 'select avg(cumplimiento) as promedio from ( ';\n            sql += 'select fecha_compromiso, sum(cumplimiento) as cumplimiento ';\n            sql += 'from gestion where cod_tribunal = ' + tribunal + ' and jurisdiccion=\\'' + tipo + '\\' group by fecha_compromiso ';\n            sql += ') as fr';\n            _context7.prev = 5;\n            _context7.next = 8;\n            return _keys[\"default\"].query(sql);\n\n          case 8:\n            _context7.next = 10;\n            return _context7.sent.rows;\n\n          case 10:\n            promedio = _context7.sent;\n\n            if (promedio.length > 0) {\n              res.status(200).json({\n                promedio: promedio\n              });\n            } else {\n              res.status(200).json({\n                message: 'No se encontraron registros',\n                NotFound: true\n              });\n            }\n\n            _context7.next = 17;\n            break;\n\n          case 14:\n            _context7.prev = 14;\n            _context7.t0 = _context7[\"catch\"](5);\n            res.status(500).json({\n              message: 'Ocurrió un problema',\n              error: _context7.t0\n            });\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[5, 14]]);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}(); //Mes Compromiso\n\n\nginventario.mesCompromiso = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var _req$body6, tipo, tribunal, sql, mes;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _req$body6 = req.body, tipo = _req$body6.tipo, tribunal = _req$body6.tribunal;\n            sql = 'select date_trunc(\\'month\\', max(fecha_compromiso) + interval \\'1\\' month) as prox_compromiso from gestion where cod_tribunal = $1';\n            _context8.prev = 2;\n            _context8.next = 5;\n            return _keys[\"default\"].query(sql, [tribunal]);\n\n          case 5:\n            _context8.next = 7;\n            return _context8.sent.rows;\n\n          case 7:\n            mes = _context8.sent;\n\n            if (mes.length > 0) {\n              res.status(200).json({\n                mes: mes\n              });\n            } else {\n              res.status(200).json({\n                mes: mes\n              });\n            }\n\n            _context8.next = 13;\n            break;\n\n          case 11:\n            _context8.prev = 11;\n            _context8.t0 = _context8[\"catch\"](2);\n\n          case 13:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[2, 11]]);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nmodule.exports = ginventario;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyYWZpY29nZXN0aW9uLmpzIl0sIm5hbWVzIjpbImdpbnZlbnRhcmlvIiwibGlzdGFyVG90YWxHZXN0aW9uU2VpcyIsInJlcSIsInJlcyIsInRpcG8iLCJib2R5Iiwic3FsIiwicG9vbCIsInF1ZXJ5Iiwicm93cyIsImNhdXNhcyIsImxlbmd0aCIsInNxbGkiLCJjb21wcm9taXNvIiwic3FsaWkiLCJjdW1wbGltaWVudG8iLCJhdXgiLCJjb250IiwiaW5kZXgiLCJwdXNoIiwic3RhdHVzIiwianNvbiIsInJlZ2lzdHJvcyIsInN0YXRpcyIsIm1lc3NhZ2UiLCJlcnJvciIsIk5vdEZvdW5kIiwibGlzdGFyQ29ydGVHZXN0aW9uU2VpcyIsImNvcnRlIiwibGlzdGFyVHJpYnVuYWxHZXN0aW9uU2VpcyIsInRyaWJ1bmFsIiwibGlzdGFyRGV0YWxsZUdlc3Rpb25TZWlzIiwibGlzdGFyRGV0YWxsYVRyaWJ1bmFsR2VzdGlvblNlaXMiLCJsaXN0YXJSZWR1Y2Npb25UcmlidW5hbCIsImludmVudGFyaW8iLCJ0YXNhUmVkdWNjaW9uVHJpYnVuYWwiLCJwcm9tZWRpbyIsIm1lc0NvbXByb21pc28iLCJtZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7OztBQUVBLElBQU1BLFdBQVcsR0FBRyxFQUFwQixDLENBRUE7O0FBQ0FBLFdBQVcsQ0FBQ0Msc0JBQVo7QUFBQSxxRUFBcUMsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDMUJDLFlBQUFBLElBRDBCLEdBQ2xCRixHQUFHLENBQUNHLElBRGMsQ0FDMUJELElBRDBCO0FBRzdCRSxZQUFBQSxHQUg2QixHQUd2QixrSUFIdUI7QUFJcENBLFlBQUFBLEdBQUcsSUFBSSwyR0FBUDtBQUNHQSxZQUFBQSxHQUFHLElBQUksb0JBQVA7QUFDQUEsWUFBQUEsR0FBRyxJQUFJLDBEQUFQO0FBQ0FBLFlBQUFBLEdBQUcsSUFBSSxlQUFQO0FBQ0FB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QXJCO0FBR0g7O0FBZG1CO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTVCOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQW9CQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCeEMsV0FBakIiLCJzb3VyY2VSb290IjoiRDpcXGpjYXN0cm9hXFxEb2N1bWVudHNcXERlc2Fycm9sbG9cXG5vZGVcXGpqZ2dcXHNlcnZpZG9yXFxjb250cm9sbGVyc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBvb2wgZnJvbSAnLi4vZGF0YWJhc2Uva2V5cyc7XHJcblxyXG5jb25zdCBnaW52ZW50YXJpbyA9IHt9O1xyXG5cclxuLy9MaXN0YXIgdG90YWwgw7psdGltb3Mgc2VpcyBtZXNlc1xyXG5naW52ZW50YXJpby5saXN0YXJUb3RhbEdlc3Rpb25TZWlzID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB7dGlwb30gPSByZXEuYm9keTtcclxuICAgIFxyXG4gICAgbGV0IHNxbCA9ICdzZWxlY3QgZXh0cmFjdChtb250aCBmcm9tIGZyLmZlY2hhX2NvbXByb21pc28pIGFzIG1lcywgKGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSArICc7XHJcblx0c3FsICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxOVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIwXCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjFcIiwgMCkpIGFzIHRvdGFsICc7XHJcbiAgICBzcWwgKz0gJ2Zyb20gY3Jvc3N0YWIoICQkICc7XHJcbiAgICBzcWwgKz0gJ3NlbGVjdCBmZWNoYV9jb21wcm9taXNvLCBhw7FvLCBzdW0oY2F1c2FzKSBhcyBpbnZlbnRhcmlvICc7XHJcbiAgICBzcWwgKz0gJ2Zyb20gZ2VzdGlvbiAnO1xyXG4gICAgc3FsICs9ICd3aGVyZSBqdXJpc2RpY2Npb24gPSBcXCcnK3RpcG8rJ1xcJyBhbmQgZmVjaGFfY29tcHJvbWlzbyA+PSBkYXRlX3RydW5jKFxcJ21vbnRoXFwnLCBjdXJyZW50X2RhdGUgLSBpbnRlcnZhbCBcXCc2XFwnIG1vbnRoKSBhbmQgZmVjaGFfY29tcHJvbWlzbyA8IG5vdygpICc7XHJcbiAgICBzcWwgKz0gJ2dyb3VwIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgIHNxbCArPSAnb3JkZXIgYnkgZmVjaGFfY29tcHJvbWlzbywgYcOxbyAnO1xyXG4gICAgc3FsICs9ICckJCApIGFzIGZyKGZlY2hhX2NvbXByb21pc28gZGF0ZSwgXCIyMDE1XCIgYmlnaW50LCBcIjIwMTZcIiBiaWdpbnQsIFwiMjAxN1wiIGJpZ2ludCwgXCIyMDE4XCIgYmlnaW50LCAnO1xyXG4gICAgc3FsICs9ICdcIjIwMTlcIiBiaWdpbnQsIFwiMjAyMFwiIGJpZ2ludCwgXCIyMDIxXCIgYmlnaW50KSAnO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBjYXVzYXMgPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWwpKS5yb3dzO1xyXG4gICAgICAgIGlmIChjYXVzYXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBsZXQgc3FsaSA9ICdzZWxlY3QgZXh0cmFjdChtb250aCBmcm9tIGZyLmZlY2hhX2NvbXByb21pc28pIGFzIG1lcywgKGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSArICc7XHJcblx0ICAgICAgICBzcWxpICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxOVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIwXCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjFcIiwgMCkpIGFzIHRvdGFsICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ2Zyb20gY3Jvc3N0YWIoICQkICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ3NlbGVjdCBmZWNoYV9jb21wcm9taXNvLCBhw7FvLCBzdW0oY29tcHJvbWlzbykgYXMgY29tcHJvbWlzbyAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdmcm9tIGdlc3Rpb24gJztcclxuICAgICAgICAgICAgc3FsaSArPSAnd2hlcmUganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgYW5kIGZlY2hhX2NvbXByb21pc28gPj0gZGF0ZV90cnVuYyhcXCdtb250aFxcJywgY3VycmVudF9kYXRlIC0gaW50ZXJ2YWwgXFwnNlxcJyBtb250aCkgYW5kIGZlY2hhX2NvbXByb21pc28gPCBub3coKSAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdncm91cCBieSBmZWNoYV9jb21wcm9taXNvLCBhw7FvICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ29yZGVyIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgICAgICAgICAgc3FsaSArPSAnJCQgKSBhcyBmcihmZWNoYV9jb21wcm9taXNvIGRhdGUsIFwiMjAxNVwiIGJpZ2ludCwgXCIyMDE2XCIgYmlnaW50LCBcIjIwMTdcIiBiaWdpbnQsIFwiMjAxOFwiIGJpZ2ludCwgJztcclxuICAgICAgICAgICAgc3FsaSArPSAnXCIyMDE5XCIgYmlnaW50LCBcIjIwMjBcIiBiaWdpbnQsIFwiMjAyMVwiIGJpZ2ludCkgJztcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNvbXByb21pc28gPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWxpKSkucm93cztcclxuICAgICAgICAgICAgICAgIGlmKGNvbXByb21pc28ubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBzcWxpaSA9ICdzZWxlY3QgZXh0cmFjdChtb250aCBmcm9tIGZyLmZlY2hhX2NvbXByb21pc28pIGFzIG1lcywgKGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSArICc7XHJcblx0ICAgICAgICAgICAgICAgIHNxbGlpICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxOVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIwXCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjFcIiwgMCkpIGFzIHRvdGFsICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2Zyb20gY3Jvc3N0YWIoICQkICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ3NlbGVjdCBmZWNoYV9jb21wcm9taXNvLCBhw7FvLCBzdW0oY3VtcGxpbWllbnRvKSBhcyBjdW1wbGltaWVudG8gJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnZnJvbSBnZXN0aW9uICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ3doZXJlIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGFuZCBmZWNoYV9jb21wcm9taXNvID49IGRhdGVfdHJ1bmMoXFwnbW9udGhcXCcsIGN1cnJlbnRfZGF0ZSAtIGludGVydmFsIFxcJzZcXCcgbW9udGgpIGFuZCBmZWNoYV9jb21wcm9taXNvIDwgbm93KCkgJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnZ3JvdXAgYnkgZmVjaGFfY29tcHJvbWlzbywgYcOxbyAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdvcmRlciBieSBmZWNoYV9jb21wcm9taXNvLCBhw7FvICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJyQkICkgYXMgZnIoZmVjaGFfY29tcHJvbWlzbyBkYXRlLCBcIjIwMTVcIiBiaWdpbnQsIFwiMjAxNlwiIGJpZ2ludCwgXCIyMDE3XCIgYmlnaW50LCBcIjIwMThcIiBiaWdpbnQsICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ1wiMjAxOVwiIGJpZ2ludCwgXCIyMDIwXCIgYmlnaW50LCBcIjIwMjFcIiBiaWdpbnQpICc7XHJcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY3VtcGxpbWllbnRvID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsaWkpKS5yb3dzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZihjdW1wbGltaWVudG8ubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgYXV4ID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgY29udCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY2F1c2FzLmxlbmd0aCozOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoaW5kZXglMz09MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1eC5wdXNoKGNhdXNhc1tjb250XSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmKGluZGV4JTM9PTEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV4LnB1c2goY29tcHJvbWlzb1tjb250XSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV4LnB1c2goY3VtcGxpbWllbnRvW2NvbnRdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udCsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWdpc3Ryb3M6IGF1eFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdGlzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmnDsyB1biBwcm9ibGVtYScsXHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgZXJyb3JcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuLy9MaXN0YXIgY29ydGUgw7psdGltb3Mgc2VpcyBtZXNlc1xyXG5naW52ZW50YXJpby5saXN0YXJDb3J0ZUdlc3Rpb25TZWlzID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB7dGlwbywgY29ydGV9ID0gcmVxLmJvZHk7XHJcbiAgICBcclxuICAgIGxldCBzcWwgPSAnc2VsZWN0IGV4dHJhY3QobW9udGggZnJvbSBmci5mZWNoYV9jb21wcm9taXNvKSBhcyBtZXMsIChjb2FsZXNjZShmci5cIjIwMTVcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxNlwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE3XCIsMCkgKyAnO1xyXG5cdHNxbCArPSAnY29hbGVzY2UoZnIuXCIyMDE4XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTlcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIxXCIsIDApKSBhcyB0b3RhbCAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGNyb3NzdGFiKCAkJCAnO1xyXG4gICAgc3FsICs9ICdzZWxlY3QgZmVjaGFfY29tcHJvbWlzbywgYcOxbywgc3VtKGNhdXNhcykgYXMgaW52ZW50YXJpbyAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGdlc3Rpb24gJztcclxuICAgIHNxbCArPSAnd2hlcmUgY29kX2NvcnRlID0gJytjb3J0ZSsnIGFuZCBqdXJpc2RpY2Npb24gPSBcXCcnK3RpcG8rJ1xcJyBhbmQgZmVjaGFfY29tcHJvbWlzbyA+PSBkYXRlX3RydW5jKFxcJ21vbnRoXFwnLCBjdXJyZW50X2RhdGUgLSBpbnRlcnZhbCBcXCc2XFwnIG1vbnRoKSBhbmQgZmVjaGFfY29tcHJvbWlzbyA8IG5vdygpICc7XHJcbiAgICBzcWwgKz0gJ2dyb3VwIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgIHNxbCArPSAnb3JkZXIgYnkgZmVjaGFfY29tcHJvbWlzbywgYcOxbyAnO1xyXG4gICAgc3FsICs9ICckJCApIGFzIGZyKGZlY2hhX2NvbXByb21pc28gZGF0ZSwgXCIyMDE1XCIgYmlnaW50LCBcIjIwMTZcIiBiaWdpbnQsIFwiMjAxN1wiIGJpZ2ludCwgXCIyMDE4XCIgYmlnaW50LCAnO1xyXG4gICAgc3FsICs9ICdcIjIwMTlcIiBiaWdpbnQsIFwiMjAyMFwiIGJpZ2ludCwgXCIyMDIxXCIgYmlnaW50KSAnO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBjYXVzYXMgPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWwpKS5yb3dzO1xyXG4gICAgICAgIGlmIChjYXVzYXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBsZXQgc3FsaSA9ICdzZWxlY3QgZXh0cmFjdChtb250aCBmcm9tIGZyLmZlY2hhX2NvbXByb21pc28pIGFzIG1lcywgKGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSArICc7XHJcblx0ICAgICAgICBzcWxpICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxOVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIwXCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjFcIiwgMCkpIGFzIHRvdGFsICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ2Zyb20gY3Jvc3N0YWIoICQkICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ3NlbGVjdCBmZWNoYV9jb21wcm9taXNvLCBhw7FvLCBzdW0oY29tcHJvbWlzbykgYXMgY29tcHJvbWlzbyAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdmcm9tIGdlc3Rpb24gJztcclxuICAgICAgICAgICAgc3FsaSArPSAnd2hlcmUgY29kX2NvcnRlID0gJytjb3J0ZSsnIGFuZCBqdXJpc2RpY2Npb24gPSBcXCcnK3RpcG8rJ1xcJyBhbmQgZmVjaGFfY29tcHJvbWlzbyA+PSBkYXRlX3RydW5jKFxcJ21vbnRoXFwnLCBjdXJyZW50X2RhdGUgLSBpbnRlcnZhbCBcXCc2XFwnIG1vbnRoKSBhbmQgZmVjaGFfY29tcHJvbWlzbyA8IG5vdygpICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ2dyb3VwIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgICAgICAgICAgc3FsaSArPSAnb3JkZXIgYnkgZmVjaGFfY29tcHJvbWlzbywgYcOxbyAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICckJCApIGFzIGZyKGZlY2hhX2NvbXByb21pc28gZGF0ZSwgXCIyMDE1XCIgYmlnaW50LCBcIjIwMTZcIiBiaWdpbnQsIFwiMjAxN1wiIGJpZ2ludCwgXCIyMDE4XCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdcIjIwMTlcIiBiaWdpbnQsIFwiMjAyMFwiIGJpZ2ludCwgXCIyMDIxXCIgYmlnaW50KSAnO1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY29tcHJvbWlzbyA9IGF3YWl0IChhd2FpdCBwb29sLnF1ZXJ5KHNxbGkpKS5yb3dzO1xyXG4gICAgICAgICAgICAgICAgaWYoY29tcHJvbWlzby5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHNxbGlpID0gJ3NlbGVjdCBleHRyYWN0KG1vbnRoIGZyb20gZnIuZmVjaGFfY29tcHJvbWlzbykgYXMgbWVzLCAoY29hbGVzY2UoZnIuXCIyMDE1XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTZcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxN1wiLDApICsgJztcclxuXHQgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxOFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE5XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjBcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMVwiLCAwKSkgYXMgdG90YWwgJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnZnJvbSBjcm9zc3RhYiggJCQgJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnc2VsZWN0IGZlY2hhX2NvbXByb21pc28sIGHDsW8sIHN1bShjdW1wbGltaWVudG8pIGFzIGN1bXBsaW1pZW50byAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdmcm9tIGdlc3Rpb24gJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnd2hlcmUgY29kX2NvcnRlID0gJytjb3J0ZSsnIGFuZCBqdXJpc2RpY2Npb24gPSBcXCcnK3RpcG8rJ1xcJyBhbmQgZmVjaGFfY29tcHJvbWlzbyA+PSBkYXRlX3RydW5jKFxcJ21vbnRoXFwnLCBjdXJyZW50X2RhdGUgLSBpbnRlcnZhbCBcXCc2XFwnIG1vbnRoKSBhbmQgZmVjaGFfY29tcHJvbWlzbyA8IG5vdygpICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2dyb3VwIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnb3JkZXIgYnkgZmVjaGFfY29tcHJvbWlzbywgYcOxbyAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICckJCApIGFzIGZyKGZlY2hhX2NvbXByb21pc28gZGF0ZSwgXCIyMDE1XCIgYmlnaW50LCBcIjIwMTZcIiBiaWdpbnQsIFwiMjAxN1wiIGJpZ2ludCwgXCIyMDE4XCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdcIjIwMTlcIiBiaWdpbnQsIFwiMjAyMFwiIGJpZ2ludCwgXCIyMDIxXCIgYmlnaW50KSAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGN1bXBsaW1pZW50byA9IGF3YWl0IChhd2FpdCBwb29sLnF1ZXJ5KHNxbGlpKSkucm93cztcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoY3VtcGxpbWllbnRvLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGF1eCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNvbnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNhdXNhcy5sZW5ndGgqMzsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGluZGV4JTM9PTApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXgucHVzaChjYXVzYXNbY29udF0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihpbmRleCUzPT0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1eC5wdXNoKGNvbXByb21pc29bY29udF0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1eC5wdXNoKGN1bXBsaW1pZW50b1tjb250XSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnQrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVnaXN0cm9zOiBhdXhcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXRpcyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdObyBzZSBlbmNvbnRyYXJvbiByZWdpc3Ryb3MnLFxyXG4gICAgICAgICAgICAgICAgTm90Rm91bmQ6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmnDsyB1biBwcm9ibGVtYScsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vTGlzdGFyIHRyaWJ1bmFsIMO6bHRpbW9zIHNlaXMgbWVzZXNcclxuZ2ludmVudGFyaW8ubGlzdGFyVHJpYnVuYWxHZXN0aW9uU2VpcyA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3Qge3RpcG8sIHRyaWJ1bmFsfSA9IHJlcS5ib2R5O1xyXG4gICAgXHJcbiAgICBsZXQgc3FsID0gJ3NlbGVjdCBleHRyYWN0KG1vbnRoIGZyb20gZnIuZmVjaGFfY29tcHJvbWlzbykgYXMgbWVzLCAoY29hbGVzY2UoZnIuXCIyMDE1XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTZcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxN1wiLDApICsgJztcclxuXHRzcWwgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxOFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE5XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjBcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMVwiLCAwKSkgYXMgdG90YWwgJztcclxuICAgIHNxbCArPSAnZnJvbSBjcm9zc3RhYiggJCQgJztcclxuICAgIHNxbCArPSAnc2VsZWN0IGZlY2hhX2NvbXByb21pc28sIGHDsW8sIHN1bShjYXVzYXMpIGFzIGludmVudGFyaW8gJztcclxuICAgIHNxbCArPSAnZnJvbSBnZXN0aW9uICc7XHJcbiAgICBzcWwgKz0gJ3doZXJlIGNvZF90cmlidW5hbCA9ICcrdHJpYnVuYWwrJyBhbmQganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgYW5kIGZlY2hhX2NvbXByb21pc28gPj0gZGF0ZV90cnVuYyhcXCdtb250aFxcJywgY3VycmVudF9kYXRlIC0gaW50ZXJ2YWwgXFwnNlxcJyBtb250aCkgYW5kIGZlY2hhX2NvbXByb21pc28gPCBub3coKSAnO1xyXG4gICAgc3FsICs9ICdncm91cCBieSBmZWNoYV9jb21wcm9taXNvLCBhw7FvICc7XHJcbiAgICBzcWwgKz0gJ29yZGVyIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgIHNxbCArPSAnJCQgKSBhcyBmcihmZWNoYV9jb21wcm9taXNvIGRhdGUsIFwiMjAxNVwiIGJpZ2ludCwgXCIyMDE2XCIgYmlnaW50LCBcIjIwMTdcIiBiaWdpbnQsIFwiMjAxOFwiIGJpZ2ludCwgJztcclxuICAgIHNxbCArPSAnXCIyMDE5XCIgYmlnaW50LCBcIjIwMjBcIiBiaWdpbnQsIFwiMjAyMVwiIGJpZ2ludCkgJztcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY2F1c2FzID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsKSkucm93cztcclxuICAgICAgICBpZiAoY2F1c2FzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgbGV0IHNxbGkgPSAnc2VsZWN0IGV4dHJhY3QobW9udGggZnJvbSBmci5mZWNoYV9jb21wcm9taXNvKSBhcyBtZXMsIChjb2FsZXNjZShmci5cIjIwMTVcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxNlwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE3XCIsMCkgKyAnO1xyXG5cdCAgICAgICAgc3FsaSArPSAnY29hbGVzY2UoZnIuXCIyMDE4XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTlcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIxXCIsIDApKSBhcyB0b3RhbCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdmcm9tIGNyb3NzdGFiKCAkJCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdzZWxlY3QgZmVjaGFfY29tcHJvbWlzbywgYcOxbywgc3VtKGNvbXByb21pc28pIGFzIGNvbXByb21pc28gJztcclxuICAgICAgICAgICAgc3FsaSArPSAnZnJvbSBnZXN0aW9uICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ3doZXJlIGNvZF90cmlidW5hbCA9ICcrdHJpYnVuYWwrJyBhbmQganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgYW5kIGZlY2hhX2NvbXByb21pc28gPj0gZGF0ZV90cnVuYyhcXCdtb250aFxcJywgY3VycmVudF9kYXRlIC0gaW50ZXJ2YWwgXFwnNlxcJyBtb250aCkgYW5kIGZlY2hhX2NvbXByb21pc28gPCBub3coKSAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdncm91cCBieSBmZWNoYV9jb21wcm9taXNvLCBhw7FvICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ29yZGVyIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgICAgICAgICAgc3FsaSArPSAnJCQgKSBhcyBmcihmZWNoYV9jb21wcm9taXNvIGRhdGUsIFwiMjAxNVwiIGJpZ2ludCwgXCIyMDE2XCIgYmlnaW50LCBcIjIwMTdcIiBiaWdpbnQsIFwiMjAxOFwiIGJpZ2ludCwgJztcclxuICAgICAgICAgICAgc3FsaSArPSAnXCIyMDE5XCIgYmlnaW50LCBcIjIwMjBcIiBiaWdpbnQsIFwiMjAyMVwiIGJpZ2ludCkgJztcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNvbXByb21pc28gPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWxpKSkucm93cztcclxuICAgICAgICAgICAgICAgIGlmKGNvbXByb21pc28ubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBzcWxpaSA9ICdzZWxlY3QgZXh0cmFjdChtb250aCBmcm9tIGZyLmZlY2hhX2NvbXByb21pc28pIGFzIG1lcywgKGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSArICc7XHJcblx0ICAgICAgICAgICAgICAgIHNxbGlpICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxOVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIwXCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjFcIiwgMCkpIGFzIHRvdGFsICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2Zyb20gY3Jvc3N0YWIoICQkICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ3NlbGVjdCBmZWNoYV9jb21wcm9taXNvLCBhw7FvLCBzdW0oY3VtcGxpbWllbnRvKSBhcyBjdW1wbGltaWVudG8gJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnZnJvbSBnZXN0aW9uICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ3doZXJlIGNvZF90cmlidW5hbCA9ICcrdHJpYnVuYWwrJyBhbmQganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgYW5kIGZlY2hhX2NvbXByb21pc28gPj0gZGF0ZV90cnVuYyhcXCdtb250aFxcJywgY3VycmVudF9kYXRlIC0gaW50ZXJ2YWwgXFwnNlxcJyBtb250aCkgYW5kIGZlY2hhX2NvbXByb21pc28gPCBub3coKSAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdncm91cCBieSBmZWNoYV9jb21wcm9taXNvLCBhw7FvICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ29yZGVyIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnJCQgKSBhcyBmcihmZWNoYV9jb21wcm9taXNvIGRhdGUsIFwiMjAxNVwiIGJpZ2ludCwgXCIyMDE2XCIgYmlnaW50LCBcIjIwMTdcIiBiaWdpbnQsIFwiMjAxOFwiIGJpZ2ludCwgJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnXCIyMDE5XCIgYmlnaW50LCBcIjIwMjBcIiBiaWdpbnQsIFwiMjAyMVwiIGJpZ2ludCkgJztcclxuICAgICAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjdW1wbGltaWVudG8gPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWxpaSkpLnJvd3M7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGN1bXBsaW1pZW50by5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhdXggPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb250ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjYXVzYXMubGVuZ3RoKjM7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihpbmRleCUzPT0wKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV4LnB1c2goY2F1c2FzW2NvbnRdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYoaW5kZXglMz09MSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXgucHVzaChjb21wcm9taXNvW2NvbnRdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXgucHVzaChjdW1wbGltaWVudG9bY29udF0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2lzdHJvczogYXV4XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0aXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmnDsyB1biBwcm9ibGVtYScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gc2UgZW5jb250cmFyb24gcmVnaXN0cm9zJyxcclxuICAgICAgICAgICAgICAgIE5vdEZvdW5kOiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICBlcnJvclxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG4vL0xpc3RhciBkZXRhbGxlIMO6bHRpbW9zIHNlaXMgbWVzZXNcclxuZ2ludmVudGFyaW8ubGlzdGFyRGV0YWxsZUdlc3Rpb25TZWlzID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB7dGlwb30gPSByZXEuYm9keTtcclxuICAgIFxyXG4gICAgbGV0IHNxbCA9ICdzZWxlY3QgZXh0cmFjdChtb250aCBmcm9tIGZyLmZlY2hhX2NvbXByb21pc28pIGFzIG1lcywgY29hbGVzY2UoZnIuXCIyMDE1XCIsMCkgYXMgYV8yMDE1LCBjb2FsZXNjZShmci5cIjIwMTZcIiwwKSBhcyBhXzIwMTYsIGNvYWxlc2NlKGZyLlwiMjAxN1wiLDApIGFzIGFfMjAxNywgJztcclxuICAgIHNxbCArPSAnY29hbGVzY2UoZnIuXCIyMDE4XCIsMCkgYXMgYV8yMDE4LCBjb2FsZXNjZShmci5cIjIwMTlcIiwwKSBhcyBhXzIwMTksIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApIGFzIGFfMjAyMCwgY29hbGVzY2UoZnIuXCIyMDIxXCIsMCkgYXMgYV8yMDIxLCAnO1xyXG4gICAgc3FsICs9ICcoY29hbGVzY2UoZnIuXCIyMDE1XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTZcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxN1wiLDApICsgJztcclxuXHRzcWwgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxOFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE5XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjBcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMVwiLCAwKSkgYXMgdG90YWwgJztcclxuICAgIHNxbCArPSAnZnJvbSBjcm9zc3RhYiggJCQgJztcclxuICAgIHNxbCArPSAnc2VsZWN0IGZlY2hhX2NvbXByb21pc28sIGHDsW8sIHN1bShjYXVzYXMpIGFzIGludmVudGFyaW8gJztcclxuICAgIHNxbCArPSAnZnJvbSBnZXN0aW9uICc7XHJcbiAgICBzcWwgKz0gJ3doZXJlIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGFuZCBmZWNoYV9jb21wcm9taXNvID49IGRhdGVfdHJ1bmMoXFwnbW9udGhcXCcsIGN1cnJlbnRfZGF0ZSAtIGludGVydmFsIFxcJzZcXCcgbW9udGgpIGFuZCBmZWNoYV9jb21wcm9taXNvIDwgbm93KCkgJztcclxuICAgIHNxbCArPSAnZ3JvdXAgYnkgZmVjaGFfY29tcHJvbWlzbywgYcOxbyAnO1xyXG4gICAgc3FsICs9ICdvcmRlciBieSBmZWNoYV9jb21wcm9taXNvLCBhw7FvICc7XHJcbiAgICBzcWwgKz0gJyQkICkgYXMgZnIoZmVjaGFfY29tcHJvbWlzbyBkYXRlLCBcIjIwMTVcIiBiaWdpbnQsIFwiMjAxNlwiIGJpZ2ludCwgXCIyMDE3XCIgYmlnaW50LCBcIjIwMThcIiBiaWdpbnQsICc7XHJcbiAgICBzcWwgKz0gJ1wiMjAxOVwiIGJpZ2ludCwgXCIyMDIwXCIgYmlnaW50LCBcIjIwMjFcIiBiaWdpbnQpICc7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGNhdXNhcyA9IGF3YWl0IChhd2FpdCBwb29sLnF1ZXJ5KHNxbCkpLnJvd3M7XHJcbiAgICAgICAgaWYgKGNhdXNhcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGxldCBzcWxpID0gJ3NlbGVjdCBleHRyYWN0KG1vbnRoIGZyb20gZnIuZmVjaGFfY29tcHJvbWlzbykgYXMgbWVzLCBjb2FsZXNjZShmci5cIjIwMTVcIiwwKSBhcyBhXzIwMTUsIGNvYWxlc2NlKGZyLlwiMjAxNlwiLDApIGFzIGFfMjAxNiwgY29hbGVzY2UoZnIuXCIyMDE3XCIsMCkgYXMgYV8yMDE3LCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSBhcyBhXzIwMTgsIGNvYWxlc2NlKGZyLlwiMjAxOVwiLDApIGFzIGFfMjAxOSwgY29hbGVzY2UoZnIuXCIyMDIwXCIsMCkgYXMgYV8yMDIwLCBjb2FsZXNjZShmci5cIjIwMjFcIiwwKSBhcyBhXzIwMjEsICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJyhjb2FsZXNjZShmci5cIjIwMTVcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxNlwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE3XCIsMCkgKyAnO1xyXG5cdCAgICAgICAgc3FsaSArPSAnY29hbGVzY2UoZnIuXCIyMDE4XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTlcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIxXCIsIDApKSBhcyB0b3RhbCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdmcm9tIGNyb3NzdGFiKCAkJCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdzZWxlY3QgZmVjaGFfY29tcHJvbWlzbywgYcOxbywgc3VtKGNvbXByb21pc28pIGFzIGNvbXByb21pc28gJztcclxuICAgICAgICAgICAgc3FsaSArPSAnZnJvbSBnZXN0aW9uICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ3doZXJlIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGFuZCBmZWNoYV9jb21wcm9taXNvID49IGRhdGVfdHJ1bmMoXFwnbW9udGhcXCcsIGN1cnJlbnRfZGF0ZSAtIGludGVydmFsIFxcJzZcXCcgbW9udGgpIGFuZCBmZWNoYV9jb21wcm9taXNvIDwgbm93KCkgJztcclxuICAgICAgICAgICAgc3FsaSArPSAnZ3JvdXAgYnkgZmVjaGFfY29tcHJvbWlzbywgYcOxbyAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdvcmRlciBieSBmZWNoYV9jb21wcm9taXNvLCBhw7FvICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJyQkICkgYXMgZnIoZmVjaGFfY29tcHJvbWlzbyBkYXRlLCBcIjIwMTVcIiBiaWdpbnQsIFwiMjAxNlwiIGJpZ2ludCwgXCIyMDE3XCIgYmlnaW50LCBcIjIwMThcIiBiaWdpbnQsICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ1wiMjAxOVwiIGJpZ2ludCwgXCIyMDIwXCIgYmlnaW50LCBcIjIwMjFcIiBiaWdpbnQpICc7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb21wcm9taXNvID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsaSkpLnJvd3M7XHJcbiAgICAgICAgICAgICAgICBpZihjb21wcm9taXNvLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgc3FsaWkgPSAnc2VsZWN0IGV4dHJhY3QobW9udGggZnJvbSBmci5mZWNoYV9jb21wcm9taXNvKSBhcyBtZXMsIGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApIGFzIGFfMjAxNSwgY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgYXMgYV8yMDE2LCBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSBhcyBhXzIwMTcsICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSBhcyBhXzIwMTgsIGNvYWxlc2NlKGZyLlwiMjAxOVwiLDApIGFzIGFfMjAxOSwgY29hbGVzY2UoZnIuXCIyMDIwXCIsMCkgYXMgYV8yMDIwLCBjb2FsZXNjZShmci5cIjIwMjFcIiwwKSBhcyBhXzIwMjEsICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJyhjb2FsZXNjZShmci5cIjIwMTVcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxNlwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE3XCIsMCkgKyAnO1xyXG5cdCAgICAgICAgICAgICAgICBzcWxpaSArPSAnY29hbGVzY2UoZnIuXCIyMDE4XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTlcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIxXCIsIDApKSBhcyB0b3RhbCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdmcm9tIGNyb3NzdGFiKCAkJCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdzZWxlY3QgZmVjaGFfY29tcHJvbWlzbywgYcOxbywgc3VtKGN1bXBsaW1pZW50bykgYXMgY3VtcGxpbWllbnRvICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2Zyb20gZ2VzdGlvbiAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICd3aGVyZSBqdXJpc2RpY2Npb24gPSBcXCcnK3RpcG8rJ1xcJyBhbmQgZmVjaGFfY29tcHJvbWlzbyA+PSBkYXRlX3RydW5jKFxcJ21vbnRoXFwnLCBjdXJyZW50X2RhdGUgLSBpbnRlcnZhbCBcXCc2XFwnIG1vbnRoKSBhbmQgZmVjaGFfY29tcHJvbWlzbyA8IG5vdygpICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2dyb3VwIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnb3JkZXIgYnkgZmVjaGFfY29tcHJvbWlzbywgYcOxbyAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICckJCApIGFzIGZyKGZlY2hhX2NvbXByb21pc28gZGF0ZSwgXCIyMDE1XCIgYmlnaW50LCBcIjIwMTZcIiBiaWdpbnQsIFwiMjAxN1wiIGJpZ2ludCwgXCIyMDE4XCIgYmlnaW50LCAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdcIjIwMTlcIiBiaWdpbnQsIFwiMjAyMFwiIGJpZ2ludCwgXCIyMDIxXCIgYmlnaW50KSAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGN1bXBsaW1pZW50byA9IGF3YWl0IChhd2FpdCBwb29sLnF1ZXJ5KHNxbGlpKSkucm93cztcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoY3VtcGxpbWllbnRvLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGF1eCA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNvbnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNhdXNhcy5sZW5ndGgqMzsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGluZGV4JTM9PTApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXgucHVzaChjYXVzYXNbY29udF0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihpbmRleCUzPT0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1eC5wdXNoKGNvbXByb21pc29bY29udF0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1eC5wdXNoKGN1bXBsaW1pZW50b1tjb250XSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnQrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVnaXN0cm9zOiBhdXhcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXRpcyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdObyBzZSBlbmNvbnRyYXJvbiByZWdpc3Ryb3MnLFxyXG4gICAgICAgICAgICAgICAgTm90Rm91bmQ6IHRydWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmnDsyB1biBwcm9ibGVtYScsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vTGlzdGFyIGRldGFsbGUgdHJpYnVuYWwgw7psdGltb3MgY3VhdHJvIG1lc2VzIHkgcHLDs3hpbW9zIGRvcyBtZXNlc1xyXG5naW52ZW50YXJpby5saXN0YXJEZXRhbGxhVHJpYnVuYWxHZXN0aW9uU2VpcyA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3Qge3RpcG8sIHRyaWJ1bmFsfSA9IHJlcS5ib2R5O1xyXG4gICAgXHJcbiAgICBsZXQgc3FsID0gJ3NlbGVjdCBleHRyYWN0KG1vbnRoIGZyb20gZnIuZmVjaGFfY29tcHJvbWlzbykgYXMgbWVzLCBleHRyYWN0KHllYXIgZnJvbSBmci5mZWNoYV9jb21wcm9taXNvKSBhcyBhw7FvLCBjb2FsZXNjZShmci5cIjIwMTVcIiwwKSBhcyBhXzIwMTUsIGNvYWxlc2NlKGZyLlwiMjAxNlwiLDApIGFzIGFfMjAxNiwgY29hbGVzY2UoZnIuXCIyMDE3XCIsMCkgYXMgYV8yMDE3LCAnO1xyXG4gICAgc3FsICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSBhcyBhXzIwMTgsIGNvYWxlc2NlKGZyLlwiMjAxOVwiLDApIGFzIGFfMjAxOSwgY29hbGVzY2UoZnIuXCIyMDIwXCIsMCkgYXMgYV8yMDIwLCBjb2FsZXNjZShmci5cIjIwMjFcIiwwKSBhcyBhXzIwMjEsICc7XHJcbiAgICBzcWwgKz0gJyhjb2FsZXNjZShmci5cIjIwMTVcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxNlwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE3XCIsMCkgKyAnO1xyXG5cdHNxbCArPSAnY29hbGVzY2UoZnIuXCIyMDE4XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTlcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIxXCIsIDApKSBhcyB0b3RhbCAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGNyb3NzdGFiKCAkJCAnO1xyXG4gICAgc3FsICs9ICdzZWxlY3QgZmVjaGFfY29tcHJvbWlzbywgYcOxbywgc3VtKGNhdXNhcykgYXMgaW52ZW50YXJpbyAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGdlc3Rpb24gJztcclxuICAgIHNxbCArPSAnd2hlcmUgY29kX3RyaWJ1bmFsID0gJyt0cmlidW5hbCsnIGFuZCBqdXJpc2RpY2Npb24gPSBcXCcnK3RpcG8rJ1xcJyBhbmQgZmVjaGFfY29tcHJvbWlzbyA+PSBkYXRlX3RydW5jKFxcJ21vbnRoXFwnLCBjdXJyZW50X2RhdGUgLSBpbnRlcnZhbCBcXCc0XFwnIG1vbnRoKSBhbmQgZmVjaGFfY29tcHJvbWlzbyA8IGRhdGVfdHJ1bmMoXFwnbW9udGhcXCcsIGN1cnJlbnRfZGF0ZSArIGludGVydmFsIFxcJzJcXCcgbW9udGgpICc7XHJcbiAgICBzcWwgKz0gJ2dyb3VwIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgIHNxbCArPSAnb3JkZXIgYnkgZmVjaGFfY29tcHJvbWlzbywgYcOxbyAnO1xyXG4gICAgc3FsICs9ICckJCApIGFzIGZyKGZlY2hhX2NvbXByb21pc28gZGF0ZSwgXCIyMDE1XCIgYmlnaW50LCBcIjIwMTZcIiBiaWdpbnQsIFwiMjAxN1wiIGJpZ2ludCwgXCIyMDE4XCIgYmlnaW50LCAnO1xyXG4gICAgc3FsICs9ICdcIjIwMTlcIiBiaWdpbnQsIFwiMjAyMFwiIGJpZ2ludCwgXCIyMDIxXCIgYmlnaW50KSAnO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBjYXVzYXMgPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWwpKS5yb3dzO1xyXG4gICAgICAgIGlmIChjYXVzYXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBsZXQgc3FsaSA9ICdzZWxlY3QgZXh0cmFjdChtb250aCBmcm9tIGZyLmZlY2hhX2NvbXByb21pc28pIGFzIG1lcywgZXh0cmFjdCh5ZWFyIGZyb20gZnIuZmVjaGFfY29tcHJvbWlzbykgYXMgYcOxbywgY29hbGVzY2UoZnIuXCIyMDE1XCIsMCkgYXMgYV8yMDE1LCBjb2FsZXNjZShmci5cIjIwMTZcIiwwKSBhcyBhXzIwMTYsIGNvYWxlc2NlKGZyLlwiMjAxN1wiLDApIGFzIGFfMjAxNywgJztcclxuICAgICAgICAgICAgc3FsaSArPSAnY29hbGVzY2UoZnIuXCIyMDE4XCIsMCkgYXMgYV8yMDE4LCBjb2FsZXNjZShmci5cIjIwMTlcIiwwKSBhcyBhXzIwMTksIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApIGFzIGFfMjAyMCwgY29hbGVzY2UoZnIuXCIyMDIxXCIsMCkgYXMgYV8yMDIxLCAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICcoY29hbGVzY2UoZnIuXCIyMDE1XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTZcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxN1wiLDApICsgJztcclxuXHQgICAgICAgIHNxbGkgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxOFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE5XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjBcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMVwiLCAwKSkgYXMgdG90YWwgJztcclxuICAgICAgICAgICAgc3FsaSArPSAnZnJvbSBjcm9zc3RhYiggJCQgJztcclxuICAgICAgICAgICAgc3FsaSArPSAnc2VsZWN0IGZlY2hhX2NvbXByb21pc28sIGHDsW8sIHN1bShjb21wcm9taXNvKSBhcyBjb21wcm9taXNvICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ2Zyb20gZ2VzdGlvbiAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICd3aGVyZSBjb2RfdHJpYnVuYWwgPSAnK3RyaWJ1bmFsKycgYW5kIGp1cmlzZGljY2lvbiA9IFxcJycrdGlwbysnXFwnIGFuZCBmZWNoYV9jb21wcm9taXNvID49IGRhdGVfdHJ1bmMoXFwnbW9udGhcXCcsIGN1cnJlbnRfZGF0ZSAtIGludGVydmFsIFxcJzNcXCcgbW9udGgpIGFuZCBmZWNoYV9jb21wcm9taXNvIDwgZGF0ZV90cnVuYyhcXCdtb250aFxcJywgY3VycmVudF9kYXRlICsgaW50ZXJ2YWwgXFwnMlxcJyBtb250aCkgJztcclxuICAgICAgICAgICAgc3FsaSArPSAnZ3JvdXAgYnkgZmVjaGFfY29tcHJvbWlzbywgYcOxbyAnO1xyXG4gICAgICAgICAgICBzcWxpICs9ICdvcmRlciBieSBmZWNoYV9jb21wcm9taXNvLCBhw7FvICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJyQkICkgYXMgZnIoZmVjaGFfY29tcHJvbWlzbyBkYXRlLCBcIjIwMTVcIiBiaWdpbnQsIFwiMjAxNlwiIGJpZ2ludCwgXCIyMDE3XCIgYmlnaW50LCBcIjIwMThcIiBiaWdpbnQsICc7XHJcbiAgICAgICAgICAgIHNxbGkgKz0gJ1wiMjAxOVwiIGJpZ2ludCwgXCIyMDIwXCIgYmlnaW50LCBcIjIwMjFcIiBiaWdpbnQpICc7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb21wcm9taXNvID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsaSkpLnJvd3M7XHJcbiAgICAgICAgICAgICAgICBpZihjb21wcm9taXNvLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgc3FsaWkgPSAnc2VsZWN0IGV4dHJhY3QobW9udGggZnJvbSBmci5mZWNoYV9jb21wcm9taXNvKSBhcyBtZXMsIGV4dHJhY3QoeWVhciBmcm9tIGZyLmZlY2hhX2NvbXByb21pc28pIGFzIGHDsW8sIGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApIGFzIGFfMjAxNSwgY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgYXMgYV8yMDE2LCBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSBhcyBhXzIwMTcsICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxOFwiLDApIGFzIGFfMjAxOCwgY29hbGVzY2UoZnIuXCIyMDE5XCIsMCkgYXMgYV8yMDE5LCBjb2FsZXNjZShmci5cIjIwMjBcIiwwKSBhcyBhXzIwMjAsIGNvYWxlc2NlKGZyLlwiMjAyMVwiLDApIGFzIGFfMjAyMSwgJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnKGNvYWxlc2NlKGZyLlwiMjAxNVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE2XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTdcIiwwKSArICc7XHJcblx0ICAgICAgICAgICAgICAgIHNxbGlpICs9ICdjb2FsZXNjZShmci5cIjIwMThcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxOVwiLDApICsgY29hbGVzY2UoZnIuXCIyMDIwXCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjFcIiwgMCkpIGFzIHRvdGFsICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ2Zyb20gY3Jvc3N0YWIoICQkICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ3NlbGVjdCBmZWNoYV9jb21wcm9taXNvLCBhw7FvLCBzdW0oY3VtcGxpbWllbnRvKSBhcyBjdW1wbGltaWVudG8gJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnZnJvbSBnZXN0aW9uICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ3doZXJlIGNvZF90cmlidW5hbCA9ICcrdHJpYnVuYWwrJyBhbmQganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgYW5kIGZlY2hhX2NvbXByb21pc28gPj0gZGF0ZV90cnVuYyhcXCdtb250aFxcJywgY3VycmVudF9kYXRlIC0gaW50ZXJ2YWwgXFwnM1xcJyBtb250aCkgYW5kIGZlY2hhX2NvbXByb21pc28gPCBkYXRlX3RydW5jKFxcJ21vbnRoXFwnLCBjdXJyZW50X2RhdGUgKyBpbnRlcnZhbCBcXCcyXFwnIG1vbnRoKSAnO1xyXG4gICAgICAgICAgICAgICAgICAgIHNxbGlpICs9ICdncm91cCBieSBmZWNoYV9jb21wcm9taXNvLCBhw7FvICc7XHJcbiAgICAgICAgICAgICAgICAgICAgc3FsaWkgKz0gJ29yZGVyIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnJCQgKSBhcyBmcihmZWNoYV9jb21wcm9taXNvIGRhdGUsIFwiMjAxNVwiIGJpZ2ludCwgXCIyMDE2XCIgYmlnaW50LCBcIjIwMTdcIiBiaWdpbnQsIFwiMjAxOFwiIGJpZ2ludCwgJztcclxuICAgICAgICAgICAgICAgICAgICBzcWxpaSArPSAnXCIyMDE5XCIgYmlnaW50LCBcIjIwMjBcIiBiaWdpbnQsIFwiMjAyMVwiIGJpZ2ludCkgJztcclxuICAgICAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjdW1wbGltaWVudG8gPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWxpaSkpLnJvd3M7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGN1bXBsaW1pZW50by5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhdXggPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb250ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjYXVzYXMubGVuZ3RoKjM7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihpbmRleCUzPT0wKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV4LnB1c2goY2F1c2FzW2NvbnRdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYoaW5kZXglMz09MSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXgucHVzaChjb21wcm9taXNvW2NvbnRdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXgucHVzaChjdW1wbGltaWVudG9bY29udF0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2lzdHJvczogYXV4XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5zdGF0aXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdPY3VycmnDsyB1biBwcm9ibGVtYScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvclxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gc2UgZW5jb250cmFyb24gcmVnaXN0cm9zJyxcclxuICAgICAgICAgICAgICAgIE5vdEZvdW5kOiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICBlcnJvclxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG4vL0xpc3RhciByZWR1Y2Npb24gaW52ZW50YXJpbyB0cmlidW5hbCB1bHRpbW9zIDMgbWVzZXNcclxuZ2ludmVudGFyaW8ubGlzdGFyUmVkdWNjaW9uVHJpYnVuYWwgPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICBjb25zdCB7dGlwbywgdHJpYnVuYWx9ID0gcmVxLmJvZHk7XHJcblxyXG4gICAgbGV0IHNxbCA9ICdzZWxlY3QgZXh0cmFjdChtb250aCBmcm9tIGZyLmZlY2hhX2NvbXByb21pc28pIGFzIG1lcywgZXh0cmFjdCh5ZWFyIGZyb20gZnIuZmVjaGFfY29tcHJvbWlzbykgYXMgYcOxbywgY29hbGVzY2UoZnIuXCIyMDE1XCIsMCkgYXMgYV8yMDE1LCBjb2FsZXNjZShmci5cIjIwMTZcIiwwKSBhcyBhXzIwMTYsIGNvYWxlc2NlKGZyLlwiMjAxN1wiLDApIGFzIGFfMjAxNywgJztcclxuICAgIHNxbCArPSAnY29hbGVzY2UoZnIuXCIyMDE4XCIsMCkgYXMgYV8yMDE4LCBjb2FsZXNjZShmci5cIjIwMTlcIiwwKSBhcyBhXzIwMTksIGNvYWxlc2NlKGZyLlwiMjAyMFwiLDApIGFzIGFfMjAyMCwgY29hbGVzY2UoZnIuXCIyMDIxXCIsMCkgYXMgYV8yMDIxLCAnO1xyXG4gICAgc3FsICs9ICcoY29hbGVzY2UoZnIuXCIyMDE1XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMTZcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAxN1wiLDApICsgJztcclxuXHRzcWwgKz0gJ2NvYWxlc2NlKGZyLlwiMjAxOFwiLDApICsgY29hbGVzY2UoZnIuXCIyMDE5XCIsMCkgKyBjb2FsZXNjZShmci5cIjIwMjBcIiwwKSArIGNvYWxlc2NlKGZyLlwiMjAyMVwiLCAwKSkgYXMgdG90YWwgJztcclxuICAgIHNxbCArPSAnZnJvbSBjcm9zc3RhYiggJCQgJztcclxuICAgIHNxbCArPSAnc2VsZWN0IGZlY2hhX2NvbXByb21pc28sIGHDsW8sIHN1bShjYXVzYXMpIGFzIGludmVudGFyaW8gJztcclxuICAgIHNxbCArPSAnZnJvbSBnZXN0aW9uICc7XHJcbiAgICBzcWwgKz0gJ3doZXJlIGNvZF90cmlidW5hbCA9ICcrdHJpYnVuYWwrJyBhbmQganVyaXNkaWNjaW9uID0gXFwnJyt0aXBvKydcXCcgYW5kIGZlY2hhX2NvbXByb21pc28gPj0gZGF0ZV90cnVuYyhcXCdtb250aFxcJywgY3VycmVudF9kYXRlIC0gaW50ZXJ2YWwgXFwnM1xcJyBtb250aCkgYW5kIGZlY2hhX2NvbXByb21pc28gPCBub3coKSAnO1xyXG4gICAgc3FsICs9ICdncm91cCBieSBmZWNoYV9jb21wcm9taXNvLCBhw7FvICc7XHJcbiAgICBzcWwgKz0gJ29yZGVyIGJ5IGZlY2hhX2NvbXByb21pc28sIGHDsW8gJztcclxuICAgIHNxbCArPSAnJCQgKSBhcyBmcihmZWNoYV9jb21wcm9taXNvIGRhdGUsIFwiMjAxNVwiIGJpZ2ludCwgXCIyMDE2XCIgYmlnaW50LCBcIjIwMTdcIiBiaWdpbnQsIFwiMjAxOFwiIGJpZ2ludCwgJztcclxuICAgIHNxbCArPSAnXCIyMDE5XCIgYmlnaW50LCBcIjIwMjBcIiBiaWdpbnQsIFwiMjAyMVwiIGJpZ2ludCkgJztcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGludmVudGFyaW8gPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWwpKS5yb3dzO1xyXG4gICAgICAgIGlmKGludmVudGFyaW8ubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIHJlZ2lzdHJvczogaW52ZW50YXJpb1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gc2UgZW5jb250cmFyb24gcmVnaXN0cm9zJyxcclxuICAgICAgICAgICAgICAgIE5vdEZvdW5kOiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEnLFxyXG4gICAgICAgICAgICBlcnJvclxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLy9UYXNhIGRlIHJlZHVjY2lvblxyXG5naW52ZW50YXJpby50YXNhUmVkdWNjaW9uVHJpYnVuYWwgPSBhc3luYyhyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgIGNvbnN0IHt0aXBvLCB0cmlidW5hbH0gPSByZXEuYm9keTtcclxuXHJcbiAgICBsZXQgc3FsID0gJ3NlbGVjdCBhdmcoY3VtcGxpbWllbnRvKSBhcyBwcm9tZWRpbyBmcm9tICggJztcclxuICAgIHNxbCArPSAnc2VsZWN0IGZlY2hhX2NvbXByb21pc28sIHN1bShjdW1wbGltaWVudG8pIGFzIGN1bXBsaW1pZW50byAnO1xyXG4gICAgc3FsICs9ICdmcm9tIGdlc3Rpb24gd2hlcmUgY29kX3RyaWJ1bmFsID0gJyt0cmlidW5hbCsnIGFuZCBqdXJpc2RpY2Npb249XFwnJyt0aXBvKydcXCcgZ3JvdXAgYnkgZmVjaGFfY29tcHJvbWlzbyAnO1xyXG4gICAgc3FsICs9ICcpIGFzIGZyJztcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcHJvbWVkaW8gPSBhd2FpdCAoYXdhaXQgcG9vbC5xdWVyeShzcWwpKS5yb3dzO1xyXG4gICAgICAgIGlmKHByb21lZGlvLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBwcm9tZWRpbzogcHJvbWVkaW9cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ05vIHNlIGVuY29udHJhcm9uIHJlZ2lzdHJvcycsXHJcbiAgICAgICAgICAgICAgICBOb3RGb3VuZDogdHJ1ZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ09jdXJyacOzIHVuIHByb2JsZW1hJyxcclxuICAgICAgICAgICAgZXJyb3JcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbi8vTWVzIENvbXByb21pc29cclxuZ2ludmVudGFyaW8ubWVzQ29tcHJvbWlzbyA9IGFzeW5jKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCB7dGlwbywgdHJpYnVuYWx9ID0gcmVxLmJvZHk7XHJcblxyXG4gICAgbGV0IHNxbCA9ICdzZWxlY3QgZGF0ZV90cnVuYyhcXCdtb250aFxcJywgbWF4KGZlY2hhX2NvbXByb21pc28pICsgaW50ZXJ2YWwgXFwnMVxcJyBtb250aCkgYXMgcHJveF9jb21wcm9taXNvIGZyb20gZ2VzdGlvbiB3aGVyZSBjb2RfdHJpYnVuYWwgPSAkMSc7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IG1lcyA9IGF3YWl0IChhd2FpdCBwb29sLnF1ZXJ5KHNxbCwgW3RyaWJ1bmFsXSkpLnJvd3M7XHJcbiAgICAgICAgaWYobWVzLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXM6IG1lc1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXM6IG1lc1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGdpbnZlbnRhcmlvOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "graficogestion.js"
      ],
      "names": [
        "ginventario",
        "listarTotalGestionSeis",
        "req",
        "res",
        "tipo",
        "body",
        "sql",
        "pool",
        "query",
        "rows",
        "causas",
        "length",
        "sqli",
        "compromiso",
        "sqlii",
        "cumplimiento",
        "aux",
        "cont",
        "index",
        "push",
        "status",
        "json",
        "registros",
        "statis",
        "message",
        "error",
        "NotFound",
        "listarCorteGestionSeis",
        "corte",
        "listarTribunalGestionSeis",
        "tribunal",
        "listarDetalleGestionSeis",
        "listarDetallaTribunalGestionSeis",
        "listarReduccionTribunal",
        "inventario",
        "tasaReduccionTribunal",
        "promedio",
        "mesCompromiso",
        "mes",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "sourcesContent": [
        "import pool from '../database/keys';\r\n\r\nconst ginventario = {};\r\n\r\n//Listar total últimos seis meses\r\nginventario.listarTotalGestionSeis = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    \r\n    let sql = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\tsql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n    sql += 'from crosstab( $$ ';\r\n    sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\r\n    sql += 'from gestion ';\r\n    sql += 'where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n    sql += 'group by fecha_compromiso, año ';\r\n    sql += 'order by fecha_compromiso, año ';\r\n    sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n    sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            let sqli = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\t        sqli += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n            sqli += 'from crosstab( $$ ';\r\n            sqli += 'select fecha_compromiso, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion ';\r\n            sqli += 'where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n            sqli += 'group by fecha_compromiso, año ';\r\n            sqli += 'order by fecha_compromiso, año ';\r\n            sqli += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n            try {\r\n                const compromiso = await (await pool.query(sqli)).rows;\r\n                if(compromiso.length > 0) {\r\n                    let sqlii = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\t                sqlii += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n                    sqlii += 'from crosstab( $$ ';\r\n                    sqlii += 'select fecha_compromiso, año, sum(cumplimiento) as cumplimiento ';\r\n                    sqlii += 'from gestion ';\r\n                    sqlii += 'where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n                    sqlii += 'group by fecha_compromiso, año ';\r\n                    sqlii += 'order by fecha_compromiso, año ';\r\n                    sqlii += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n                    sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n                    try {\r\n                        const cumplimiento = await (await pool.query(sqlii)).rows;\r\n                        if(cumplimiento.length > 0){\r\n                            let aux = [];\r\n                            let cont = 0;\r\n                            for (let index = 0; index < causas.length*3; index++) {\r\n                                if(index%3==0){\r\n                                    aux.push(causas[cont]);\r\n                                } else if(index%3==1) {\r\n                                    aux.push(compromiso[cont]);\r\n                                } else {\r\n                                    aux.push(cumplimiento[cont]);\r\n                                    cont++;\r\n                                }\r\n                            }\r\n                            res.status(200).json({\r\n                                registros: aux\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.statis(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            error\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar corte últimos seis meses\r\nginventario.listarCorteGestionSeis = async (req, res) => {\r\n    const {tipo, corte} = req.body;\r\n    \r\n    let sql = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\tsql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n    sql += 'from crosstab( $$ ';\r\n    sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\r\n    sql += 'from gestion ';\r\n    sql += 'where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n    sql += 'group by fecha_compromiso, año ';\r\n    sql += 'order by fecha_compromiso, año ';\r\n    sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n    sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            let sqli = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\t        sqli += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n            sqli += 'from crosstab( $$ ';\r\n            sqli += 'select fecha_compromiso, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion ';\r\n            sqli += 'where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n            sqli += 'group by fecha_compromiso, año ';\r\n            sqli += 'order by fecha_compromiso, año ';\r\n            sqli += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n            try {\r\n                const compromiso = await (await pool.query(sqli)).rows;\r\n                if(compromiso.length > 0) {\r\n                    let sqlii = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\t                sqlii += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n                    sqlii += 'from crosstab( $$ ';\r\n                    sqlii += 'select fecha_compromiso, año, sum(cumplimiento) as cumplimiento ';\r\n                    sqlii += 'from gestion ';\r\n                    sqlii += 'where cod_corte = '+corte+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n                    sqlii += 'group by fecha_compromiso, año ';\r\n                    sqlii += 'order by fecha_compromiso, año ';\r\n                    sqlii += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n                    sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n                    try {\r\n                        const cumplimiento = await (await pool.query(sqlii)).rows;\r\n                        if(cumplimiento.length > 0){\r\n                            let aux = [];\r\n                            let cont = 0;\r\n                            for (let index = 0; index < causas.length*3; index++) {\r\n                                if(index%3==0){\r\n                                    aux.push(causas[cont]);\r\n                                } else if(index%3==1) {\r\n                                    aux.push(compromiso[cont]);\r\n                                } else {\r\n                                    aux.push(cumplimiento[cont]);\r\n                                    cont++;\r\n                                }\r\n                            }\r\n                            res.status(200).json({\r\n                                registros: aux\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.statis(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            error\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar tribunal últimos seis meses\r\nginventario.listarTribunalGestionSeis = async (req, res) => {\r\n    const {tipo, tribunal} = req.body;\r\n    \r\n    let sql = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\tsql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n    sql += 'from crosstab( $$ ';\r\n    sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\r\n    sql += 'from gestion ';\r\n    sql += 'where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n    sql += 'group by fecha_compromiso, año ';\r\n    sql += 'order by fecha_compromiso, año ';\r\n    sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n    sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            let sqli = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\t        sqli += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n            sqli += 'from crosstab( $$ ';\r\n            sqli += 'select fecha_compromiso, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion ';\r\n            sqli += 'where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n            sqli += 'group by fecha_compromiso, año ';\r\n            sqli += 'order by fecha_compromiso, año ';\r\n            sqli += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n            try {\r\n                const compromiso = await (await pool.query(sqli)).rows;\r\n                if(compromiso.length > 0) {\r\n                    let sqlii = 'select extract(month from fr.fecha_compromiso) as mes, (coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\t                sqlii += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n                    sqlii += 'from crosstab( $$ ';\r\n                    sqlii += 'select fecha_compromiso, año, sum(cumplimiento) as cumplimiento ';\r\n                    sqlii += 'from gestion ';\r\n                    sqlii += 'where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n                    sqlii += 'group by fecha_compromiso, año ';\r\n                    sqlii += 'order by fecha_compromiso, año ';\r\n                    sqlii += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n                    sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n                    try {\r\n                        const cumplimiento = await (await pool.query(sqlii)).rows;\r\n                        if(cumplimiento.length > 0){\r\n                            let aux = [];\r\n                            let cont = 0;\r\n                            for (let index = 0; index < causas.length*3; index++) {\r\n                                if(index%3==0){\r\n                                    aux.push(causas[cont]);\r\n                                } else if(index%3==1) {\r\n                                    aux.push(compromiso[cont]);\r\n                                } else {\r\n                                    aux.push(cumplimiento[cont]);\r\n                                    cont++;\r\n                                }\r\n                            }\r\n                            res.status(200).json({\r\n                                registros: aux\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.statis(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            error\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar detalle últimos seis meses\r\nginventario.listarDetalleGestionSeis = async (req, res) => {\r\n    const {tipo} = req.body;\r\n    \r\n    let sql = 'select extract(month from fr.fecha_compromiso) as mes, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\r\n    sql += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\r\n    sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\tsql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n    sql += 'from crosstab( $$ ';\r\n    sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\r\n    sql += 'from gestion ';\r\n    sql += 'where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n    sql += 'group by fecha_compromiso, año ';\r\n    sql += 'order by fecha_compromiso, año ';\r\n    sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n    sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            let sqli = 'select extract(month from fr.fecha_compromiso) as mes, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\r\n            sqli += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\r\n            sqli += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\t        sqli += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n            sqli += 'from crosstab( $$ ';\r\n            sqli += 'select fecha_compromiso, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion ';\r\n            sqli += 'where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n            sqli += 'group by fecha_compromiso, año ';\r\n            sqli += 'order by fecha_compromiso, año ';\r\n            sqli += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n            try {\r\n                const compromiso = await (await pool.query(sqli)).rows;\r\n                if(compromiso.length > 0) {\r\n                    let sqlii = 'select extract(month from fr.fecha_compromiso) as mes, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\r\n                    sql += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\r\n                    sqlii += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\t                sqlii += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n                    sqlii += 'from crosstab( $$ ';\r\n                    sqlii += 'select fecha_compromiso, año, sum(cumplimiento) as cumplimiento ';\r\n                    sqlii += 'from gestion ';\r\n                    sqlii += 'where jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'6\\' month) and fecha_compromiso < now() ';\r\n                    sqlii += 'group by fecha_compromiso, año ';\r\n                    sqlii += 'order by fecha_compromiso, año ';\r\n                    sqlii += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n                    sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n                    try {\r\n                        const cumplimiento = await (await pool.query(sqlii)).rows;\r\n                        if(cumplimiento.length > 0){\r\n                            let aux = [];\r\n                            let cont = 0;\r\n                            for (let index = 0; index < causas.length*3; index++) {\r\n                                if(index%3==0){\r\n                                    aux.push(causas[cont]);\r\n                                } else if(index%3==1) {\r\n                                    aux.push(compromiso[cont]);\r\n                                } else {\r\n                                    aux.push(cumplimiento[cont]);\r\n                                    cont++;\r\n                                }\r\n                            }\r\n                            res.status(200).json({\r\n                                registros: aux\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.statis(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            error\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar detalle tribunal últimos cuatro meses y próximos dos meses\r\nginventario.listarDetallaTribunalGestionSeis = async (req, res) => {\r\n    const {tipo, tribunal} = req.body;\r\n    \r\n    let sql = 'select extract(month from fr.fecha_compromiso) as mes, extract(year from fr.fecha_compromiso) as año, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\r\n    sql += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\r\n    sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\tsql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n    sql += 'from crosstab( $$ ';\r\n    sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\r\n    sql += 'from gestion ';\r\n    sql += 'where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'4\\' month) and fecha_compromiso < date_trunc(\\'month\\', current_date + interval \\'2\\' month) ';\r\n    sql += 'group by fecha_compromiso, año ';\r\n    sql += 'order by fecha_compromiso, año ';\r\n    sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n    sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n    try {\r\n        const causas = await (await pool.query(sql)).rows;\r\n        if (causas.length > 0) {\r\n            let sqli = 'select extract(month from fr.fecha_compromiso) as mes, extract(year from fr.fecha_compromiso) as año, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\r\n            sqli += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\r\n            sqli += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\t        sqli += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n            sqli += 'from crosstab( $$ ';\r\n            sqli += 'select fecha_compromiso, año, sum(compromiso) as compromiso ';\r\n            sqli += 'from gestion ';\r\n            sqli += 'where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'3\\' month) and fecha_compromiso < date_trunc(\\'month\\', current_date + interval \\'2\\' month) ';\r\n            sqli += 'group by fecha_compromiso, año ';\r\n            sqli += 'order by fecha_compromiso, año ';\r\n            sqli += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n            sqli += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n            try {\r\n                const compromiso = await (await pool.query(sqli)).rows;\r\n                if(compromiso.length > 0) {\r\n                    let sqlii = 'select extract(month from fr.fecha_compromiso) as mes, extract(year from fr.fecha_compromiso) as año, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\r\n                    sqlii += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\r\n                    sqlii += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\t                sqlii += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n                    sqlii += 'from crosstab( $$ ';\r\n                    sqlii += 'select fecha_compromiso, año, sum(cumplimiento) as cumplimiento ';\r\n                    sqlii += 'from gestion ';\r\n                    sqlii += 'where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'3\\' month) and fecha_compromiso < date_trunc(\\'month\\', current_date + interval \\'2\\' month) ';\r\n                    sqlii += 'group by fecha_compromiso, año ';\r\n                    sqlii += 'order by fecha_compromiso, año ';\r\n                    sqlii += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n                    sqlii += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n                    try {\r\n                        const cumplimiento = await (await pool.query(sqlii)).rows;\r\n                        if(cumplimiento.length > 0){\r\n                            let aux = [];\r\n                            let cont = 0;\r\n                            for (let index = 0; index < causas.length*3; index++) {\r\n                                if(index%3==0){\r\n                                    aux.push(causas[cont]);\r\n                                } else if(index%3==1) {\r\n                                    aux.push(compromiso[cont]);\r\n                                } else {\r\n                                    aux.push(cumplimiento[cont]);\r\n                                    cont++;\r\n                                }\r\n                            }\r\n                            res.status(200).json({\r\n                                registros: aux\r\n                            });\r\n                        }\r\n                    } catch (error) {\r\n                        res.statis(500).json({\r\n                            message: 'Ocurrió un problema',\r\n                            error\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                res.status(500).json({\r\n                    message: 'Ocurrió un problema',\r\n                    error\r\n                });\r\n            }\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n//Listar reduccion inventario tribunal ultimos 3 meses\r\nginventario.listarReduccionTribunal = async (req, res) => {\r\n\r\n    const {tipo, tribunal} = req.body;\r\n\r\n    let sql = 'select extract(month from fr.fecha_compromiso) as mes, extract(year from fr.fecha_compromiso) as año, coalesce(fr.\"2015\",0) as a_2015, coalesce(fr.\"2016\",0) as a_2016, coalesce(fr.\"2017\",0) as a_2017, ';\r\n    sql += 'coalesce(fr.\"2018\",0) as a_2018, coalesce(fr.\"2019\",0) as a_2019, coalesce(fr.\"2020\",0) as a_2020, coalesce(fr.\"2021\",0) as a_2021, ';\r\n    sql += '(coalesce(fr.\"2015\",0) + coalesce(fr.\"2016\",0) + coalesce(fr.\"2017\",0) + ';\r\n\tsql += 'coalesce(fr.\"2018\",0) + coalesce(fr.\"2019\",0) + coalesce(fr.\"2020\",0) + coalesce(fr.\"2021\", 0)) as total ';\r\n    sql += 'from crosstab( $$ ';\r\n    sql += 'select fecha_compromiso, año, sum(causas) as inventario ';\r\n    sql += 'from gestion ';\r\n    sql += 'where cod_tribunal = '+tribunal+' and jurisdiccion = \\''+tipo+'\\' and fecha_compromiso >= date_trunc(\\'month\\', current_date - interval \\'3\\' month) and fecha_compromiso < now() ';\r\n    sql += 'group by fecha_compromiso, año ';\r\n    sql += 'order by fecha_compromiso, año ';\r\n    sql += '$$ ) as fr(fecha_compromiso date, \"2015\" bigint, \"2016\" bigint, \"2017\" bigint, \"2018\" bigint, ';\r\n    sql += '\"2019\" bigint, \"2020\" bigint, \"2021\" bigint) ';\r\n\r\n    try {\r\n        const inventario = await (await pool.query(sql)).rows;\r\n        if(inventario.length > 0){\r\n            res.status(200).json({\r\n                registros: inventario\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n\r\n}\r\n\r\n//Tasa de reduccion\r\nginventario.tasaReduccionTribunal = async(req, res) => {\r\n\r\n    const {tipo, tribunal} = req.body;\r\n\r\n    let sql = 'select avg(cumplimiento) as promedio from ( ';\r\n    sql += 'select fecha_compromiso, sum(cumplimiento) as cumplimiento ';\r\n    sql += 'from gestion where cod_tribunal = '+tribunal+' and jurisdiccion=\\''+tipo+'\\' group by fecha_compromiso ';\r\n    sql += ') as fr';\r\n    try {\r\n        const promedio = await (await pool.query(sql)).rows;\r\n        if(promedio.length > 0){\r\n            res.status(200).json({\r\n                promedio: promedio\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                message: 'No se encontraron registros',\r\n                NotFound: true\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema',\r\n            error\r\n        });\r\n    }\r\n\r\n}\r\n\r\n//Mes Compromiso\r\nginventario.mesCompromiso = async(req, res) => {\r\n    const {tipo, tribunal} = req.body;\r\n\r\n    let sql = 'select date_trunc(\\'month\\', max(fecha_compromiso) + interval \\'1\\' month) as prox_compromiso from gestion where cod_tribunal = $1';\r\n    try {\r\n        const mes = await (await pool.query(sql, [tribunal])).rows;\r\n        if(mes.length > 0){\r\n            res.status(200).json({\r\n                mes: mes\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                mes: mes\r\n            });\r\n        }\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nmodule.exports = ginventario;"
      ]
    },
    "sourceType": "script",
    "mtime": 1621633368255
  },
  "{\"assumptions\":{},\"sourceRoot\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"filename\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\\\\controllers\\\\usuario.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\jcastroa\\\\Documents\\\\Desarrollo\\\\node\\\\jjgg\\\\servidor\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\usuario.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\usuario.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\usuario.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
        "sourceFileName": "usuario.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _keys = _interopRequireDefault(require(\"../database/keys\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar usuariosis = {}; //Verificar login\n\nusuariosis.login = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, usuario, password, sql, credencial;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, usuario = _req$body.usuario, password = _req$body.password;\n            sql = 'select usuario.tribunal, tribunal.gls_tribunal, tribunal.cod_corte, tribunal.jurisdiccion, corte.gls_corte, usuario.tipo ';\n            sql += 'from tribunal, usuario, corte ';\n            sql += 'where usuario.nombre = $1 and usuario.password = $2 and usuario.tribunal = tribunal.cod_tribunal and tribunal.cod_corte = corte.cod_corte';\n            _context.prev = 4;\n            _context.next = 7;\n            return _keys[\"default\"].query(sql, [usuario, password]);\n\n          case 7:\n            _context.next = 9;\n            return _context.sent.rows;\n\n          case 9:\n            credencial = _context.sent;\n\n            if (credencial.length > 0) {\n              res.status(200).json({\n                credencial: credencial,\n                respuesta: true\n              });\n            } else {\n              res.status(200).json({\n                credencial: [0],\n                respuesta: false\n              });\n            }\n\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](4);\n            res.status(500).json({\n              message: 'Ocurrió un problema al conectar la base de datos',\n              respuesta: false,\n              error: _context.t0\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = usuariosis;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzdWFyaW8uanMiXSwibmFtZXMiOlsidXN1YXJpb3NpcyIsImxvZ2luIiwicmVxIiwicmVzIiwiYm9keSIsInVzdWFyaW8iLCJwYXNzd29yZCIsInNxbCIsInBvb2wiLCJxdWVyeSIsInJvd3MiLCJjcmVkZW5jaWFsIiwibGVuZ3RoIiwic3RhdHVzIiwianNvbiIsInJlc3B1ZXN0YSIsIm1lc3NhZ2UiLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLEVBQW5CLEMsQ0FFQTs7QUFDQUEsVUFBVSxDQUFDQyxLQUFYO0FBQUEscUVBQW1CLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHdCQUNhRCxHQUFHLENBQUNFLElBRGpCLEVBQ1JDLE9BRFEsYUFDUkEsT0FEUSxFQUNDQyxRQURELGFBQ0NBLFFBREQ7QUFHWEMsWUFBQUEsR0FIVyxHQUdMLDJIQUhLO0FBSWZBLFlBQUFBLEdBQUcsSUFBSSxnQ0FBUDtBQUNBQSxZQUFBQSxHQUFHLElBQUksMklBQVA7QUFMZTtBQUFBO0FBQUEsbUJBT3FCQyxpQkFBS0MsS0FBTCxDQUFXRixHQUFYLEVBQWdCLENBQUNGLE9BQUQsRUFBVUMsUUFBVixDQUFoQixDQVByQjs7QUFBQTtBQUFBO0FBQUEsaUNBTzJESSxJQVAzRDs7QUFBQTtBQU9MQyxZQUFBQSxVQVBLOztBQVFYLGdCQUFHQSxVQUFVLENBQUNDLE1BQVgsR0FBb0IsQ0FBdkIsRUFBeUI7QUFDckJULGNBQUFBLEdBQUcsQ0FBQ1UsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pCSCxnQkFBQUEsVUFBVSxFQUFFQSxVQURLO0FBRWpCSSxnQkFBQUEsU0FBUyxFQUFFO0FBRk0sZUFBckI7QUFJSCxhQUxELE1BS087QUFDSFosY0FBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJILGdCQUFBQSxVQUFVLEVBQUcsQ0FBQyxDQUFELENBREk7QUFFakJJLGdCQUFBQSxTQUFTLEVBQUU7QUFGTSxlQUFyQjtBQUlIOztBQWxCVTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQW9CWFosWUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakJFLGNBQUFBLE9BQU8sRUFBRSxrREFEUTtBQUVqQkQsY0FBQUEsU0FBUyxFQUFFLEtBRk07QUFHakJFLGNBQUFBLEtBQUs7QUFIWSxhQUFyQjs7QUFwQlc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBbkI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBNEJBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJuQixVQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcamNhc3Ryb2FcXERvY3VtZW50c1xcRGVzYXJyb2xsb1xcbm9kZVxcampnZ1xcc2Vydmlkb3JcXGNvbnRyb2xsZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcG9vbCBmcm9tICcuLi9kYXRhYmFzZS9rZXlzJztcclxuXHJcbmNvbnN0IHVzdWFyaW9zaXMgPSB7fTtcclxuXHJcbi8vVmVyaWZpY2FyIGxvZ2luXHJcbnVzdWFyaW9zaXMubG9naW4gPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGNvbnN0IHt1c3VhcmlvLCBwYXNzd29yZH0gPSByZXEuYm9keTtcclxuXHJcbiAgICBsZXQgc3FsID0gJ3NlbGVjdCB1c3VhcmlvLnRyaWJ1bmFsLCB0cmlidW5hbC5nbHNfdHJpYnVuYWwsIHRyaWJ1bmFsLmNvZF9jb3J0ZSwgdHJpYnVuYWwuanVyaXNkaWNjaW9uLCBjb3J0ZS5nbHNfY29ydGUsIHVzdWFyaW8udGlwbyAnO1xyXG4gICAgc3FsICs9ICdmcm9tIHRyaWJ1bmFsLCB1c3VhcmlvLCBjb3J0ZSAnOyBcclxuICAgIHNxbCArPSAnd2hlcmUgdXN1YXJpby5ub21icmUgPSAkMSBhbmQgdXN1YXJpby5wYXNzd29yZCA9ICQyIGFuZCB1c3VhcmlvLnRyaWJ1bmFsID0gdHJpYnVuYWwuY29kX3RyaWJ1bmFsIGFuZCB0cmlidW5hbC5jb2RfY29ydGUgPSBjb3J0ZS5jb2RfY29ydGUnO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBjcmVkZW5jaWFsID0gYXdhaXQgKGF3YWl0IHBvb2wucXVlcnkoc3FsLCBbdXN1YXJpbywgcGFzc3dvcmRdKSkucm93cztcclxuICAgICAgICBpZihjcmVkZW5jaWFsLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBjcmVkZW5jaWFsOiBjcmVkZW5jaWFsLFxyXG4gICAgICAgICAgICAgICAgcmVzcHVlc3RhOiB0cnVlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIGNyZWRlbmNpYWwgOiBbMF0sXHJcbiAgICAgICAgICAgICAgICByZXNwdWVzdGE6IGZhbHNlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICBtZXNzYWdlOiAnT2N1cnJpw7MgdW4gcHJvYmxlbWEgYWwgY29uZWN0YXIgbGEgYmFzZSBkZSBkYXRvcycsXHJcbiAgICAgICAgICAgIHJlc3B1ZXN0YTogZmFsc2UsXHJcbiAgICAgICAgICAgIGVycm9yXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gdXN1YXJpb3NpczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "usuario.js"
      ],
      "names": [
        "usuariosis",
        "login",
        "req",
        "res",
        "body",
        "usuario",
        "password",
        "sql",
        "pool",
        "query",
        "rows",
        "credencial",
        "length",
        "status",
        "json",
        "respuesta",
        "message",
        "error",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;;;AAEA,IAAMA,UAAU,GAAG,EAAnB,C,CAEA;;AACAA,UAAU,CAACC,KAAX;AAAA,qEAAmB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACaD,GAAG,CAACE,IADjB,EACRC,OADQ,aACRA,OADQ,EACCC,QADD,aACCA,QADD;AAGXC,YAAAA,GAHW,GAGL,2HAHK;AAIfA,YAAAA,GAAG,IAAI,gCAAP;AACAA,YAAAA,GAAG,IAAI,2IAAP;AALe;AAAA;AAAA,mBAOqBC,iBAAKC,KAAL,CAAWF,GAAX,EAAgB,CAACF,OAAD,EAAUC,QAAV,CAAhB,CAPrB;;AAAA;AAAA;AAAA,iCAO2DI,IAP3D;;AAAA;AAOLC,YAAAA,UAPK;;AAQX,gBAAGA,UAAU,CAACC,MAAX,GAAoB,CAAvB,EAAyB;AACrBT,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBH,gBAAAA,UAAU,EAAEA,UADK;AAEjBI,gBAAAA,SAAS,EAAE;AAFM,eAArB;AAIH,aALD,MAKO;AACHZ,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBH,gBAAAA,UAAU,EAAG,CAAC,CAAD,CADI;AAEjBI,gBAAAA,SAAS,EAAE;AAFM,eAArB;AAIH;;AAlBU;AAAA;;AAAA;AAAA;AAAA;AAoBXZ,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBE,cAAAA,OAAO,EAAE,kDADQ;AAEjBD,cAAAA,SAAS,EAAE,KAFM;AAGjBE,cAAAA,KAAK;AAHY,aAArB;;AApBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;AA4BAC,MAAM,CAACC,OAAP,GAAiBnB,UAAjB",
      "sourceRoot": "D:\\jcastroa\\Documents\\Desarrollo\\node\\jjgg\\servidor\\controllers\\",
      "sourcesContent": [
        "import pool from '../database/keys';\r\n\r\nconst usuariosis = {};\r\n\r\n//Verificar login\r\nusuariosis.login = async (req, res) => {\r\n    const {usuario, password} = req.body;\r\n\r\n    let sql = 'select usuario.tribunal, tribunal.gls_tribunal, tribunal.cod_corte, tribunal.jurisdiccion, corte.gls_corte, usuario.tipo ';\r\n    sql += 'from tribunal, usuario, corte '; \r\n    sql += 'where usuario.nombre = $1 and usuario.password = $2 and usuario.tribunal = tribunal.cod_tribunal and tribunal.cod_corte = corte.cod_corte';\r\n    try {\r\n        const credencial = await (await pool.query(sql, [usuario, password])).rows;\r\n        if(credencial.length > 0){\r\n            res.status(200).json({\r\n                credencial: credencial,\r\n                respuesta: true\r\n            });\r\n        } else {\r\n            res.status(200).json({\r\n                credencial : [0],\r\n                respuesta: false\r\n            });\r\n        }\r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message: 'Ocurrió un problema al conectar la base de datos',\r\n            respuesta: false,\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\nmodule.exports = usuariosis;"
      ]
    },
    "sourceType": "script",
    "mtime": 1621599404885
  }
}